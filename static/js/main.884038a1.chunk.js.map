{"version":3,"sources":["redux/actionTypes.js","redux/reducers/debug.js","redux/reducers/level.js","redux/reducers/score.js","redux/reducers/screen.js","redux/reducers/index.js","util/Log.js","redux/sagas/actionLogger.js","redux/actions.js","redux/sagas/gameComplete.js","redux/selectors/index.js","redux/sagas/levelComplete.js","redux/sagas/startLevel.js","redux/sagas/startGame.js","redux/sagas/index.js","redux/store.js","util/Util.js","engine/Magnet.js","engine/GameEngine.js","components/Game.js","components/Level.js","components/Score.js","components/WireframeCheckbox.js","screen/StartLevelScreen.js","screen/StartScreen.js","screen/index.js","screen/GameScreen.js","screen/GameCompleteScreen.js","components/App.js","index.js"],"names":["START_GAME","LEVEL_COMPLETE","GAME_COMPLETE","START_LEVEL","initialState","wireframe","current","last","combineReducers","debug","state","arguments","length","undefined","action","type","Object","objectSpread","payload","enabled","level","Error","concat","score","points","screen","levelStringLengths","map","widestLevel","_","max","Log","classCallCheck","this","createClass","key","value","message","log","now","Date","messageString","console","toISOString","padStart","actionLogger","actionLoggerListener","regenerator_default","a","wrap","_context","prev","next","info","stop","_marked","_context2","takeEvery","_marked2","gameComplete","levelChange","startLevel","screenChange","gameCompleteListener","put","gameComplete_marked","gameComplete_marked2","isLastLevel","createSelector","lastLevel","levelComplete","levelCompleteListener","select","sent","levelComplete_marked","levelComplete_marked2","startLevelListener","call","delay","startLevel_marked","startLevel_marked2","startGame","startGameListener","startGame_marked","startGame_marked2","sagas","storeFactory","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","forEach","saga","run","Util","min","Magnet","args","constraints","acceleration","speed","dragging","x","y","minX","maxX","width","height","world","maxAcceleration","maxSpeed","peakHeight","vertices","body","Bodies","fromVertices","label","isStatic","render","fillStyle","position","World","add","other","constraint","Constraint","create","bodyA","bodyB","visible","push","event","buttons","which","canvasRect","button","toggle","leftButtonPressed","clientX","left","clientY","top","Bounds","contains","bounds","Body","setPosition","dt","clamp","dx","setEnabled","remove","GameEngine","container","scoreUpdate","_this","ballImageSize","boxHeight","boxWidth","magnetHeight","magnetWidth","wallThickness","lastUpdateTimestamp","started","stopped","_handleCollision","that","pairs","pair","Sleeping","set","remainingObjectIds","delete","id","_handleMouseEvent","rect","renderer","canvas","getBoundingClientRect","magnet","handleMouseEvent","_handleKeyPress","repeat","right","_handleBeforeUpdate","timestamp","update","_isEverythingSleeping","size","engine","Engine","gravity","enableSleeping","ballRadius","ballHeight","ballWidth","_createMagnet","ball","_createBall","walls","_createWalls","objects","_createObjects","object","Set","attachToMagnet","toConsumableArray","addToWorld","Composite","allBodies","Render","element","options","background","setWireframe","Events","on","document","addEventListener","focus","removeEventListener","off","every","bodies","isSleeping","wallOptions","rectangle","xLimit","Math","_initialX","attachmentPosition","circle","sprite","texture","restitution","frictionAir","frictionStatic","_this2","random","seedrandom","range","i","radius","border","wireframes","showSleeping","showAngleIndicator","allConstraints","Game","_Component","props","possibleConstructorReturn","getPrototypeOf","gameEngine","inherits","getElementById","CONTAINER_ID","getContainer","react_default","createElement","className","tabIndex","nonNull","start","_startEngine","_stopEngine","prevProps","prevState","Component","actionCreators","connect","Level","_getPrototypeOf2","_len","Array","_key","apply","handleClick","target","currentTarget","parseInt","onChange","numberOfLevels","WireframeCheckbox","setWireframeMode","checked","StartScreen","ref","React","createRef","onClick","onKeyPress","screens","game","components_Score","components_Game","components_Level","components_WireframeCheckbox","StartLevelScreen","component","App","es","src_screen","window","decomp","require","rootElement","ReactDOM","src_components_App"],"mappings":"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","file":"static/js/main.884038a1.chunk.js","sourcesContent":["// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport type { ScreenType } from '../screen';\n\nexport const START_GAME = 'START_GAME';\nexport type StartGameAction = {\n  type: typeof(START_GAME)\n};\n\nexport const LEVEL_COMPLETE = 'LEVEL_COMPLETE';\nexport type LevelCompleteAction = {\n  type: typeof(LEVEL_COMPLETE)\n};\n\nexport const GAME_COMPLETE = 'GAME_COMPLETE';\nexport type GameCompleteAction = {\n  type: typeof(GAME_COMPLETE)\n};\n\nexport const LEVEL_CHANGE = 'LEVEL_CHANGE';\nexport type LevelChangeAction = {\n  type: typeof(LEVEL_CHANGE),\n  payload: { level: number }\n};\n\nexport const START_LEVEL = 'START_LEVEL';\nexport type StartLevelAction = {\n  type: typeof(START_LEVEL)\n};\n\nexport const SCORE_UPDATE = 'SCORE_UPDATE';\nexport type ScoreUpdateAction = {\n  type: typeof(SCORE_UPDATE),\n  payload: { points: number }\n};\n\nexport const SCREEN_CHANGE = 'SCREEN_CHANGE';\nexport type ScreenChangeAction = {\n  type: typeof(SCREEN_CHANGE),\n  payload: { screen: ScreenType }\n};\n\nexport const SET_WIREFRAME_MODE = 'SET_WIREFRAME_MODE';\nexport type SetWireframeModeAction = {\n  type: typeof(SET_WIREFRAME_MODE),\n  payload: { enabled: boolean }\n};\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\n\nimport { Action } from 'redux';\nimport { SET_WIREFRAME_MODE } from '../actionTypes';\n\nexport type DebugState = {\n  +wireframe: boolean\n}\n\nconst initialState: DebugState = {\n  wireframe: false\n}\n\nexport const debug = (state: DebugState = initialState, action: Action): DebugState => {\n  switch (action.type) {\n    case SET_WIREFRAME_MODE: {\n      return {...state, wireframe: action.payload.enabled};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { LEVEL_CHANGE } from '../actionTypes';\n\nexport type LevelState = {\n  +current: number,\n  +last: number\n}\n\nconst initialState: LevelState = {\n  current: 1,\n  last: 5\n}\n\nexport const level = (state: LevelState = initialState, action: Action): LevelState => {\n  switch (action.type) {\n    case LEVEL_CHANGE: {\n      let level: number = action.payload.level;\n      if (level === null) {\n        level = state.current + 1;\n      }\n      if (level < 1 || level > state.last) {\n        throw new Error(`level out of range: ${level}`);\n      }\n      return {...state, current: level};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { SCORE_UPDATE } from '../actionTypes';\n\nexport type ScoreState = {\n  +current: number\n}\n\nconst initialState: ScoreState = {\n  current: 0\n}\n\nexport const score = (state: ScoreState = initialState, action: Action): ScoreState => {\n  let { current } = state;\n  switch (action.type) {\n    case SCORE_UPDATE: {\n      const points: number = action.payload.points;\n      current += points;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { SCREEN_CHANGE } from '../actionTypes';\nimport type { ScreenType } from '../../screen';\n\nexport type ScreenState = {\n  +current: ScreenType\n}\n\nconst initialState: ScreenState = {\n  current: \"start\",\n}\n\nexport const screen = (state: ScreenState = initialState, action: Action): ScreenState => {\n  switch (action.type) {\n    case SCREEN_CHANGE: {\n      const current: ScreenType = action.payload.screen;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { combineReducers } from \"redux\";\n\nimport { debug } from \"./debug\";\nimport { level } from \"./level\";\nimport { score } from \"./score\";\nimport { screen } from \"./screen\";\n\nexport default combineReducers({\n  debug,\n  level,\n  score,\n  screen\n});","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport _ from 'lodash';\n\ntype Message = string | () => string;\n\ntype Level = 'INFO' | 'DEBUG';\n\nconst levels: Level[] = ['INFO', 'DEBUG'];\n\nconst levelStringLengths: number[] = levels.map(\n  (level: Level) => level.length\n);\n\nconst widestLevel: number = _.max(levelStringLengths);\n\nexport class Log {\n\n  static info(message: Message) {\n    this.log('INFO', message);\n  }\n\n  static debug(message: Message) {\n    this.log('DEBUG', message);\n  }\n\n  static log(level: Level, message: Message) {\n    // If implement log-level setting, only evaluate function and timestamp if need to.\n    const now = new Date();\n    const messageString: string = (typeof message === 'function') ? message() : message;\n    console.log(`${now.toISOString()} ${level.padStart(widestLevel)} ${messageString}`)\n  }\n\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { takeEvery } from 'redux-saga/effects';\n\nimport type { Action } from 'redux';\n\nimport { Log } from '../../util/Log';\n\n// eslint-disable-next-line require-yield\nexport function* actionLogger(action: Action): Generator<*,*,*> {\n  Log.info(`Action: ${action.type}`);\n}\n\nexport function* actionLoggerListener(): Generator<*,*,*> {\n  yield takeEvery(\"*\", actionLogger);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  GAME_COMPLETE,\n  LEVEL_COMPLETE,\n  LEVEL_CHANGE,\n  START_LEVEL,\n  SCORE_UPDATE,\n  SCREEN_CHANGE,\n  SET_WIREFRAME_MODE,\n  START_GAME\n} from './actionTypes'\nimport type { ScreenType } from '../screen';\n\nexport const startGame = () => ({\n  type: START_GAME\n});\n\nexport const gameComplete = () => ({\n  type: GAME_COMPLETE\n});\n\nexport const levelComplete = () => ({\n  type: LEVEL_COMPLETE\n});\n\nexport const levelChange = (level: ?number = null) => ({\n  type: LEVEL_CHANGE,\n  payload: {\n    level: level\n  }\n});\n\nexport const startLevel = () => ({\n  type: START_LEVEL\n});\n\nexport const scoreUpdate = (points: number) => ({\n  type: SCORE_UPDATE,\n  payload: {\n    points: points\n  }\n});\n\nexport const setWireframeMode = (enabled: boolean) => ({\n  type: SET_WIREFRAME_MODE,\n  payload: {\n    enabled\n  }\n});\n\nexport const screenChange = (screen: ScreenType) => ({\n  type: SCREEN_CHANGE,\n  payload: {\n    screen: screen\n  }\n});\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { GAME_COMPLETE } from '../actionTypes';\nimport { screenChange } from '../actions';\n\nexport function* gameComplete(): Generator<*,*,*> {\n  yield put(screenChange(\"gameComplete\"));\n}\n\nexport function* gameCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(GAME_COMPLETE, gameComplete);\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createSelector } from 'reselect'\n\nimport { type LevelState } from '../reducers/level';\n\ntype State = { level: LevelState }\n\nconst getLevel = (state: State) => state.level.current;\nconst getLastLevel = (state: State) => state.level.last;\n\nexport const isLastLevel = createSelector(\n  [getLevel, getLastLevel],\n  (level: number, lastLevel: number) => {\n    return level === lastLevel;\n  }\n)","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, select, takeEvery } from 'redux-saga/effects';\n\nimport { LEVEL_COMPLETE } from '../actionTypes';\nimport { levelChange, startLevel, gameComplete } from '../actions';\nimport { isLastLevel } from '../selectors';\n\nexport function* levelComplete(): Generator<*,*,*> {\n  if (yield select(isLastLevel)) {\n    yield put(gameComplete());\n  } else {\n    yield put(levelChange());\n    yield put(startLevel());\n  }\n}\n\nexport function* levelCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(LEVEL_COMPLETE, levelComplete);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { delay } from 'redux-saga'\n\nimport { START_LEVEL } from '../actionTypes';\nimport { screenChange } from '../actions';\n\nexport function* startLevel(): Generator<*,*,*> {\n  yield put(screenChange(\"startLevel\"));\n  yield call(delay, 2500);\n  yield put(screenChange(\"game\"));\n}\n\nexport function* startLevelListener(): Generator<*,*,*> {\n  yield takeEvery(START_LEVEL, startLevel);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { START_GAME } from '../actionTypes';\nimport { startLevel } from '../actions';\n\nexport function* startGame(): Generator<*,*,*> {\n  yield put(startLevel());\n}\n\nexport function* startGameListener(): Generator<*,*,*> {\n  yield takeEvery(START_GAME, startGame);\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { actionLoggerListener } from './actionLogger';\nimport { gameCompleteListener } from './gameComplete';\nimport { levelCompleteListener } from './levelComplete';\nimport { startLevelListener } from './startLevel';\nimport { startGameListener } from './startGame';\n\nexport default [\n  actionLoggerListener,\n  gameCompleteListener,\n  levelCompleteListener,\n  startLevelListener,\n  startGameListener\n];","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from \"./reducers\";\nimport sagas from './sagas';\n\nexport const storeFactory = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n  );\n  // $FlowFixMe - problem with Generator type parameters.\n  sagas.forEach((saga: Generator<*,*,*>) => {\n    sagaMiddleware.run(saga);\n  });\n  return store;\n};\n\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nexport class Util {\n\n  // Clamp value to be within the range [min, max].\n  static clamp(value: number, min: number, max: number): number {\n    if (max < min) {\n      throw new Error(`max of ${max} is less than min ${min} (with value of ${value})`);\n    }\n    if (value < min) {\n      value = min;\n    }\n    if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n\n  // Asserts that a maybe-typed value is not null or undefined.\n  static nonNull<T>(value: ?T): T {\n    if (value === null) {\n      throw new Error(\"null value.\");\n    }\n    if (value === undefined) {\n      throw new Error(\"undefined value.\");\n    }\n    return value;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Body,\n  Bodies,\n  Bounds,\n  Constraint,\n  World\n} from 'matter-js'\n\nimport { Util } from '../util/Util';\n\ntype Args = {\n  +x: number,\n  +y: number,\n  +minX: number,\n  +maxX: number,\n  +width: number,\n  +height: number,\n  +world: World,\n  +maxAcceleration?: number,\n  +maxSpeed?: number\n}\n\nexport class Magnet {\n\n  +body: Body;\n  +constraints: Constraint[] = [];\n  +height: number;\n  +width: number;\n  +maxAcceleration: number;\n  +maxSpeed: number;\n  +minX: number;\n  +maxX: number;\n  +world: World;\n\n  acceleration: number = 0;\n  enabled: boolean = true;\n  speed: number = 0;\n  dragging: boolean = false;\n\n  constructor(args: Args) {\n    const x = args.x;\n    const y = args.y;\n    this.minX = args.minX;\n    this.maxX = args.maxX;\n    this.width = args.width;\n    this.height = args.height;\n    this.world = args.world;\n    this.maxAcceleration = (args.maxAcceleration === undefined) ? 0.005 : args.maxAcceleration;\n    this.maxSpeed = (args.maxSpeed === undefined) ? 1.3 : args.maxSpeed;\n    const peakHeight = this.height * 0.2;\n    const vertices = [\n      { x: -this.width / 2, y: - this.height / 2 },\n      { x:               0, y: - this.height / 2 - peakHeight },\n      { x:  this.width / 2, y: - this.height / 2 },\n      { x:  this.width / 2, y:   this.height / 2},\n      { x: -this.width / 2, y:   this.height / 2}\n    ];\n    this.body = Bodies.fromVertices(x, y, vertices, {\n      label: \"magnet\",\n      isStatic: true,\n      render: {\n        fillStyle: 'Grey'\n      }\n    });\n  }\n\n  // Bottom centre coordinates of magnet.\n  attachmentPosition() {\n    return { x: this.body.position.x, y: this.body.position.y + this.height / 2 };\n  }\n\n  // Register the Magnet's matter.js Body with the matter.js World.\n  addToWorld() {\n    World.add(this.world, this.body);\n  }\n\n  // Connect another Body to the Magnet.\n  attachToMagnet(other: Body) {\n    const constraint: Constraint = Constraint.create({\n      bodyA: this.body,\n      bodyB: other,\n      render: {\n        visible: false\n      }\n    })\n    this.constraints.push(constraint);\n    if (this.enabled) {\n      World.add(this.world, constraint);\n    }\n  }\n\n  leftButtonPressed(event: MouseEvent) {\n    if (event.buttons === undefined) {\n      // Safari.\n      return event.which === 1;\n    } else {\n      return event.buttons & 1;\n    }\n  }\n\n  handleMouseEvent(\n    canvasRect: { left: number, top: number},\n    event: MouseEvent) {\n    if (event.type === 'mouseup' && event.button === 0) {\n      if (this.dragging) {\n        this.toggle();\n      }\n    }\n    if (!this.leftButtonPressed(event)) {\n      this.dragging = false;\n      return;\n    }\n    const position = {\n      x: event.clientX - canvasRect.left,\n      y: event.clientY - canvasRect.top\n    };\n    const onMagnet = Bounds.contains(this.body.bounds, position);\n    if (onMagnet) {\n      this.dragging = true;\n    }\n    if (this.dragging) {\n      this.stop();\n      Body.setPosition(this.body, { x: position.x, y: this.body.position.y});\n    }\n  }\n\n  // Start movement to left.\n  left() {\n    if (this.speed > 0) {\n      this.speed = 0;\n    }\n    this.acceleration = -this.maxAcceleration;\n  }\n\n  // Start movement to right.\n  right() {\n    if (this.speed < 0) {\n      this.speed = 0;\n    }\n    this.acceleration = this.maxAcceleration;\n  }\n\n  // Stop movement.\n  stop() {\n    this.acceleration = 0;\n    this.speed = 0;\n  }\n\n  // Handle matter.js update callback.\n  //\n  // dt - time since last update\n  update(dt: number) {\n    this.speed = Util.clamp(\n      this.speed + this.acceleration * dt,\n      -this.maxSpeed, this.maxSpeed);\n    const dx = this.speed * dt;\n    const x = Util.clamp(\n      this.body.position.x + dx,\n      this.minX, this.maxX);\n    const y = this.body.position.y;\n    Body.setPosition(this.body, { x, y });\n  }\n\n  // Turn the magnet on or off.\n  toggle() {\n    this.setEnabled(!this.enabled);\n    this.dragging = false;\n  }\n\n  // Turn the magnet on or off.\n  setEnabled(enabled: boolean) {\n    if (enabled) {\n      if (!this.enabled) {\n        World.add(this.world, this.constraints);\n      }\n    } else {\n      if (this.enabled) {\n        World.remove(this.world, this.constraints);\n      }\n    }\n    this.enabled = enabled;\n  }\n\n  // For testing.\n  getSpeed(): number {\n    return this.speed;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Bodies,\n  Body,\n  Composite,\n  Engine,\n  Events,\n  Pair,\n  Render,\n  Sleeping,\n  World\n} from 'matter-js'\nimport _ from 'lodash';\nimport seedrandom from 'seedrandom';\n\nimport { Log } from '../util/Log';\nimport { Magnet } from './Magnet';\n\nexport class GameEngine {\n\n  +ball: Body;\n  +ballImageSize: number = 64; // pixels\n  +ballRadius: number;\n  +ballHeight: number;\n  +ballWidth: number;\n  +boxHeight: number = 600;\n  +boxWidth: number = 800;\n  +container: HTMLElement;\n  +engine: Engine;\n  +level: number;\n  +magnet: Magnet;\n  +magnetHeight: number = 15;\n  +magnetWidth: number = 50;\n  +levelComplete: () => void;\n  +remainingObjectIds: Set<number>;\n  +renderer: Render;\n  +scoreUpdate: (points: number) => void;\n  +walls: Body[];\n  +wallThickness: number = 50;\n\n  lastUpdateTimestamp: ?number = null;\n  started: boolean = false;\n  stopped: boolean = false;\n  wireframe: boolean;\n\n  constructor(\n    container: HTMLElement,\n    level: number,\n    wireframe: boolean,\n    levelComplete: () => void,\n    scoreUpdate: (points: number) => void) {\n    \n    this.levelComplete = levelComplete;\n    this.scoreUpdate = scoreUpdate;\n    this.level = level;\n    this.wireframe = wireframe;\n    this.container = container;\n    this.engine = Engine.create();\n    this.engine.world.gravity.y = 0.2;\n    this.engine.enableSleeping = true;\n    this.ballRadius = 1.025 * this.ballImageSize / 2.0\n    this.ballHeight = this.ballRadius;\n    this.ballWidth = this.ballRadius;\n    this.magnet = this._createMagnet();\n    this.ball = this._createBall(this.magnet);\n    const walls = this._createWalls();\n    const objects = this._createObjects();\n    const remainingObjectIds = _.map(objects, (object: Body) => {\n      return object.id;\n    });\n    this.remainingObjectIds = new Set(remainingObjectIds);\n    this.magnet.attachToMagnet(this.ball);\n    World.add(this.engine.world, [\n      ...walls,\n      this.ball,\n      ...objects\n    ]);\n    this.magnet.addToWorld();\n    Log.info('Body ids:');\n    Composite.allBodies(this.engine.world).forEach((body: Body) => {\n      Log.info(`${body.id} - ${body.label}`);\n    });\n    this.renderer = Render.create({\n      element: this.container,\n      engine: this.engine,\n      options: {\n        background: \"#fafafa\",\n        width: this.boxWidth,\n        height: this.boxHeight\n      }\n    });\n    this.setWireframe(this.wireframe);\n  }\n\n  start() {\n    if (this.started) {\n      throw new Error(\"already started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"cannot restart.\");\n    }\n    Events.on(this.engine, 'collisionStart', this._handleCollision);\n    Events.on(this.engine, 'beforeUpdate', this._handleBeforeUpdate);\n    Engine.run(this.engine);\n    Render.run(this.renderer);\n    document.addEventListener('keydown', this._handleKeyPress);\n    document.addEventListener('keyup', this._handleKeyPress);\n    this.renderer.canvas.addEventListener('mousedown', this._handleMouseEvent);\n    this.renderer.canvas.addEventListener('mousemove', this._handleMouseEvent);\n    this.renderer.canvas.addEventListener('mouseup', this._handleMouseEvent);\n    this.container.focus();\n    this.started = true;\n  }\n\n  stop() {\n    if (!this.started) {\n      throw new Error(\"not started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"already stopped\");\n    }\n    this.renderer.canvas.removeEventListener('mouseup', this._handleMouseEvent);\n    this.renderer.canvas.removeEventListener('mousedown', this._handleMouseEvent);\n    this.renderer.canvas.removeEventListener('mousemove', this._handleMouseEvent);\n    document.removeEventListener('keydown', this._handleKeyPress);\n    document.removeEventListener('keyup', this._handleKeyPress);\n    Render.stop(this.renderer);\n    Events.off(this.engine, 'collisionStart');\n    Events.off(this.engine, 'beforeUpdate');\n    this.renderer.canvas.remove();\n    this.started = false;\n    this.stopped = true;\n  }\n\n  _handleCollision = (event: (pairs: [Pair]) => void) => {\n    const that = this;\n    const pairs = event.pairs;\n    pairs.forEach((pair: Pair) => {\n      [pair.bodyA, pair.bodyB].forEach((body: Body) => {\n        Sleeping.set(body, false);\n        const dislodged = that.remainingObjectIds.delete(body.id);\n        if (dislodged) {\n          const points = 1;\n          that.scoreUpdate(points);\n        }\n      });\n    });\n  }\n\n  _handleMouseEvent = (event: MouseEvent) => {\n    var rect = this.renderer.canvas.getBoundingClientRect();\n    this.magnet.handleMouseEvent(rect, event);\n  }\n\n  _handleKeyPress = (event: KeyboardEvent) => {\n    if (event.repeat) {\n      return;\n    }\n    if (event.type === \"keydown\" && event.key === \" \") {\n      this.magnet.toggle();\n    }\n    if (event.type === \"keydown\") {\n      if (event.key === 'ArrowLeft') {\n        this.magnet.left();\n      } else if (event.key === 'ArrowRight') {\n        this.magnet.right();\n      }\n    } else if (event.type === \"keyup\") {\n      this.magnet.stop();\n    } else {\n      throw new Error(event);\n    }\n  }\n\n  _handleBeforeUpdate = (event: {timestamp: number}) => {\n    if (this.lastUpdateTimestamp === undefined) {\n      throw new Error(); // flow type refinement\n    }\n    if (!(this.lastUpdateTimestamp === null)) {\n      const dt: number = event.timestamp - this.lastUpdateTimestamp;\n      this.magnet.update(dt);\n    }\n    if (this._isEverythingSleeping()) {\n      if (this.remainingObjectIds.size === 0) {\n        this.levelComplete();\n      } else {\n        this.magnet.setEnabled(true);\n      }\n    }\n    this.lastUpdateTimestamp = event.timestamp;\n  }\n\n  _isEverythingSleeping() {\n    return _.every(this.engine.world.bodies, (body: Body) => {\n      return body.isSleeping;\n    });\n  }\n\n  _createWalls(): Body[] {\n    const wallOptions = {\n      isStatic: true,\n      render: {\n        fillStyle: 'LightGrey'\n      }\n    };\n    // matter.js does positioning using centre of mass...\n    const wallTop = Bodies.rectangle(this.boxWidth / 2, 0, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - T\" });\n    const wallBottom = Bodies.rectangle(this.boxWidth / 2, this.boxHeight, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - B\" });\n    const wallRight = Bodies.rectangle(this.boxWidth, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - R\" });\n    const wallLeft = Bodies.rectangle(0, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - L\" });\n    const walls = [wallTop, wallBottom, wallRight, wallLeft];\n    return walls;\n  }\n\n  // Initial x coordinate of magnet and ball.\n  _initialX(): number {\n    return 0.68 * (this.boxWidth - this.wallThickness / 2) + this.wallThickness / 2\n  }\n\n  _createMagnet(): Magnet {\n    const xLimit = this.wallThickness / 2 +\n      Math.max(this.magnetWidth / 2, this.ballWidth / 2) +\n      0.01 * this.boxWidth;\n    return new Magnet({\n      x: this._initialX(),\n      y: this.wallThickness / 2 + 0.01 * this.boxHeight + this.magnetHeight / 2,\n      minX: xLimit,\n      maxX: this.boxWidth - xLimit,\n      width: this.magnetWidth,\n      height: this.magnetHeight,\n      world: this.engine.world});\n  }\n\n  _createBall(magnet: Magnet): Body {\n    const x = magnet.attachmentPosition().x;\n    const y = magnet.attachmentPosition().y + this.ballRadius;\n    const ball = Bodies.circle(x, y, this.ballRadius, {\n      label: \"ball\",\n      render: {\n        sprite: {\n          texture: 'ball.png'\n        }\n      },\n      restitution: 0.5,\n      // density: 1,\n      frictionAir: 0,\n      frictionStatic: 0,\n    });\n    return ball;\n  }\n\n  _createObjects(): Body[] {\n    const random = seedrandom(this.level + 484726723);\n    const objects = []\n    _.range(0, this.level).forEach((i: number) => {\n      const radius = 10 + random() * 15;\n      const border = this.wallThickness / 2 + radius;\n      const x = border + (random() * (this.boxWidth - 2 * border));\n      const y = border + this.magnetHeight + this.ballHeight + (random() * (this.boxHeight - 2 * border - this.magnetHeight - this.ballHeight));\n      const object = Bodies.circle(x, y, radius, {\n        label: `object ${i}`,\n        isStatic: false,\n        isSleeping: true\n      });\n      objects.push(object);\n    });\n    return objects;\n  }\n\n  setWireframe(enabled: boolean) {\n    this.wireframe = enabled;\n    this.renderer.options.wireframes = enabled;\n    this.renderer.options.showSleeping = enabled;\n    this.renderer.options.showAngleIndicator = enabled;\n  }\n\n  getBodyCount() {\n    return Composite.allBodies(this.engine.world).length;\n  }\n\n  getConstraintCount() {\n    return Composite.allConstraints(this.engine.world).length;\n  }\n\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { GameEngine } from '../engine/GameEngine';\nimport { levelComplete, scoreUpdate } from '../redux/actions';\nimport { type DebugState } from '../redux/reducers/debug'\nimport { type LevelState } from '../redux/reducers/level'\nimport { Util } from '../util/Util';\n\ntype Props = {\n  level: number,\n  wireframe: boolean,\n  levelComplete: () => void,\n  scoreUpdate: (points: number) => void\n}\n\ntype State = {\n}\n\nexport class Game extends Component<Props,State> {\n\n  static CONTAINER_ID = \"matter_js_container\";\n\n  static getContainer(): ?HTMLElement {\n    return document.getElementById(Game.CONTAINER_ID);\n  }\n\n  // Set keyboard focus on the Game component.\n  //\n  // TODO a more elegant way of setting keyboard focus.\n  // ...CONTAINER_ID should have different value for each Game instance.\n  static focus() {\n    const container = Game.getContainer();\n    if (container) {\n      container.focus();\n    }\n  }\n\n  gameEngine: ?GameEngine;\n\n  constructor(props: Props) {\n    super(props);\n    this.gameEngine = null;\n  }\n\n  render() {\n    if (this.gameEngine) {\n      this.gameEngine.setWireframe(this.props.wireframe);\n    }\n    return (\n      // Need tabIndex, otherwise can't get focus and capture key events.\n      <div\n        className=\"Game\"\n        id={Game.CONTAINER_ID}\n        tabIndex=\"0\" />\n    );\n  }\n\n  _startEngine() {\n    const container = Util.nonNull(Game.getContainer());\n    this.gameEngine = new GameEngine(\n      container,\n      this.props.level,\n      this.props.wireframe,\n      this.props.levelComplete,\n      this.props.scoreUpdate);\n    this.gameEngine.start();\n  }\n\n  _stopEngine() {\n    if (this.gameEngine) {\n      this.gameEngine.stop();\n      this.gameEngine = null;\n    }\n  }\n\n  // React lifecycle.\n  componentDidMount() {\n    this._startEngine();\n  }\n\n  // React lifecycle.\n  componentWillUnmount() {\n    this._stopEngine();\n  }\n\n  // React lifecycle.\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.props.level === prevProps.level) {\n      return;\n    }\n    this._stopEngine();\n    this._startEngine();\n  }\n\n}\n\n// TODO Should LevelState/DebugState etc. include key too?\nconst mapStateToProps = (state: {level: LevelState, debug: DebugState}) => {\n  const level = state.level.current;\n  const wireframe = state.debug.wireframe;\n  return { level, wireframe };\n};\nconst actionCreators = {\n  levelComplete,\n  scoreUpdate\n}\nexport default connect(mapStateToProps, actionCreators)(Game);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\n\nimport { levelChange } from '../redux/actions';\nimport type { LevelState } from '../redux/reducers/level';\n\ntype Props = {\n  level: number,\n  numberOfLevels: number,\n  levelChange: (number) => void\n}\n\nexport class Level extends Component<Props> {\n\n  render() {\n    return <select value={this.props.level} onChange={this.handleClick}> \n      {_.range(1, this.props.numberOfLevels + 1).map((i: number) =>\n        <option key={i} value={i}>{i}</option>\n      )}\n    </select>;\n  }\n\n  handleClick = (event: SyntheticEvent<HTMLSelectElement>) => {\n    const target: HTMLSelectElement = event.currentTarget;\n    if (target) {\n      const level: number = parseInt(target.value);\n      this.props.levelChange(level);\n    }\n  }\n\n}\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  const numberOfLevels = state.level.last\n  return { level, numberOfLevels };\n};\nconst actionCreators = {\n  levelChange\n};\nexport default connect(mapStateToProps, actionCreators)(Level);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport type { ScoreState } from '../redux/reducers/score';\n\ntype Props = {\n  score: number\n}\n\nexport const Score = (props: Props) => {\n  return (\n    <div className=\"Scores\">\n      <div>{props.score}</div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: {score: ScoreState}) => {\n  return { score: state.score.current };\n}\n\nexport default connect(mapStateToProps)(Score);","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport { setWireframeMode } from '../redux/actions';\nimport type { DebugState } from '../redux/reducers/debug';\nimport { Game } from './Game';\n\ntype Props = {\n  enabled: boolean,\n  setWireframeMode: (boolean) => void\n}\n\nexport class WireframeCheckbox extends Component<Props> {\n\n  render() {\n    return (\n      <div>\n        <span>          \n          <input type=\"checkbox\" checked={this.props.enabled} onChange={this.handleClick}/>\n          debug\n        </span>\n      </div>\n    );\n  }\n\n  handleClick = (event: SyntheticEvent<HTMLInputElement>) => {\n    Game.focus();\n    const target: HTMLInputElement = event.currentTarget;\n    this.props.setWireframeMode(target.checked);\n  }\n\n}\n\nconst mapStateToProps = (state: {debug: DebugState}) => {\n  const enabled = state.debug.wireframe;\n  return { enabled };\n};\nconst actionCreators = {\n  setWireframeMode\n};\nexport default connect(mapStateToProps, actionCreators)(WireframeCheckbox);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport type { LevelState } from '../redux/reducers/level';\n\ntype Props = {\n  level: number\n};\n\nexport const StartLevelScreen = (props: Props) => {\n  return (\n    <div>Level {props.level}</div>\n  );\n};\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  return { level };\n};\nconst actionCreators = {};\n\nexport default connect(mapStateToProps, actionCreators)(StartLevelScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport { startGame } from '../redux/actions';\n\ntype Props = {\n  startGame: () => void\n};\n\nexport class StartScreen extends Component<Props> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  ref: { current: any } = React.createRef();\n\n  render() {\n    return (\n      <div\n        ref={this.ref}\n        tabIndex=\"0\"\n        onClick={this.props.startGame}\n        onKeyPress={this.props.startGame}\n        className=\"StartScreen\">\n        <p>Press any key to start game.</p>\n        <p>Use left and right arrow keys or the mouse to position the magnet.</p>\n        <p>Press space to turn the magnet on or off.</p>\n        <p>You move to the next level when all objects have been dislodged.</p>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.ref.current.focus();\n  }\n\n}\n\nconst mapStateToProps = null;\nconst actionCreators = { startGame };\n\nexport default connect(mapStateToProps, actionCreators)(StartScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport type { ScreenState } from '../redux/reducers/screen';\nimport GameScreen from './GameScreen';\nimport GameCompleteScreen from './GameCompleteScreen';\nimport StartLevelScreen from './StartLevelScreen';\nimport StartScreen from './StartScreen';\n\nconst screens = {\n  \"game\": GameScreen,\n  \"gameComplete\": GameCompleteScreen,\n  \"startLevel\": StartLevelScreen,\n  \"start\": StartScreen\n}\n\nexport type ScreenType = $Keys<typeof screens>;\n\ntype Props = {\n  +screen: ScreenType\n}\n\nconst Screen = (props: Props) => {\n  const component = screens[props.screen];\n  return React.createElement(component, {}, null);\n}\n\nexport const mapStateToProps = (state: {screen: ScreenState}) => {\n  const screen = state.screen.current;\n  return { screen };\n};\nconst actionCreators = {};\nexport default connect(mapStateToProps, actionCreators)(Screen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\nimport Game from '../components/Game';\nimport Level from '../components/Level';\nimport Score from '../components/Score';\nimport WireframeCheckbox from '../components/WireframeCheckbox';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div>\n      <Score />\n      <Game />\n      <Level />\n      <WireframeCheckbox />\n    </div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div>Game Complete</div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\n\nimport { storeFactory } from '../redux/store';\nimport './App.css';\nimport Screen from '../screen';\n\ntype Props = {\n};\n\ntype State = {\n};\n\nclass App extends Component<Props,State> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  store: Object;\n\n  constructor(props: Props) {\n    super(props);\n    this.store = storeFactory();\n  }\n\n  render() {\n    return (\n      <Provider store={this.store}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Screen/>\n          </header>\n        </div>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","// @flow\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Util } from './util/Util'\n\n// https://github.com/liabru/matter-js/issues/559\nwindow.decomp = require('poly-decomp');\n\nconst rootElement = Util.nonNull(document.getElementById('root'));\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}