{"version":3,"sources":["redux/actionTypes.js","redux/reducers/level.js","redux/reducers/score.js","redux/reducers/screen.js","redux/reducers/index.js","util/Log.js","redux/sagas/actionLogger.js","redux/actions.js","redux/sagas/gameComplete.js","redux/selectors/index.js","redux/sagas/levelComplete.js","redux/sagas/startLevel.js","redux/sagas/startGame.js","redux/sagas/index.js","redux/store.js","util/Util.js","engine/Magnet.js","engine/GameEngine.js","components/Game.js","components/Level.js","components/Score.js","screen/StartLevelScreen.js","screen/StartScreen.js","screen/index.js","screen/GameScreen.js","screen/GameCompleteScreen.js","components/App.js","serviceWorker.js","index.js"],"names":["START_GAME","LEVEL_COMPLETE","GAME_COMPLETE","START_LEVEL","initialState","current","last","combineReducers","level","state","arguments","length","undefined","action","type","payload","Error","concat","Object","objectSpread","score","points","screen","levelStringLengths","map","widestLevel","_","max","Log","classCallCheck","this","createClass","key","value","message","log","now","Date","messageString","console","toISOString","padStart","actionLogger","actionLoggerListener","regenerator_default","a","wrap","_context","prev","next","info","stop","_marked","_context2","takeEvery","_marked2","gameComplete","levelChange","startLevel","screenChange","gameCompleteListener","put","gameComplete_marked","gameComplete_marked2","isLastLevel","createSelector","lastLevel","levelComplete","levelCompleteListener","select","sent","levelComplete_marked","levelComplete_marked2","startLevelListener","call","delay","startLevel_marked","startLevel_marked2","startGame","startGameListener","startGame_marked","startGame_marked2","sagas","storeFactory","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","forEach","saga","run","Util","min","Magnet","args","constraints","acceleration","enabled","speed","x","y","minX","maxX","width","height","world","maxAcceleration","maxSpeed","peakHeight","vertices","body","Bodies","fromVertices","label","isStatic","position","World","add","other","constraint","Constraint","create","bodyA","bodyB","render","visible","push","dt","clamp","dx","Body","setPosition","setEnabled","remove","GameEngine","container","scoreUpdate","_this","ballImageSize","boxHeight","boxWidth","magnetHeight","magnetWidth","wallThickness","lastUpdateTimestamp","started","stopped","_handleCollision","event","that","pairs","pair","Sleeping","set","remainingObjectIds","delete","id","_handleKeyPress","repeat","magnet","toggle","left","right","_handleBeforeUpdate","timestamp","update","_isEverythingSleeping","size","engine","Engine","gravity","enableSleeping","ballRadius","ballHeight","ballWidth","_createMagnet","ball","_createBall","walls","_createWalls","objects","_createObjects","object","Set","attachToMagnet","toConsumableArray","addToWorld","Composite","allBodies","renderer","Render","element","options","background","wireframes","Events","on","document","addEventListener","focus","removeEventListener","off","canvas","every","bodies","isSleeping","wallOptions","rectangle","xLimit","Math","_initialX","attachmentPosition","circle","sprite","texture","restitution","frictionAir","frictionStatic","_this2","random","seedrandom","range","i","radius","border","allConstraints","Game","_Component","props","possibleConstructorReturn","getPrototypeOf","CONTAINER_ID","gameEngine","inherits","react_default","createElement","className","tabIndex","nonNull","getElementById","start","_startEngine","_stopEngine","prevProps","prevState","Component","actionCreators","connect","Level","_getPrototypeOf2","_len","Array","_key","apply","handleClick","target","currentTarget","parseInt","onChange","numberOfLevels","StartScreen","ref","React","createRef","onClick","onKeyPress","screens","game","components_Score","components_Game","components_Level","StartLevelScreen","component","App","es","src_screen","Boolean","window","location","hostname","match","decomp","require","rootElement","ReactDOM","src_components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dfa53ba5.chunk.js","sourcesContent":["// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport type { ScreenType } from '../screen';\n\nexport const START_GAME = 'START_GAME';\nexport type StartGameAction = {\n  type: typeof(START_GAME)\n};\n\nexport const LEVEL_COMPLETE = 'LEVEL_COMPLETE';\nexport type LevelCompleteAction = {\n  type: typeof(LEVEL_COMPLETE)\n};\n\nexport const GAME_COMPLETE = 'GAME_COMPLETE';\nexport type GameCompleteAction = {\n  type: typeof(GAME_COMPLETE)\n};\n\nexport const LEVEL_CHANGE = 'LEVEL_CHANGE';\nexport type LevelChangeAction = {\n  type: typeof(LEVEL_CHANGE),\n  payload: { level: number }\n};\n\nexport const START_LEVEL = 'START_LEVEL';\nexport type StartLevelAction = {\n  type: typeof(START_LEVEL)\n};\n\nexport const SCORE_UPDATE = 'SCORE_UPDATE';\nexport type ScoreUpdateAction = {\n  type: typeof(SCORE_UPDATE),\n  payload: { points: number }\n};\n\nexport const SCREEN_CHANGE = 'SCREEN_CHANGE';\nexport type ScreenChangeAction = {\n  type: typeof(SCREEN_CHANGE),\n  payload: { screen: ScreenType }\n};\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { LEVEL_CHANGE } from '../actionTypes';\n\nexport type LevelState = {\n  +current: number,\n  +last: number\n}\n\nconst initialState: LevelState = {\n  current: 1,\n  last: 5\n}\n\nexport const level = (state: LevelState = initialState, action: Action): LevelState => {\n  switch (action.type) {\n    case LEVEL_CHANGE: {\n      let level: number = action.payload.level;\n      if (level === null) {\n        level = state.current + 1;\n      }\n      if (level < 1 || level > state.last) {\n        throw new Error(`level out of range: ${level}`);\n      }\n      return {...state, current: level};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { SCORE_UPDATE } from '../actionTypes';\n\nexport type ScoreState = {\n  +current: number\n}\n\nconst initialState: ScoreState = {\n  current: 0\n}\n\nexport const score = (state: ScoreState = initialState, action: Action): ScoreState => {\n  let { current } = state;\n  switch (action.type) {\n    case SCORE_UPDATE: {\n      const points: number = action.payload.points;\n      current += points;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { SCREEN_CHANGE } from '../actionTypes';\nimport type { ScreenType } from '../../screen';\n\nexport type ScreenState = {\n  +current: ScreenType\n}\n\nconst initialState: ScreenState = {\n  current: \"start\",\n}\n\nexport const screen = (state: ScreenState = initialState, action: Action): ScreenState => {\n  switch (action.type) {\n    case SCREEN_CHANGE: {\n      const current: ScreenType = action.payload.screen;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { combineReducers } from \"redux\";\n\nimport { level } from \"./level\";\nimport { score } from \"./score\";\nimport { screen } from \"./screen\";\n\nexport default combineReducers({\n  level,\n  score,\n  screen\n});","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport _ from 'lodash';\n\ntype Message = string | () => string;\n\ntype Level = 'INFO' | 'DEBUG';\n\nconst levels: Level[] = ['INFO', 'DEBUG'];\n\nconst levelStringLengths: number[] = levels.map(\n  (level: Level) => level.length\n);\n\nconst widestLevel: number = _.max(levelStringLengths);\n\nexport class Log {\n\n  static info(message: Message) {\n    this.log('INFO', message);\n  }\n\n  static debug(message: Message) {\n    this.log('DEBUG', message);\n  }\n\n  static log(level: Level, message: Message) {\n    // If implement log-level setting, only evaluate function and timestamp if need to.\n    const now = new Date();\n    const messageString: string = (typeof message === 'function') ? message() : message;\n    console.log(`${now.toISOString()} ${level.padStart(widestLevel)} ${messageString}`)\n  }\n\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { takeEvery } from 'redux-saga/effects';\n\nimport type { Action } from 'redux';\n\nimport { Log } from '../../util/Log';\n\n// eslint-disable-next-line require-yield\nexport function* actionLogger(action: Action): Generator<*,*,*> {\n  Log.info(`Action: ${action.type}`);\n}\n\nexport function* actionLoggerListener(): Generator<*,*,*> {\n  yield takeEvery(\"*\", actionLogger);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  GAME_COMPLETE,\n  LEVEL_COMPLETE,\n  LEVEL_CHANGE,\n  START_LEVEL,\n  SCORE_UPDATE,\n  SCREEN_CHANGE,\n  START_GAME\n} from './actionTypes'\nimport type { ScreenType } from '../screen';\n\nexport const startGame = () => ({\n  type: START_GAME\n});\n\nexport const gameComplete = () => ({\n  type: GAME_COMPLETE\n});\n\nexport const levelComplete = () => ({\n  type: LEVEL_COMPLETE\n});\n\nexport const levelChange = (level: ?number = null) => ({\n  type: LEVEL_CHANGE,\n  payload: {\n    level: level\n  }\n});\n\nexport const startLevel = () => ({\n  type: START_LEVEL\n});\n\nexport const scoreUpdate = (points: number) => ({\n  type: SCORE_UPDATE,\n  payload: {\n    points: points\n  }\n});\n\nexport const screenChange = (screen: ScreenType) => ({\n  type: SCREEN_CHANGE,\n  payload: {\n    screen: screen\n  }\n});","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { GAME_COMPLETE } from '../actionTypes';\nimport { screenChange } from '../actions';\n\nexport function* gameComplete(): Generator<*,*,*> {\n  yield put(screenChange(\"gameComplete\"));\n}\n\nexport function* gameCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(GAME_COMPLETE, gameComplete);\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createSelector } from 'reselect'\n\nimport { type LevelState } from '../reducers/level';\n\ntype State = { level: LevelState }\n\nconst getLevel = (state: State) => state.level.current;\nconst getLastLevel = (state: State) => state.level.last;\n\nexport const isLastLevel = createSelector(\n  [getLevel, getLastLevel],\n  (level: number, lastLevel: number) => {\n    return level === lastLevel;\n  }\n)","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, select, takeEvery } from 'redux-saga/effects';\n\nimport { LEVEL_COMPLETE } from '../actionTypes';\nimport { levelChange, startLevel, gameComplete } from '../actions';\nimport { isLastLevel } from '../selectors';\n\nexport function* levelComplete(): Generator<*,*,*> {\n  if (yield select(isLastLevel)) {\n    yield put(gameComplete());\n  } else {\n    yield put(levelChange());\n    yield put(startLevel());\n  }\n}\n\nexport function* levelCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(LEVEL_COMPLETE, levelComplete);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { delay } from 'redux-saga'\n\nimport { START_LEVEL } from '../actionTypes';\nimport { screenChange } from '../actions';\n\nexport function* startLevel(): Generator<*,*,*> {\n  yield put(screenChange(\"startLevel\"));\n  yield call(delay, 2500);\n  yield put(screenChange(\"game\"));\n}\n\nexport function* startLevelListener(): Generator<*,*,*> {\n  yield takeEvery(START_LEVEL, startLevel);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { START_GAME } from '../actionTypes';\nimport { startLevel } from '../actions';\n\nexport function* startGame(): Generator<*,*,*> {\n  yield put(startLevel());\n}\n\nexport function* startGameListener(): Generator<*,*,*> {\n  yield takeEvery(START_GAME, startGame);\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { actionLoggerListener } from './actionLogger';\nimport { gameCompleteListener } from './gameComplete';\nimport { levelCompleteListener } from './levelComplete';\nimport { startLevelListener } from './startLevel';\nimport { startGameListener } from './startGame';\n\nexport default [\n  actionLoggerListener,\n  gameCompleteListener,\n  levelCompleteListener,\n  startLevelListener,\n  startGameListener\n];","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from \"./reducers\";\nimport sagas from './sagas';\n\nexport const storeFactory = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n  );\n  // $FlowFixMe - problem with Generator type parameters.\n  sagas.forEach((saga: Generator<*,*,*>) => {\n    sagaMiddleware.run(saga);\n  });\n  return store;\n};\n\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nexport class Util {\n\n  // Clamp value to be within the range [min, max].\n  static clamp(value: number, min: number, max: number): number {\n    if (max < min) {\n      throw new Error(`max of ${max} is less than min ${min} (with value of ${value})`);\n    }\n    if (value < min) {\n      value = min;\n    }\n    if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n\n  // Asserts that a maybe-typed value is not null or undefined.\n  static nonNull<T>(value: ?T): T {\n    if (value === null) {\n      throw new Error(\"null value.\");\n    }\n    if (value === undefined) {\n      throw new Error(\"undefined value.\");\n    }\n    return value;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Body,\n  Bodies,\n  Constraint,\n  World\n} from 'matter-js'\n\nimport { Util } from '../util/Util';\n\ntype Args = {\n  +x: number,\n  +y: number,\n  +minX: number,\n  +maxX: number,\n  +width: number,\n  +height: number,\n  +world: World,\n  +maxAcceleration?: number,\n  +maxSpeed?: number\n}\n\nexport class Magnet {\n\n  +body: Body;\n  +constraints: Constraint[] = [];\n  +height: number;\n  +width: number;\n  +maxAcceleration: number;\n  +maxSpeed: number;\n  +minX: number;\n  +maxX: number;\n  +world: World;\n\n  acceleration: number = 0;\n  enabled: boolean = true;\n  speed: number = 0;\n\n  constructor(args: Args) {\n    const x = args.x;\n    const y = args.y;\n    this.minX = args.minX;\n    this.maxX = args.maxX;\n    this.width = args.width;\n    this.height = args.height;\n    this.world = args.world;\n    this.maxAcceleration = (args.maxAcceleration === undefined) ? 0.005 : args.maxAcceleration;\n    this.maxSpeed = (args.maxSpeed === undefined) ? 1.3 : args.maxSpeed;\n    const peakHeight = this.height * 0.2;\n    const vertices = [\n      { x: -this.width / 2, y: - this.height / 2 },\n      { x:               0, y: - this.height / 2 - peakHeight },\n      { x:  this.width / 2, y: - this.height / 2 },\n      { x:  this.width / 2, y:   this.height / 2},\n      { x: -this.width / 2, y:   this.height / 2}\n    ];\n    this.body = Bodies.fromVertices(x, y, vertices, {\n      label: \"magnet\",\n      isStatic: true,\n    });\n  }\n\n  // Bottom centre coordinates of magnet.\n  attachmentPosition() {\n    return { x: this.body.position.x, y: this.body.position.y + this.height / 2 };\n  }\n\n  // Register the Magnet's matter.js Body with the matter.js World.\n  addToWorld() {\n    World.add(this.world, this.body);\n  }\n\n  // Connect another Body to the Magnet.\n  attachToMagnet(other: Body) {\n    const constraint: Constraint = Constraint.create({\n      bodyA: this.body,\n      bodyB: other,\n      render: {\n        visible: false\n      }\n    })\n    this.constraints.push(constraint);\n    if (this.enabled) {\n      World.add(this.world, constraint);\n    }\n  }\n\n  // Start movement to left.\n  left() {\n    if (this.speed > 0) {\n      this.speed = 0;\n    }\n    this.acceleration = -this.maxAcceleration;\n  }\n\n  // Start movement to right.\n  right() {\n    if (this.speed < 0) {\n      this.speed = 0;\n    }\n    this.acceleration = this.maxAcceleration;\n  }\n\n  // Stop movement.\n  stop() {\n    this.acceleration = 0;\n    this.speed = 0;\n  }\n\n  // Handle matter.js update callback.\n  //\n  // dt - time since last update\n  update(dt: number) {\n    this.speed = Util.clamp(\n      this.speed + this.acceleration * dt,\n      -this.maxSpeed, this.maxSpeed);\n    const dx = this.speed * dt;\n    const x = Util.clamp(\n      this.body.position.x + dx,\n      this.minX, this.maxX);\n    const y = this.body.position.y;\n    Body.setPosition(this.body, { x, y });\n  }\n\n  // Turn the magnet on or off.\n  toggle() {\n    this.setEnabled(!this.enabled);\n  }\n\n  // Turn the magnet on or off.\n  setEnabled(enabled: boolean) {\n    if (enabled) {\n      if (!this.enabled) {\n        World.add(this.world, this.constraints);\n      }\n    } else {\n      if (this.enabled) {\n        World.remove(this.world, this.constraints);\n      }\n    }\n    this.enabled = enabled;\n  }\n\n  // For testing.\n  getSpeed(): number {\n    return this.speed;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Bodies,\n  Body,\n  Composite,\n  Engine,\n  Events,\n  Pair,\n  Render,\n  Sleeping,\n  World\n} from 'matter-js'\nimport _ from 'lodash';\nimport seedrandom from 'seedrandom';\n\nimport { Log } from '../util/Log';\nimport { Magnet } from './Magnet';\n\nexport class GameEngine {\n\n  +ball: Body;\n  +ballImageSize: number = 64; // pixels\n  +ballRadius: number;\n  +ballHeight: number;\n  +ballWidth: number;\n  +boxHeight: number = 600;\n  +boxWidth: number = 800;\n  +container: HTMLElement;\n  +engine: Engine;\n  +level: number;\n  +magnet: Magnet;\n  +magnetHeight: number = 15;\n  +magnetWidth: number = 50;\n  +levelComplete: () => void;\n  +remainingObjectIds: Set<number>;\n  +renderer: Render;\n  +scoreUpdate: (points: number) => void;\n  +walls: Body[];\n  +wallThickness: number = 50;\n\n  lastUpdateTimestamp: ?number = null;\n  started: boolean = false;\n  stopped: boolean = false;\n\n  constructor(\n    container: HTMLElement,\n    level: number,\n    levelComplete: () => void,\n    scoreUpdate: (points: number) => void) {\n    \n    this.levelComplete = levelComplete;\n    this.scoreUpdate = scoreUpdate;\n    this.level = level;\n    this.container = container;\n    this.engine = Engine.create();\n    this.engine.world.gravity.y = 0.2;\n    this.engine.enableSleeping = true;\n    this.ballRadius = 1.025 * this.ballImageSize / 2.0\n    this.ballHeight = this.ballRadius;\n    this.ballWidth = this.ballRadius;\n    this.magnet = this._createMagnet();\n    this.ball = this._createBall(this.magnet);\n    const walls = this._createWalls();\n    const objects = this._createObjects();\n    const remainingObjectIds = _.map(objects, (object: Body) => {\n      return object.id;\n    });\n    this.remainingObjectIds = new Set(remainingObjectIds);\n    this.magnet.attachToMagnet(this.ball);\n    World.add(this.engine.world, [\n      ...walls,\n      this.ball,\n      ...objects\n    ]);\n    this.magnet.addToWorld();\n    Log.info('Body ids:');\n    Composite.allBodies(this.engine.world).forEach((body: Body) => {\n      Log.info(`${body.id} - ${body.label}`);\n    });\n    this.renderer = Render.create({\n      element: this.container,\n      engine: this.engine,\n      options: {\n        background: \"transparent\",\n        wireframes: false,\n        width: this.boxWidth,\n        height: this.boxHeight\n      }\n    });\n  }\n\n  start() {\n    if (this.started) {\n      throw new Error(\"already started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"cannot restart.\");\n    }\n    Events.on(this.engine, 'collisionStart', this._handleCollision);\n    Events.on(this.engine, 'beforeUpdate', this._handleBeforeUpdate);\n    Engine.run(this.engine);\n    Render.run(this.renderer);\n    document.addEventListener('keydown', this._handleKeyPress);\n    document.addEventListener('keyup', this._handleKeyPress);\n    this.container.focus();\n    this.started = true;\n  }\n\n  stop() {\n    if (!this.started) {\n      throw new Error(\"not started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"already stopped\");\n    }\n    document.removeEventListener('keydown', this._handleKeyPress);\n    document.removeEventListener('keyup', this._handleKeyPress);\n    Render.stop(this.renderer);\n    Events.off(this.engine, 'collisionStart');\n    Events.off(this.engine, 'beforeUpdate');\n    this.renderer.canvas.remove();\n    this.started = false;\n    this.stopped = true;\n  }\n\n  _handleCollision = (event: (pairs: [Pair]) => void) => {\n    const that = this;\n    const pairs = event.pairs;\n    pairs.forEach((pair: Pair) => {\n      [pair.bodyA, pair.bodyB].forEach((body: Body) => {\n        Sleeping.set(body, false);\n        const dislodged = that.remainingObjectIds.delete(body.id);\n        if (dislodged) {\n          const points = 1;\n          that.scoreUpdate(points);\n        }\n      });\n    });\n  }\n\n  _handleKeyPress = (event: KeyboardEvent) => {\n    if (event.repeat) {\n      return;\n    }\n    if (event.type === \"keydown\" && event.key === \" \") {\n      this.magnet.toggle();\n    }\n    if (event.type === \"keydown\") {\n      if (event.key === 'ArrowLeft') {\n        this.magnet.left();\n      } else if (event.key === 'ArrowRight') {\n        this.magnet.right();\n      }\n    } else if (event.type === \"keyup\") {\n      this.magnet.stop();\n    } else {\n      throw new Error(event);\n    }\n  }\n\n  _handleBeforeUpdate = (event: {timestamp: number}) => {\n    if (this.lastUpdateTimestamp === undefined) {\n      throw new Error(); // flow type refinement\n    }\n    if (!(this.lastUpdateTimestamp === null)) {\n      const dt: number = event.timestamp - this.lastUpdateTimestamp;\n      this.magnet.update(dt);\n    }\n    if (this._isEverythingSleeping()) {\n      if (this.remainingObjectIds.size === 0) {\n        this.levelComplete();\n      } else {\n        this.magnet.setEnabled(true);\n      }\n    }\n    this.lastUpdateTimestamp = event.timestamp;\n  }\n\n  _isEverythingSleeping() {\n    return _.every(this.engine.world.bodies, (body: Body) => {\n      return body.isSleeping;\n    });\n  }\n\n  _createWalls(): Body[] {\n    const wallOptions = {\n      isStatic: true,\n    };\n    // matter.js does positioning using centre of mass...\n    const wallTop = Bodies.rectangle(this.boxWidth / 2, 0, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - T\" });\n    const wallBottom = Bodies.rectangle(this.boxWidth / 2, this.boxHeight, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - B\" });\n    const wallRight = Bodies.rectangle(this.boxWidth, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - R\" });\n    const wallLeft = Bodies.rectangle(0, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - L\" });\n    const walls = [wallTop, wallBottom, wallRight, wallLeft];\n    return walls;\n  }\n\n  // Initial x coordinate of magnet and ball.\n  _initialX(): number {\n    return 0.68 * (this.boxWidth - this.wallThickness / 2) + this.wallThickness / 2\n  }\n\n  _createMagnet(): Magnet {\n    const xLimit = this.wallThickness / 2 +\n      Math.max(this.magnetWidth / 2, this.ballWidth / 2) +\n      0.01 * this.boxWidth;\n    return new Magnet({\n      x: this._initialX(),\n      y: this.wallThickness / 2 + 0.01 * this.boxHeight + this.magnetHeight / 2,\n      minX: xLimit,\n      maxX: this.boxWidth - xLimit,\n      width: this.magnetWidth,\n      height: this.magnetHeight,\n      world: this.engine.world});\n  }\n\n  _createBall(magnet: Magnet): Body {\n    const x = magnet.attachmentPosition().x;\n    const y = magnet.attachmentPosition().y + this.ballRadius;\n    const ball = Bodies.circle(x, y, this.ballRadius, {\n      label: \"ball\",\n      render: {\n        sprite: {\n          texture: 'ball.png'\n        }\n      },\n      restitution: 0.5,\n      // density: 1,\n      frictionAir: 0,\n      frictionStatic: 0,\n    });\n    return ball;\n  }\n\n  _createObjects(): Body[] {\n    const random = seedrandom(this.level + 484726723);\n    const objects = []\n    _.range(0, this.level).forEach((i: number) => {\n      const radius = 10 + random() * 15;\n      const border = this.wallThickness / 2 + radius;\n      const x = border + (random() * (this.boxWidth - 2 * border));\n      const y = border + this.magnetHeight + this.ballHeight + (random() * (this.boxHeight - 2 * border - this.magnetHeight - this.ballHeight));\n      const object = Bodies.circle(x, y, radius, {\n        label: `object ${i}`,\n        isStatic: false,\n        isSleeping: true\n      });\n      objects.push(object);\n    });\n    return objects;\n  }\n\n  getBodyCount() {\n    return Composite.allBodies(this.engine.world).length;\n  }\n\n  getConstraintCount() {\n    return Composite.allConstraints(this.engine.world).length;\n  }\n\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { GameEngine } from '../engine/GameEngine';\nimport { levelComplete, scoreUpdate } from '../redux/actions';\nimport type { LevelState } from '../redux/reducers/level'\nimport { Util } from '../util/Util';\n\ntype Props = {\n  level: number,\n  levelComplete: () => void,\n  scoreUpdate: (points: number) => void\n}\n\ntype State = {\n}\n\nexport class Game extends Component<Props,State> {\n\n  CONTAINER_ID = \"matter_js_container\";\n\n  gameEngine: ?GameEngine;\n\n  constructor(props: Props) {\n    super(props);\n    this.gameEngine = null;\n  }\n\n  render() {\n    return (\n      // Need tabIndex, otherwise can't get focus and capture key events.\n      <div\n        className=\"Game\"\n        id={this.CONTAINER_ID}\n        tabIndex=\"0\" />\n    );\n  }\n\n  _startEngine() {\n    const container = Util.nonNull(document.getElementById(this.CONTAINER_ID));\n    this.gameEngine = new GameEngine(\n      container,\n      this.props.level,\n      this.props.levelComplete,\n      this.props.scoreUpdate);\n    this.gameEngine.start();\n  }\n\n  _stopEngine() {\n    if (this.gameEngine) {\n      this.gameEngine.stop();\n      this.gameEngine = null;\n    }\n  }\n\n  // React lifecycle.\n  componentDidMount() {\n    this._startEngine();\n  }\n\n  // React lifecycle.\n  componentWillUnmount() {\n    this._stopEngine();\n  }\n\n  // React lifecycle.\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.props.level === prevProps.level) {\n      return;\n    }\n    this._stopEngine();\n    this._startEngine();\n  }\n\n}\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  return { level };\n};\nconst actionCreators = {\n  levelComplete,\n  scoreUpdate\n}\nexport default connect(mapStateToProps, actionCreators)(Game);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\n\nimport { levelChange } from '../redux/actions';\nimport type { LevelState } from '../redux/reducers/level';\n\ntype Props = {\n  level: number,\n  numberOfLevels: number,\n  levelChange: (number) => void\n}\n\nexport class Level extends Component<Props> {\n\n  render() {\n    return <select value={this.props.level} onChange={this.handleClick}> \n      {_.range(1, this.props.numberOfLevels + 1).map((i: number) =>\n        <option key={i} value={i}>{i}</option>\n      )}\n    </select>;\n  }\n\n  handleClick = (event: SyntheticEvent<HTMLSelectElement>) => {\n    const target: HTMLSelectElement = event.currentTarget;\n    if (target) {\n      const level: number = parseInt(target.value);\n      this.props.levelChange(level);\n    }\n  }\n\n}\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  const numberOfLevels = state.level.last\n  return { level, numberOfLevels };\n};\nconst actionCreators = {\n  levelChange\n};\nexport default connect(mapStateToProps, actionCreators)(Level);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport type { ScoreState } from '../redux/reducers/score';\n\ntype Props = {\n  score: number\n}\n\nexport const Score = (props: Props) => {\n  return (\n    <div className=\"Scores\">\n      <div>{props.score}</div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: {score: ScoreState}) => {\n  return { score: state.score.current };\n}\n\nexport default connect(mapStateToProps)(Score);","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport type { LevelState } from '../redux/reducers/level';\n\ntype Props = {\n  level: number\n};\n\nexport const StartLevelScreen = (props: Props) => {\n  return (\n    <div>Level {props.level}</div>\n  );\n};\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  return { level };\n};\nconst actionCreators = {};\n\nexport default connect(mapStateToProps, actionCreators)(StartLevelScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport { startGame } from '../redux/actions';\n\ntype Props = {\n  startGame: () => void\n};\n\nexport class StartScreen extends Component<Props> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  ref: { current: any } = React.createRef();\n\n  render() {\n    return (\n      <div\n        ref={this.ref}\n        tabIndex=\"0\"\n        onClick={this.props.startGame}\n        onKeyPress={this.props.startGame}\n        className=\"StartScreen\">\n        <p>Press any key to start game.</p>\n        <p>Use left and right arrows to position the magnet.</p>\n        <p>Press space to turn the magnet on or off.</p>\n        <p>You move to the next level when all objects have been dislodged.</p>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.ref.current.focus();\n  }\n\n}\n\nconst mapStateToProps = null;\nconst actionCreators = { startGame };\n\nexport default connect(mapStateToProps, actionCreators)(StartScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport type { ScreenState } from '../redux/reducers/screen';\nimport GameScreen from './GameScreen';\nimport GameCompleteScreen from './GameCompleteScreen';\nimport StartLevelScreen from './StartLevelScreen';\nimport StartScreen from './StartScreen';\n\nconst screens = {\n  \"game\": GameScreen,\n  \"gameComplete\": GameCompleteScreen,\n  \"startLevel\": StartLevelScreen,\n  \"start\": StartScreen\n}\n\nexport type ScreenType = $Keys<typeof screens>;\n\ntype Props = {\n  +screen: ScreenType\n}\n\nconst Screen = (props: Props) => {\n  const component = screens[props.screen];\n  return React.createElement(component, {}, null);\n}\n\nconst mapStateToProps = (state: {screen: ScreenState}) => {\n  const screen = state.screen.current;\n  return { screen };\n};\nconst actionCreators = {};\nexport default connect(mapStateToProps, actionCreators)(Screen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\nimport Game from '../components/Game';\nimport Level from '../components/Level';\nimport Score from '../components/Score';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div>\n      <Score />\n      <Game />\n      <Level />\n    </div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div>Game Complete</div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\n\nimport { storeFactory } from '../redux/store';\nimport './App.css';\nimport Screen from '../screen';\n\ntype Props = {\n};\n\ntype State = {\n};\n\nclass App extends Component<Props,State> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  store: Object;\n\n  constructor(props: Props) {\n    super(props);\n    this.store = storeFactory();\n  }\n\n  render() {\n    return (\n      <Provider store={this.store}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Screen/>\n          </header>\n        </div>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","// @noflow\n/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// @flow\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Util } from './util/Util'\n\n// https://github.com/liabru/matter-js/issues/559\nwindow.decomp = require('poly-decomp');\n\nconst rootElement = Util.nonNull(document.getElementById('root'));\nReactDOM.render(<App />, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}