* unit tests for engine classes.

* unit tests default to not using flow
  - is that good or bad?

* Reattaching ball to magnet stops next-level detection working.
  - ball often gets enormous angular momentum too, preventing level completion.

* Higher score if release ball fewer times.
  - limited number of balls for each levels
    - one per object
  - indicate number of balls available
  - game over if run out of balls
  - extra points if complete level with balls remaining
  - bonus if complete game
  
* js crash (in reducer) only shown in debug console.
  - a backtrace on screen in debug build would make testing better.
  - what about release build?

* Indicate when points are won.
  - numbered bubbles that fade out over time.
    - when hit balls
    - extra points at end of level
    - extra points at end of game.

* Replace ball with anvil
  - change image
    - https://clipartimage.com/clipart/12640-anvil-clipart.html?
  - use anvil-shaped matter.js Body
  - rename js field
  
* Add images for objects.

* Electromagnet image.

* Add cable for electromagnet.

* No typescript extensions => no js formatter in VSC?

* Logging library.
  - console.log()
    - chrome records log location in code if just use console.log()    
    - no timestamps or levels
  - winston
    - not working with react: https://github.com/winstonjs/winston/issues/1495
  - write my own
    - needs some unit testing
  - log4js
    - which one?!
  - pino
    - doesn't do formatting
  - bunyan
    - json logs
 
* Change favicon.ico.

* Add back publish script.
  - inject URL via env. var.

* Test server.
  - eslint
  - flow
  - npm run test -- --coverage
  - flow coverage
  - release build

* Mouse-based movement of bar.
  - MouseConstraint?
    - https://www.youtube.com/watch?v=W-ou_sVlTWk&list=PLRqwX-V7Uu6akvoNKE4GAxf6ZeBYoJ4uh&index=24
      - MouseConstraint connected to Mouse connected to canvas.elt
      - Mouse.pixelRatio = pixelDensity(); // retina displays, p5 canvas required?
      - add MouseConstraint to world.
      - bar can't be static, but bar has to be static...
      - tunnelling is likely to be a problem


* Importing Foo wrapped with react-redux connect as Foo using default export is unclear.
  - it's not immediately obvious that component Foo is wrapped.

* Localization.

* High Scrore table.