{"version":3,"sources":["redux/actionTypes.js","redux/actions.js","redux/reducers/debug.js","redux/reducers/level.js","redux/reducers/score.js","redux/reducers/screen.js","redux/reducers/index.js","util/Log.js","redux/sagas/actionLogger.js","redux/sagas/gameComplete.js","redux/selectors/index.js","redux/sagas/levelComplete.js","redux/sagas/start.js","redux/sagas/startLevel.js","redux/sagas/startGame.js","redux/sagas/index.js","redux/store.js","util/Util.js","engine/Magnet.js","engine/GameEngine.js","components/Game.js","components/Score.js","screen/StartLevelScreen.js","components/Level.js","util/cookies.js","util/google_analytics.js","screen/StartScreen.js","screen/index.js","screen/GameScreen.js","screen/GameCompleteScreen.js","components/App.js","index.js"],"names":["START","START_GAME","LEVEL_COMPLETE","GAME_COMPLETE","START_LEVEL","DISMISS_START_LEVEL_SCREEN","resetScore","type","gameComplete","levelChange","payload","level","arguments","length","undefined","startLevel","scoreUpdate","points","screenChange","screen","initialState","wireframe","current","last","combineReducers","debug","state","Object","objectSpread","action","Error","concat","score","levelStringLengths","map","widestLevel","_","max","Log","classCallCheck","this","createClass","key","value","message","log","now","Date","messageString","console","toISOString","padStart","actionLogger","actionLoggerListener","regenerator_default","a","wrap","_context","prev","next","info","stop","_marked","_context2","takeEvery","_marked2","gameCompleteListener","put","gameComplete_marked","gameComplete_marked2","isLastLevel","createSelector","lastLevel","levelComplete","levelCompleteListener","select","sent","levelComplete_marked","levelComplete_marked2","start","startListener","start_marked","start_marked2","startLevelListener","_ref","race","sleep","call","delay","dismissal","take","cancel","startLevel_marked","startLevel_marked2","startGame","startGameListener","startGame_marked","startGame_marked2","sagas","storeFactory","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","forEach","saga","run","Util","min","Magnet","args","constraints","objects","acceleration","enabled","speed","dragging","x","y","minX","maxX","width","height","world","maxAcceleration","maxSpeed","onRelease","peakHeight","vertices","body","Bodies","fromVertices","label","isStatic","render","fillStyle","position","World","add","other","constraint","Constraint","create","bodyA","bodyB","visible","push","reposition","event","buttons","rect","clientX","clientY","left","right","top","bottom","canvasRect","isPrimary","button","insideRect","setEnabled","leftButtonPressed","Bounds","contains","bounds","Body","setPosition","dt","clamp","dx","setVelocity","_this","remove","attachmentPosition","id","JSON","stringify","GameEngine","container","ballImageSize","magnetHeight","magnetWidth","maxSpeedSquared","Math","pow","maxAngularVelocity","wallThickness","lastUpdateTimestamp","started","stopped","_handleCollision","that","pairs","pair","Sleeping","set","_dislodgeCheck","_handlePointerEvent","renderer","canvas","getBoundingClientRect","magnet","handlePointerEvent","_handleKeyPress","repeat","toggle","_handleBeforeUpdate","timestamp","update","Composite","allBodies","engine","angularVelocity","setAngularVelocity","velocity","speedSquared","ratio","sqrt","_insideBox","objectIds","has","_isEverythingSleepingOrEscaped","objectIdsRemaining","size","bind","boxHeight","clientHeight","boxWidth","clientWidth","Engine","gravity","enableSleeping","ballRadius","ballHeight","ballWidth","_createMagnet","ball","_createBall","walls","_createWalls","_createObjects","object","Set","attachToMagnet","toConsumableArray","addToWorld","Render","element","options","background","setWireframe","Events","on","document","addEventListener","focus","removeEventListener","off","delete","_this2","every","bodies","isSleeping","wallOptions","rectangle","_this3","xLimit","_initialX","circle","sprite","texture","restitution","frictionAir","frictionStatic","_this4","random","seedrandom","range","i","radius","border","wireframes","showSleeping","showAngleIndicator","allConstraints","Game","_Component","props","possibleConstructorReturn","getPrototypeOf","gameEngine","inherits","getElementById","CONTAINER_ID","getContainer","react_default","createElement","className","tabIndex","nonNull","_startEngine","_stopEngine","prevProps","prevState","Component","actionCreators","connect","toggleWireframeMode","onDoubleClick","dismissStartLevelScreen","onClick","Level","_getPrototypeOf2","_len","Array","_key","apply","handleClick","target","currentTarget","parseInt","onChange","numberOfLevels","COOKIE_CONSENT","cookieConsentGiven","Cookies","get","initializeReactGoogleAnalytics","initialScreen","ReactGA","initialize","pageview","consentGiven","page","window","location","pathname","StartScreen","ref","React","createRef","handleCrashClick","e","stopPropagation","assertThisInitialized","onKeyPress","href","hidden","alt","src","build_default","buttonText","cookieName","onAccept","_handleClick","asyncToGenerator","mark","_callee","toggleFullscreen","orientation","lock","t0","screens","StartLevelScreen","game","components_Score","components_Game","Screen","component","App","reactGAInitialized","es","src_screen","isFullscreen","dispatch","Fullscreenable","SENTRY_DSN","Sentry","dsn","release","environment","decomp","require","rootElement","ReactDOM","src_components_App"],"mappings":"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","file":"static/js/main.5afffdc8.chunk.js","sourcesContent":["// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport type { ScreenType } from '../screen';\n\nexport const START = 'START';\nexport type StartAction = {\n  type: typeof(START)\n};\n\nexport const START_GAME = 'START_GAME';\nexport type StartGameAction = {\n  type: typeof(START_GAME)\n};\n\nexport const RESET_SCORE = 'RESET_SCORE';\nexport type ResetScoreAction = {\n  type: typeof(RESET_SCORE)\n};\n\nexport const LEVEL_COMPLETE = 'LEVEL_COMPLETE';\nexport type LevelCompleteAction = {\n  type: typeof(LEVEL_COMPLETE)\n};\n\nexport const GAME_COMPLETE = 'GAME_COMPLETE';\nexport type GameCompleteAction = {\n  type: typeof(GAME_COMPLETE)\n};\n\nexport const LEVEL_CHANGE = 'LEVEL_CHANGE';\nexport type LevelChangeAction = {\n  type: typeof(LEVEL_CHANGE),\n  payload: { level: number }\n};\n\nexport const START_LEVEL = 'START_LEVEL';\nexport type StartLevelAction = {\n  type: typeof(START_LEVEL)\n};\n\nexport const DISMISS_START_LEVEL_SCREEN = 'DISMISS_START_LEVEL_SCREEN';\nexport type DismissStartLevelScreen = {\n  type: typeof(DISMISS_START_LEVEL_SCREEN)\n};\n\nexport const SCORE_UPDATE = 'SCORE_UPDATE';\nexport type ScoreUpdateAction = {\n  type: typeof(SCORE_UPDATE),\n  payload: { points: number }\n};\n\nexport const SCREEN_CHANGE = 'SCREEN_CHANGE';\nexport type ScreenChangeAction = {\n  type: typeof(SCREEN_CHANGE),\n  payload: { screen: ScreenType }\n};\n\nexport const TOGGLE_WIREFRAME_MODE = 'TOGGLE_WIREFRAME_MODE';\nexport type ToggleWireframeModeAction = {\n  type: typeof(TOGGLE_WIREFRAME_MODE)\n};\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  DISMISS_START_LEVEL_SCREEN,\n  GAME_COMPLETE,\n  LEVEL_COMPLETE,\n  LEVEL_CHANGE,\n  RESET_SCORE,\n  START,\n  START_GAME,\n  START_LEVEL,\n  SCORE_UPDATE,\n  SCREEN_CHANGE,\n  TOGGLE_WIREFRAME_MODE\n} from './actionTypes'\nimport type { ScreenType } from '../screen';\n\nexport const start = () => ({\n  type: START\n});\n\nexport const resetScore = () => ({\n  type: RESET_SCORE\n});\n\nexport const startGame = () => ({\n  type: START_GAME\n});\n\nexport const gameComplete = () => ({\n  type: GAME_COMPLETE\n});\n\nexport const levelComplete = () => ({\n  type: LEVEL_COMPLETE\n});\n\nexport const levelChange = (level: ?number = null) => ({\n  type: LEVEL_CHANGE,\n  payload: {\n    level: level\n  }\n});\n\nexport const startLevel = () => ({\n  type: START_LEVEL\n});\n\n// Sent if user clicks on start level screen, dismissing\n// the screen immediately, not after the usual delay.\nexport const dismissStartLevelScreen = () => ({\n  type: DISMISS_START_LEVEL_SCREEN\n});\n\nexport const scoreUpdate = (points: number) => ({\n  type: SCORE_UPDATE,\n  payload: {\n    points: points\n  }\n});\n\nexport const toggleWireframeMode = () => ({\n  type: TOGGLE_WIREFRAME_MODE,\n});\n\nexport const screenChange = (screen: ScreenType) => ({\n  type: SCREEN_CHANGE,\n  payload: {\n    screen: screen\n  }\n});\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\n\nimport { Action } from 'redux';\nimport { TOGGLE_WIREFRAME_MODE } from '../actionTypes';\n\nexport type DebugState = {\n  +wireframe: boolean\n}\n\nconst initialState: DebugState = {\n  wireframe: false\n}\n\nexport const debug = (state: DebugState = initialState, action: Action): DebugState => {\n  switch (action.type) {\n    case TOGGLE_WIREFRAME_MODE: {\n      return {...state, wireframe: !state.wireframe};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { LEVEL_CHANGE } from '../actionTypes';\n\nexport type LevelState = {\n  +current: number,\n  +last: number\n}\n\nconst initialState: LevelState = {\n  current: 1,\n  last: 5\n}\n\nexport const level = (state: LevelState = initialState, action: Action): LevelState => {\n  switch (action.type) {\n    case LEVEL_CHANGE: {\n      let level: number = action.payload.level;\n      if (level === null) {\n        level = state.current + 1;\n      }\n      if (level < 1 || level > state.last) {\n        throw new Error(`level out of range: ${level}`);\n      }\n      return {...state, current: level};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { RESET_SCORE, SCORE_UPDATE } from '../actionTypes';\n\nexport type ScoreState = {\n  +current: number\n}\n\nconst initialState: ScoreState = {\n  current: 0\n}\n\nexport const score = (state: ScoreState = initialState, action: Action): ScoreState => {\n  let { current } = state;\n  switch (action.type) {\n    case RESET_SCORE: {\n      return {...state, current: 0};\n    }\n    case SCORE_UPDATE: {\n      const points: number = action.payload.points;\n      current += points;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { SCREEN_CHANGE } from '../actionTypes';\nimport type { ScreenType } from '../../screen';\n\nexport type ScreenState = {\n  +current: ScreenType\n}\n\nconst initialState: ScreenState = {\n  current: \"start\",\n}\n\nexport const screen = (state: ScreenState = initialState, action: Action): ScreenState => {\n  switch (action.type) {\n    case SCREEN_CHANGE: {\n      const current: ScreenType = action.payload.screen;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { combineReducers } from \"redux\";\n\nimport { debug, type DebugState } from \"./debug\";\nimport { level, type LevelState } from \"./level\";\nimport { score, type ScoreState } from \"./score\";\nimport { screen, type ScreenState } from \"./screen\";\n\n// The whole store's state.\nexport type StoreState = {\n  debug: DebugState,\n  level: LevelState,\n  score: ScoreState,\n  screen: ScreenState\n}\n\nexport default combineReducers({\n  debug,\n  level,\n  score,\n  screen\n});","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport _ from 'lodash';\n\ntype Message = string | () => string;\n\ntype Level = 'INFO' | 'DEBUG';\n\nconst levels: Level[] = ['INFO', 'DEBUG'];\n\nconst levelStringLengths: number[] = levels.map(\n  (level: Level) => level.length\n);\n\nconst widestLevel: number = _.max(levelStringLengths);\n\nexport class Log {\n\n  static info(message: Message) {\n    this.log('INFO', message);\n  }\n\n  static debug(message: Message) {\n    this.log('DEBUG', message);\n  }\n\n  static log(level: Level, message: Message) {\n    // If implement log-level setting, only evaluate function and timestamp if need to.\n    const now = new Date();\n    const messageString: string = (typeof message === 'function') ? message() : message;\n    console.log(`${now.toISOString()} ${level.padStart(widestLevel)} ${messageString}`)\n  }\n\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { takeEvery } from 'redux-saga/effects';\n\nimport type { Action } from 'redux';\n\nimport { Log } from '../../util/Log';\n\n// eslint-disable-next-line require-yield\nexport function* actionLogger(action: Action): Generator<*,*,*> {\n  Log.info(`Action: ${action.type}`);\n}\n\nexport function* actionLoggerListener(): Generator<*,*,*> {\n  yield takeEvery(\"*\", actionLogger);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { GAME_COMPLETE } from '../actionTypes';\nimport { screenChange } from '../actions';\n\nexport function* gameComplete(): Generator<*,*,*> {\n  yield put(screenChange(\"gameComplete\"));\n}\n\nexport function* gameCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(GAME_COMPLETE, gameComplete);\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createSelector } from 'reselect'\nimport { type StoreState } from '../reducers';\n\nconst getLevel = (state: StoreState) => state.level.current;\nconst getLastLevel = (state: StoreState) => state.level.last;\n\nexport const isLastLevel: ( StoreState => boolean) = createSelector(\n  [getLevel, getLastLevel],\n  (level: number, lastLevel: number) => {\n    return level === lastLevel;\n  }\n)","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, select, takeEvery } from 'redux-saga/effects';\n\nimport { LEVEL_COMPLETE } from '../actionTypes';\nimport { levelChange, startLevel, gameComplete } from '../actions';\nimport { isLastLevel } from '../selectors';\n\nexport function* levelComplete(): Generator<*,*,*> {\n  if (yield select(isLastLevel)) {\n    yield put(gameComplete());\n  } else {\n    yield put(levelChange());\n    yield put(startLevel());\n  }\n}\n\nexport function* levelCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(LEVEL_COMPLETE, levelComplete);\n}\n\n","// @flow\n//\n// (c) 2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { START } from '../actionTypes';\nimport { levelChange, resetScore, screenChange } from '../actions';\n\nexport function* start(): Generator<*,*,*> {\n  yield put(resetScore());\n  yield put(levelChange(1));\n  yield put(screenChange(\"start\"));\n}\n\nexport function* startListener(): Generator<*,*,*> {\n  yield takeEvery(START, start);\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { call, put, race, take, takeEvery } from 'redux-saga/effects';\nimport { delay } from 'redux-saga';\n\nimport { START_LEVEL, DISMISS_START_LEVEL_SCREEN, START } from '../actionTypes';\nimport { scoreUpdate, screenChange } from '../actions';\n\nexport function* startLevel(): Generator<*,*,*> {\n  yield put(screenChange(\"startLevel\"));\n  const { cancel } = yield race({\n    // With no user interaction, show the startLevel screen for 2.5s.\n    sleep: call(delay, 2500),\n    // Clicking on the startLevel screen starts the level immediately.\n    dismissal: take(DISMISS_START_LEVEL_SCREEN),\n    // It's also possible to restart the game by exiting full screen mode.\n    cancel: take(START)});\n  if (!cancel) {\n    yield put(scoreUpdate(1));\n    yield put(screenChange(\"game\"));\n  }\n}\n\nexport function* startLevelListener(): Generator<*,*,*> {\n  yield takeEvery(START_LEVEL, startLevel);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { START_GAME } from '../actionTypes';\nimport { startLevel } from '../actions';\n\nexport function* startGame(): Generator<*,*,*> {\n  yield put(startLevel());\n}\n\nexport function* startGameListener(): Generator<*,*,*> {\n  yield takeEvery(START_GAME, startGame);\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { actionLoggerListener } from './actionLogger';\nimport { gameCompleteListener } from './gameComplete';\nimport { levelCompleteListener } from './levelComplete';\nimport { startListener } from './start';\nimport { startLevelListener } from './startLevel';\nimport { startGameListener } from './startGame';\n\nexport default [\n  actionLoggerListener,\n  gameCompleteListener,\n  levelCompleteListener,\n  startListener,\n  startLevelListener,\n  startGameListener\n];","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from \"./reducers\";\nimport sagas from './sagas';\n\nexport const storeFactory = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n  );\n  // $FlowFixMe - problem with Generator type parameters.\n  sagas.forEach((saga: Generator<*,*,*>) => {\n    sagaMiddleware.run(saga);\n  });\n  return store;\n};\n\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nexport class Util {\n\n  // Clamp value to be within the range [min, max].\n  static clamp(value: number, min: number, max: number): number {\n    if (max < min) {\n      throw new Error(`max of ${max} is less than min ${min} (with value of ${value})`);\n    }\n    if (value < min) {\n      value = min;\n    }\n    if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n\n  // Asserts that a maybe-typed value is not null or undefined.\n  static nonNull<T>(value: ?T): T {\n    if (value === null) {\n      throw new Error(\"null value.\");\n    }\n    if (value === undefined) {\n      throw new Error(\"undefined value.\");\n    }\n    return value;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Body,\n  Bodies,\n  Bounds,\n  Constraint,\n  World\n} from 'matter-js'\n\nimport { Log } from '../util/Log';\nimport { Util } from '../util/Util';\n\ntype Args = {\n  +x: number,\n  +y: number,\n  +minX: number,\n  +maxX: number,\n  +width: number,\n  +height: number,\n  +world: World,\n  +maxAcceleration?: number,\n  +maxSpeed?: number,\n  +onRelease: () => void\n}\n\ntype Rect = {\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n};\n\nexport class Magnet {\n\n  +body: Body;\n  +constraints: Constraint[] = [];\n  +height: number;\n  +width: number;\n  +maxAcceleration: number;\n  +maxSpeed: number;\n  +minX: number;\n  +maxX: number;\n  +objects: Body[] = [];\n  +world: World;\n  +onRelease: () => void;\n\n  acceleration: number = 0;\n  enabled: boolean = true;\n  speed: number = 0;\n  dragging: boolean = false;\n\n  constructor(args: Args) {\n    const x = args.x;\n    const y = args.y;\n    this.minX = args.minX;\n    this.maxX = args.maxX;\n    this.width = args.width;\n    this.height = args.height;\n    this.world = args.world;\n    this.maxAcceleration = (args.maxAcceleration === undefined) ? 0.005 : args.maxAcceleration;\n    this.maxSpeed = (args.maxSpeed === undefined) ? 1.3 : args.maxSpeed;\n    this.onRelease = args.onRelease;\n    const peakHeight = this.height * 0.2;\n    const vertices = [\n      { x: -this.width / 2, y: - this.height / 2 },\n      { x:               0, y: - this.height / 2 - peakHeight },\n      { x:  this.width / 2, y: - this.height / 2 },\n      { x:  this.width / 2, y:   this.height / 2},\n      { x: -this.width / 2, y:   this.height / 2}\n    ];\n    this.body = Bodies.fromVertices(x, y, vertices, {\n      label: \"magnet\",\n      isStatic: true,\n      render: {\n        fillStyle: 'Grey'\n      }\n    });\n  }\n\n  // Bottom centre coordinates of magnet.\n  attachmentPosition(): {x: number, y: number} {\n    return { x: this.body.position.x, y: this.body.position.y + this.height / 2 };\n  }\n\n  // Register the Magnet's matter.js Body with the matter.js World.\n  addToWorld() {\n    World.add(this.world, this.body);\n  }\n\n  // Connect another Body to the Magnet.\n  attachToMagnet(other: Body) {\n    const constraint: Constraint = Constraint.create({\n      bodyA: this.body,\n      bodyB: other,\n      render: {\n        visible: false\n      }\n    })\n    this.constraints.push(constraint);\n    this.objects.push(other);\n    if (this.enabled) {\n      World.add(this.world, constraint);\n      this.reposition(other);\n    }\n  }\n\n  leftButtonPressed(event: PointerEvent) {\n    return event.buttons & 1;\n  }\n\n  insideRect(event: PointerEvent, rect: Rect) {\n    const x = event.clientX;\n    const y = event.clientY;\n    return !(x < rect.left || x > rect.right || y < rect.top || y > rect.bottom);\n  }\n\n  handlePointerEvent(\n    canvasRect: Rect,\n    event: PointerEvent) {\n    if (!event.isPrimary) {\n      // If multiple contact points are possible, ignore all but the primary\n      // (the first one for touch screens). Otherwise, magnet jumps between\n      // each contact point as events are received.\n      return;\n    }\n    if (this.dragging && event.button === 0 && event.type === 'pointerup' && this.insideRect(event, canvasRect)) {\n      // Ignoring pointerup event if it's outside the box means there's a way to\n      // change your mind about releasing the ball after start moving it.\n      this.setEnabled(false);\n    }\n    if (!this.leftButtonPressed(event)) {\n      this.dragging = false;\n      return;\n    }\n    const position = {\n      x: event.clientX - canvasRect.left,\n      y: event.clientY - canvasRect.top\n    };\n    const onMagnet = Bounds.contains(this.body.bounds, position);\n    if (onMagnet) {\n      this.dragging = true;\n      if (event.button === 0 && event.type === 'pointerdown') {\n        this.setEnabled(true);\n      }\n    }\n    if (this.dragging) {\n      this.stop();\n      Body.setPosition(this.body, { x: position.x, y: this.body.position.y});\n    }\n  }\n\n  // Start movement to left.\n  left() {\n    if (this.speed > 0) {\n      this.speed = 0;\n    }\n    this.acceleration = -this.maxAcceleration;\n  }\n\n  // Start movement to right.\n  right() {\n    if (this.speed < 0) {\n      this.speed = 0;\n    }\n    this.acceleration = this.maxAcceleration;\n  }\n\n  // Stop movement.\n  stop() {\n    this.acceleration = 0;\n    this.speed = 0;\n  }\n\n  // Handle matter.js update callback.\n  //\n  // dt - time since last update\n  update(dt: number) {\n    this.speed = Util.clamp(\n      this.speed + this.acceleration * dt,\n      -this.maxSpeed, this.maxSpeed);\n    const dx = this.speed * dt;\n    const x = Util.clamp(\n      this.body.position.x + dx,\n      this.minX, this.maxX);\n    const y = this.body.position.y;\n    Body.setPosition(this.body, { x, y });\n    Body.setVelocity(this.body, { x: this.speed, y: 0 });\n  }\n\n  // Turn the magnet on or off.\n  toggle() {\n    this.setEnabled(!this.enabled);\n  }\n\n  // Turn the magnet on or off.\n  setEnabled(enabled: boolean) {\n    if (enabled) {\n      if (!this.enabled) {\n        World.add(this.world, this.constraints);\n        this.objects.forEach((body: Body) => {\n          this.reposition(body);\n        });\n      }\n    } else {\n      if (this.enabled) {\n        World.remove(this.world, this.constraints);\n        this.onRelease();\n      }\n    }\n    this.enabled = enabled;\n  }\n\n  // If add Constraint back to World and object is far\n  // away from Magnet, it will generally accelerate\n  // through and past the Magnet. Instead, place it close\n  // where it should be in equilibrium (if it's a\n  // circle/square at least).\n  reposition(body: Body) {\n    const position = this.attachmentPosition();\n    const height: number = body.bounds.max.y - body.bounds.min.y;\n    position.y = position.y + height / 2;\n    Log.debug(`repositioning body with id: ${body.id} to: ${JSON.stringify(position)}`);\n    Body.setPosition(body, position);\n  }\n\n  // For testing.\n  getSpeed(): number {\n    return this.speed;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Bodies,\n  Body,\n  Composite,\n  Engine,\n  Events,\n  Pair,\n  Render,\n  Sleeping,\n  World\n} from 'matter-js'\nimport _ from 'lodash';\nimport seedrandom from 'seedrandom';\n\nimport { Log } from '../util/Log';\nimport { Magnet } from './Magnet';\nimport { Util } from '../util/Util';\n\nexport class GameEngine {\n\n  +ball: Body;\n  +ballImageSize: number = 64; // pixels\n  +ballRadius: number;\n  +ballHeight: number;\n  +ballWidth: number;\n  +boxHeight: number;\n  +boxWidth: number;\n  +container: HTMLElement;\n  +engine: Engine;\n  +level: number;\n  +magnet: Magnet;\n  +magnetHeight: number = 15;\n  +magnetWidth: number = 50;\n  +maxSpeedSquared: number = Math.pow(7, 2);\n  +maxAngularVelocity: number = 0.5;\n  +levelComplete: () => void;\n  // The ids of all the \"objects\".\n  +objectIds: Set<number>;\n  // The ids of the \"objects\" that have not yet been dislodged.\n  +objectIdsRemaining: Set<number>;\n  +renderer: Render;\n  +scoreUpdate: (points: number) => void;\n  +walls: Body[];\n  +wallThickness: number = 50;\n\n  lastUpdateTimestamp: ?number = null;\n  started: boolean = false;\n  stopped: boolean = false;\n  wireframe: boolean;\n\n  constructor(\n    container: HTMLElement,\n    level: number,\n    wireframe: boolean,\n    levelComplete: () => void,\n    scoreUpdate: (points: number) => void) {\n    \n    this._dislodgeCheck = this._dislodgeCheck.bind(this);\n\n    this.levelComplete = levelComplete;\n    this.scoreUpdate = scoreUpdate;\n    this.level = level;\n    this.wireframe = wireframe;\n    this.container = container;\n    this.boxHeight = container.clientHeight;\n    this.boxWidth = container.clientWidth;\n    this.engine = Engine.create();\n    this.engine.world.gravity.y = 0.2;\n    this.engine.enableSleeping = true;\n    this.ballRadius = 1.025 * this.ballImageSize / 2.0\n    this.ballHeight = this.ballRadius;\n    this.ballWidth = this.ballRadius;\n    this.magnet = this._createMagnet();\n    this.ball = this._createBall(this.magnet);\n    const walls = this._createWalls();\n    const objects = this._createObjects();\n    const objectIds = _.map(objects, (object: Body) => {\n      return object.id;\n    });\n    this.objectIds = new Set(objectIds);\n    this.objectIdsRemaining = new Set(objectIds);\n    this.magnet.attachToMagnet(this.ball);\n    World.add(this.engine.world, [\n      ...walls,\n      this.ball,\n      ...objects\n    ]);\n    this.magnet.addToWorld();\n    Log.info('Body ids:');\n    Composite.allBodies(this.engine.world).forEach((body: Body) => {\n      Log.info(`${body.id} - ${body.label}`);\n    });\n    this.renderer = Render.create({\n      element: this.container,\n      engine: this.engine,\n      options: {\n        background: \"#fafafa\",\n        width: this.boxWidth,\n        height: this.boxHeight\n      }\n    });\n    this.setWireframe(this.wireframe);\n  }\n\n  start() {\n    if (this.started) {\n      throw new Error(\"already started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"cannot restart.\");\n    }\n    Events.on(this.engine, 'collisionStart', this._handleCollision);\n    Events.on(this.engine, 'beforeUpdate', this._handleBeforeUpdate);\n    Engine.run(this.engine);\n    Render.run(this.renderer);\n    document.addEventListener('keydown', this._handleKeyPress);\n    document.addEventListener('keyup', this._handleKeyPress);\n    this.renderer.canvas.addEventListener('pointerdown', this._handlePointerEvent);\n    this.renderer.canvas.addEventListener('pointermove', this._handlePointerEvent);\n    this.renderer.canvas.addEventListener('pointerup', this._handlePointerEvent);\n    // The canvas has the touch-action CSS attribute set, but the pepjs polyfill\n    // needs a DOM attribute instead: https://github.com/jquery/PEP#touch-action\n    this.renderer.canvas[\"touch-action\"] = \"none\";\n    this.container.focus();\n    this.started = true;\n  }\n\n  stop() {\n    if (!this.started) {\n      throw new Error(\"not started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"already stopped\");\n    }\n    this.renderer.canvas.removeEventListener('pointerup', this._handlePointerEvent);\n    this.renderer.canvas.removeEventListener('pointerdown', this._handlePointerEvent);\n    this.renderer.canvas.removeEventListener('pointermove', this._handlePointerEvent);\n    document.removeEventListener('keydown', this._handleKeyPress);\n    document.removeEventListener('keyup', this._handleKeyPress);\n    Render.stop(this.renderer);\n    Events.off(this.engine, 'collisionStart');\n    Events.off(this.engine, 'beforeUpdate');\n    this.renderer.canvas.remove();\n    this.started = false;\n    this.stopped = true;\n  }\n\n  _handleCollision = (event: (pairs: [Pair]) => void) => {\n    const that = this;\n    const pairs = event.pairs;\n    pairs.forEach((pair: Pair) => {\n      [pair.bodyA, pair.bodyB].forEach((body: Body) => {\n        Sleeping.set(body, false);\n        that._dislodgeCheck(body);\n      });\n    });\n  }\n\n  _dislodgeCheck: (Body => void);\n  _dislodgeCheck(body: Body) {\n    const dislodged = this.objectIdsRemaining.delete(body.id);\n    if (dislodged) {\n      Log.debug(`dislodged: ${body.id}`);\n      const points = 1;\n      this.scoreUpdate(points);\n    }\n  }\n\n  _handlePointerEvent = (event: PointerEvent) => {\n    const rect = this.renderer.canvas.getBoundingClientRect();\n    this.magnet.handlePointerEvent(rect, event);\n  }\n\n  _handleKeyPress = (event: KeyboardEvent) => {\n    if (event.repeat) {\n      return;\n    }\n    if (event.type === \"keydown\" && event.key === \" \") {\n      this.magnet.toggle();\n    }\n    if (event.type === \"keydown\") {\n      if (event.key === 'ArrowLeft') {\n        this.magnet.left();\n      } else if (event.key === 'ArrowRight') {\n        this.magnet.right();\n      }\n    } else if (event.type === \"keyup\") {\n      this.magnet.stop();\n    } else {\n      throw new Error(event);\n    }\n  }\n\n  _handleBeforeUpdate = (event: {timestamp: number}) => {\n    const that = this;\n    if (this.lastUpdateTimestamp === undefined) {\n      throw new Error(); // flow type refinement\n    }\n    if (!(this.lastUpdateTimestamp === null)) {\n      const dt: number = event.timestamp - this.lastUpdateTimestamp;\n      this.magnet.update(dt);\n    }\n    Composite.allBodies(this.engine.world).forEach((body: Body) => {\n      // Speed and angular velocity are clamped to reduce chance\n      // that ball or object can pass through walls.\n      const angularVelocity: number = Util.clamp(body.angularVelocity,\n        -this.maxAngularVelocity, this.maxAngularVelocity);\n      Body.setAngularVelocity(body, angularVelocity);\n      const velocity = body.velocity;\n      const speedSquared = velocity.x * velocity.x + velocity.y * velocity.y;\n      if (speedSquared > this.maxSpeedSquared) {\n        const ratio = Math.sqrt(this.maxSpeedSquared / speedSquared);\n        Body.setVelocity(body, {\n          x: velocity.x * ratio,\n          y: velocity.y * ratio\n        });\n      }\n      // In case an object is fast enough to pass through wall, remove\n      // it. Otherwise, it likely falls forever and the level never completes.\n      if (!that._insideBox(body) && that.objectIds.has(body.id)) {\n        Log.debug(`escaped: ${body.id}`);\n        World.remove(that.engine.world, body);\n        that._dislodgeCheck(body); // Hopefully never required.\n      }\n    });\n    if (this._isEverythingSleepingOrEscaped()) {\n      if (this.objectIdsRemaining.size === 0) {\n        this.levelComplete();\n      } else {\n        this.magnet.setEnabled(true);\n      }\n    }\n    this.lastUpdateTimestamp = event.timestamp;\n  }\n\n  _insideBox(body: Body): boolean {\n    const x: number = body.position.x;\n    const y: number = body.position.y;\n    return !(x < 0 || x > this.boxWidth || y < 0 || y > this.boxHeight);\n  }\n\n  _isEverythingSleepingOrEscaped() {\n    return _.every(this.engine.world.bodies, (body: Body) => {\n      return body.isSleeping || !this._insideBox(body);\n    });\n  }\n\n  _createWalls(): Body[] {\n    const wallOptions = {\n      isStatic: true,\n      render: {\n        fillStyle: 'LightGrey'\n      }\n    };\n    // matter.js does positioning using centre of mass...\n    const wallTop = Bodies.rectangle(this.boxWidth / 2, 0, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - T\" });\n    const wallBottom = Bodies.rectangle(this.boxWidth / 2, this.boxHeight, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - B\" });\n    const wallRight = Bodies.rectangle(this.boxWidth, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - R\" });\n    const wallLeft = Bodies.rectangle(0, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - L\" });\n    const walls = [wallTop, wallBottom,  wallRight, wallLeft];\n    return walls;\n  }\n\n  // Initial x coordinate of magnet and ball.\n  _initialX(): number {\n    return 0.68 * (this.boxWidth - this.wallThickness / 2) + this.wallThickness / 2\n  }\n\n  _createMagnet(): Magnet {\n    const xLimit = this.wallThickness / 2 +\n      Math.max(this.magnetWidth / 2, this.ballWidth / 2) +\n      0.01 * this.boxWidth;\n    return new Magnet({\n      x: this._initialX(),\n      y: this.wallThickness / 2 + 0.01 * this.boxHeight + this.magnetHeight / 2,\n      minX: xLimit,\n      maxX: this.boxWidth - xLimit,\n      width: this.magnetWidth,\n      height: this.magnetHeight,\n      world: this.engine.world,\n      onRelease: () => this.scoreUpdate(-1)});\n  }\n\n  _createBall(magnet: Magnet): Body {\n    const x = magnet.attachmentPosition().x;\n    const y = magnet.attachmentPosition().y + this.ballRadius;\n    const ball = Bodies.circle(x, y, this.ballRadius, {\n      label: \"ball\",\n      render: {\n        sprite: {\n          texture: 'ball.png'\n        }\n      },\n      restitution: 0.5,\n      // density: 1,\n      frictionAir: 0,\n      frictionStatic: 0,\n    });\n    return ball;\n  }\n\n  _createObjects(): Body[] {\n    const random = seedrandom(this.level + 484726723);\n    const objects = []\n    _.range(0, this.level).forEach((i: number) => {\n      const radius = 10 + random() * 15;\n      const border = this.wallThickness / 2 + radius;\n      const x = border + (random() * (this.boxWidth - 2 * border));\n      const y = border + this.magnetHeight + this.ballHeight + (random() * (this.boxHeight - 2 * border - this.magnetHeight - this.ballHeight));\n      const object = Bodies.circle(x, y, radius, {\n        label: `object ${i}`,\n        isStatic: false,\n        isSleeping: true\n      });\n      objects.push(object);\n    });\n    return objects;\n  }\n\n  setWireframe(enabled: boolean) {\n    this.wireframe = enabled;\n    this.renderer.options.wireframes = enabled;\n    this.renderer.options.showSleeping = enabled;\n    this.renderer.options.showAngleIndicator = enabled;\n  }\n\n  getBodyCount() {\n    return Composite.allBodies(this.engine.world).length;\n  }\n\n  getConstraintCount() {\n    return Composite.allConstraints(this.engine.world).length;\n  }\n\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { GameEngine } from '../engine/GameEngine';\nimport { levelComplete, scoreUpdate } from '../redux/actions';\nimport { type DebugState } from '../redux/reducers/debug'\nimport { type LevelState } from '../redux/reducers/level'\nimport { Util } from '../util/Util';\n\ntype Props = {\n  level: number,\n  wireframe: boolean,\n  levelComplete: () => void,\n  scoreUpdate: (points: number) => void\n}\n\ntype State = {\n}\n\nexport class Game extends Component<Props,State> {\n\n  static CONTAINER_ID = \"matter_js_container\";\n\n  static getContainer(): ?HTMLElement {\n    return document.getElementById(Game.CONTAINER_ID);\n  }\n\n  // Set keyboard focus on the Game component.\n  //\n  // TODO a more elegant way of setting keyboard focus.\n  // ...CONTAINER_ID should have different value for each Game instance.\n  static focus() {\n    const container = Game.getContainer();\n    if (container) {\n      container.focus();\n    }\n  }\n\n  gameEngine: ?GameEngine;\n\n  constructor(props: Props) {\n    super(props);\n    this.gameEngine = null;\n  }\n\n  render() {\n    if (this.gameEngine) {\n      this.gameEngine.setWireframe(this.props.wireframe);\n    }\n    return (\n      // Need tabIndex, otherwise can't get focus and capture key events.\n      <div\n        className=\"Game\"\n        id={Game.CONTAINER_ID}\n        tabIndex=\"0\" />\n    );\n  }\n\n  _startEngine() {\n    const container = Util.nonNull(Game.getContainer());\n    this.gameEngine = new GameEngine(\n      container,\n      this.props.level,\n      this.props.wireframe,\n      this.props.levelComplete,\n      this.props.scoreUpdate);\n    this.gameEngine.start();\n  }\n\n  _stopEngine() {\n    if (this.gameEngine) {\n      this.gameEngine.stop();\n      this.gameEngine = null;\n    }\n  }\n\n  // React lifecycle.\n  componentDidMount() {\n    this._startEngine();\n  }\n\n  // React lifecycle.\n  componentWillUnmount() {\n    this._stopEngine();\n  }\n\n  // React lifecycle.\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.props.level === prevProps.level) {\n      return;\n    }\n    this._stopEngine();\n    this._startEngine();\n  }\n\n}\n\n// TODO Should LevelState/DebugState etc. include key too?\nconst mapStateToProps = (state: {level: LevelState, debug: DebugState}) => {\n  const level = state.level.current;\n  const wireframe = state.debug.wireframe;\n  return { level, wireframe };\n};\nconst actionCreators = {\n  levelComplete,\n  scoreUpdate\n}\nexport default connect(mapStateToProps, actionCreators)(Game);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\n\nimport type { ScoreState } from '../redux/reducers/score';\nimport { toggleWireframeMode } from '../redux/actions';\n\ntype Props = {\n  score: number,\n  toggleWireframeMode: () => void\n}\n\nexport const Score = (props: Props) => {\n  return (\n    <div className=\"Score\" onDoubleClick={props.toggleWireframeMode}>{props.score}</div>\n  );\n}\n\nconst mapStateToProps = (state: {score: ScoreState}) => {\n  return { score: state.score.current };\n}\nconst actionCreators = {\n  toggleWireframeMode\n};\nexport default connect(mapStateToProps, actionCreators)(Score);","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport type { LevelState } from '../redux/reducers/level';\nimport { dismissStartLevelScreen } from '../redux/actions';\n\ntype Props = {\n  level: number,\n  dismissStartLevelScreen: () => void\n};\n\nexport const StartLevelScreen = (props: Props) => {\n  return (\n    <div\n      className=\"StartLevelScreen\"\n      onClick={props.dismissStartLevelScreen}>\n      Level {props.level}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  return { level };\n};\nconst actionCreators = {\n  dismissStartLevelScreen\n};\n\nexport default connect(mapStateToProps, actionCreators)(StartLevelScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\n\nimport { levelChange } from '../redux/actions';\nimport type { LevelState } from '../redux/reducers/level';\n\ntype Props = {\n  level: number,\n  numberOfLevels: number,\n  levelChange: (number) => void\n}\n\nexport class Level extends Component<Props> {\n\n  render() {\n    return <select value={this.props.level} onChange={this.handleClick}> \n      {_.range(1, this.props.numberOfLevels + 1).map((i: number) =>\n        <option key={i} value={i}>{i}</option>\n      )}\n    </select>;\n  }\n\n  handleClick = (event: SyntheticEvent<HTMLSelectElement>) => {\n    const target: HTMLSelectElement = event.currentTarget;\n    if (target) {\n      const level: number = parseInt(target.value);\n      this.props.levelChange(level);\n    }\n  }\n\n}\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  const numberOfLevels = state.level.last\n  return { level, numberOfLevels };\n};\nconst actionCreators = {\n  levelChange\n};\nexport default connect(mapStateToProps, actionCreators)(Level);\n","// @flow\n\nimport { Cookies } from 'react-cookie-consent';\n\nexport const COOKIE_CONSENT = \"CookieConsent\";\n\nexport function cookieConsentGiven(): boolean {\n  return Cookies.get(COOKIE_CONSENT) === \"true\";\n}","/* @flow */\n\nimport ReactGA from 'react-ga';\nimport ScreenType from '../screen'\nimport { Log } from './Log';\nimport { cookieConsentGiven } from './cookies';\n\nexport function initializeReactGoogleAnalytics(initialScreen: ScreenType) {\n  ReactGA.initialize('UA-144250820-2');\n  pageview(initialScreen, true);\n}\n\nexport function pageview(screen: ScreenType, consentGiven: ?boolean) {\n  const page = window.location.pathname + screen;\n  Log.info(() => \"GA page: \" + page);\n  // Cookie isn't set when CookieConsent component calls onAccept callback, so\n  // need to use consentGiven to override cookieConsentGiven().\n  if (consentGiven === undefined) {\n    consentGiven = cookieConsentGiven();\n  }\n  if (consentGiven) {\n    ReactGA.set({page: page});\n    ReactGA.pageview(page);\n  } else {\n    Log.info(\"GA pageview not sent since cookie consent not given.\");\n  }\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport Level from '../components/Level';\nimport { startGame } from '../redux/actions';\nimport CookieConsent from \"react-cookie-consent\";\nimport { COOKIE_CONSENT } from '../util/cookies';\nimport { initializeReactGoogleAnalytics } from '../util/google_analytics';\n\ntype Props = {\n  startGame: () => void,\n  toggleFullscreen: () => void\n};\n\nexport class StartScreen extends Component<Props> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  ref: { current: any } = React.createRef();\n\n  constructor(props: Props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCrashClick = this.handleCrashClick.bind(this);\n    this.stopPropagation = this.stopPropagation.bind(this);\n  }\n\n  render() {\n    const showLevelSelector: boolean =\n      process.env.NODE_ENV === \"development\" ||\n      process.env.NODE_ENV === \"test\";\n    const level = showLevelSelector ? <Level /> : null;\n    return (\n      <div>\n        <div\n          ref={this.ref}\n          tabIndex=\"0\"\n          onClick={this.handleClick}\n          onKeyPress={this.handleClick}\n          className=\"StartScreen\">\n          <p>Touch screen, click or press any key to start game.</p>\n          <p>Use your finger, mouse or arrow keys to position the magnet.</p>\n          <p>Release finger/button or press space to turn the magnet on or off.</p>\n          <p>You move to the next level when all the objects (including the ball) are at the bottom of the box.</p>\n          <p>You gain a point for each dislodged object and starting a new level, but lose a point each time release ball.</p>\n          <p>Double clicking/tapping on score toggles debug mode.</p>\n          <div><p>JavaScript <span onClick={this.handleCrashClick}>crashes</span> are recorded using <a href=\"https://sentry.io\" onClick={this.stopPropagation}>Sentry</a>.</p></div>\n          <p>Use of this site is tracked using <a href=\"https://analytics.google.com/analytics/web/\">Google Analytics</a>.</p>\n          {/* Precache content that is required later. */}\n          <img hidden={true} alt=\"\" src=\"ball.png\"/>\n          {level}\n        </div>\n        <CookieConsent\n          buttonText=\"I Agree\"\n          cookieName={COOKIE_CONSENT}\n          onAccept={() => {\n            initializeReactGoogleAnalytics(\"start\")\n          }}\n        >\n            This site uses cookies.\n        </CookieConsent>\n      </div>\n    );\n  }\n\n  handleClick: () => void; // Allows binding in constructor without flow error.\n  async handleClick() {\n    this.props.toggleFullscreen(); // Can only be called from UI event.\n    this.props.startGame();\n    // Avoid resizing the screen while physics engine is running.\n    if (window.screen &&\n      window.screen.orientation &&\n      window.screen.orientation.lock &&\n      window.screen.orientation.type) {\n      // https://w3c.github.io/screen-orientation/\n      try {\n        await window.screen.orientation.lock(window.screen.orientation.type);\n      } catch (e) {\n        // NotSupportedError.\n      }\n    }\n  }\n\n  handleCrashClick = (e: SyntheticEvent<HTMLElement>) => {\n    e.stopPropagation();\n    throw new Error(\"testing 123 - clicked on 'crash' in start page.\");\n  }\n\n  stopPropagation = (e: SyntheticEvent<HTMLElement>) => {\n    e.stopPropagation();\n  }\n\n  componentDidMount() {\n    this.ref.current.focus();\n  }\n\n}\n\nconst mapStateToProps = null;\nconst actionCreators = { startGame };\n\nexport default connect(mapStateToProps, actionCreators)(StartScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport type { ScreenState } from '../redux/reducers/screen';\nimport GameScreen from './GameScreen';\nimport GameCompleteScreen from './GameCompleteScreen';\nimport StartLevelScreen from './StartLevelScreen';\nimport StartScreen from './StartScreen';\nimport { pageview } from '../util/google_analytics';\n\nconst screens = {\n  \"start\": StartScreen,\n  \"startLevel\": StartLevelScreen,\n  \"game\": GameScreen,\n  \"gameComplete\": GameCompleteScreen\n}\n\nexport type ScreenType = $Keys<typeof screens>;\n\ntype Props = {\n  +screen: ScreenType,\n  +toggleFullscreen: () => void\n}\n\ntype State = {}\n\nclass Screen extends Component<Props,State> {\n\n  render() {\n    const component = screens[this.props.screen];\n    return React.createElement(\n      component,\n      { toggleFullscreen: this.props.toggleFullscreen },\n      null\n    );\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.screen !== this.props.screen) {\n      pageview(this.props.screen);\n    }\n  }\n\n}\n\nexport const mapStateToProps = (state: {screen: ScreenState}) => {\n  const screen = state.screen.current;\n  return { screen };\n};\nconst actionCreators = {};\nexport default connect(mapStateToProps, actionCreators)(Screen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\nimport Game from '../components/Game';\nimport Score from '../components/Score';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div className=\"GameScreen\">\n      <Score />\n      <Game />\n    </div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div>Game Complete</div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport Fullscreenable from 'react-fullscreenable';\n\nimport { start } from '../redux/actions';\nimport { storeFactory } from '../redux/store';\nimport './App.css';\nimport Screen from '../screen';\nimport { cookieConsentGiven } from '../util/cookies';\nimport { initializeReactGoogleAnalytics } from '../util/google_analytics';\n\ntype Props = {\n  isFullscreen: boolean, // From Fullscreenable.\n  toggleFullscreen: () => void // From Fullscreenable.\n};\n\ntype State = {\n};\n\nclass App extends Component<Props,State> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  store: Object;\n  reactGAInitialized: boolean = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.store = storeFactory();\n  }\n\n  render() {\n    return (\n      <Provider store={this.store}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Screen toggleFullscreen={this.props.toggleFullscreen}/>\n          </header>\n        </div>\n      </Provider>\n    );\n  }\n\n  componentDidMount() {\n    if (!this.reactGAInitialized && cookieConsentGiven()) {\n      initializeReactGoogleAnalytics(\"start\");\n      this.reactGAInitialized = true;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.isFullscreen && !this.props.isFullscreen) {\n      this.store.dispatch(start());\n    }\n  }\n\n}\n\nexport default Fullscreenable()(App);\n","// @flow\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as Sentry from '@sentry/browser';\nimport App from './components/App';\nimport { Util } from './util/Util'\n\n// https://www.w3.org/TR/pointerevents/ polyfill.\nimport 'pepjs';\n\n// Crash reporting - should be configured as early as possible.\nconst SENTRY_DSN = \"https://817a6d8f2f2940fa8ba8d6bfa0842617@sentry.io/1509240\";\nconst SENTRY_RELEASE = \"react-game@70e69016c9bc7cae1c45e34d5191a00c97b9198d\";\n// eslint-disable-next-line no-useless-concat\nif (SENTRY_DSN !== \"__SENTRY\" + \"_DSN__\") {\n  Sentry.init({\n    dsn: SENTRY_DSN,\n    release: SENTRY_RELEASE,\n    environment: \"production\"\n  });\n}\n\n// https://github.com/liabru/matter-js/issues/559\nwindow.decomp = require('poly-decomp');\n\nconst rootElement = Util.nonNull(document.getElementById('root'));\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}