* configure travis-ci test server.
  - deploy coverage report to github pages.
  - link from game to source code.
  - link from game to coverage report.
  - flow coverage
  - is better reporting possible?

* connected components have poor/no jest coverage.

* When dragging magnet, don't move centre of magnet to pointerdown coordinates.
  - record offset when start dragging

* Reattaching ball to magnet stops next-level detection working.
  - have to release it before can progress
  - ball often gets enormous angular momentum too, preventing level completion.

* Objects can fall out of box if fling or spin ball fast enough and game never ends.
  - limit max. speed.
  - thicker walls?

* Higher score if release ball fewer times.
  - limited number of balls for each levels
    - one per object
  - indicate number of balls available
  - game over if run out of balls
  - extra points if complete level with balls remaining
  - bonus if complete game
  
* js crash (in reducer) only shown in debug console.
  - a backtrace on screen in debug build would make testing better.
  - what about release build?

* Indicate when points are won.
  - numbered bubbles that fade out over time.
    - when hit balls
    - extra points at end of level
    - extra points at end of game.

* Replace ball with anvil
  - change image
    - https://clipartimage.com/clipart/12640-anvil-clipart.html?
  - use anvil-shaped matter.js Body
  - rename js field
  
* Add images for objects.

* Electromagnet image.

* Add cable for electromagnet.

* No typescript extensions => no js formatter in VSC?

* Importing Foo wrapped with react-redux connect as Foo using default export is unclear.
  - it's not immediately obvious that component Foo is wrapped.

* mobile browser support.
  - full-screen not fixed-size layout
  - sufficiently-large UI elements
    - >= 11 mm
  - test on safari

* Deploying to gh-pages creates a lot of blobs in git (e.g. node_modules)
  - deploy somewhere else?
  - uses fewer files somehow.

* Localization.

* High Scrore table.