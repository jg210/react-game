{"version":3,"sources":["redux/actionTypes.js","redux/reducers/debug.js","redux/reducers/level.js","redux/reducers/score.js","redux/reducers/screen.js","redux/reducers/index.js","util/Log.js","redux/sagas/actionLogger.js","redux/actions.js","redux/sagas/gameComplete.js","redux/selectors/index.js","redux/sagas/levelComplete.js","redux/sagas/startLevel.js","redux/sagas/startGame.js","redux/sagas/index.js","redux/store.js","util/Util.js","engine/Magnet.js","engine/GameEngine.js","components/Game.js","components/Level.js","components/Score.js","components/WireframeCheckbox.js","screen/StartLevelScreen.js","screen/StartScreen.js","screen/index.js","screen/GameScreen.js","screen/GameCompleteScreen.js","components/App.js","index.js"],"names":["START_GAME","LEVEL_COMPLETE","GAME_COMPLETE","START_LEVEL","initialState","wireframe","current","last","combineReducers","debug","state","arguments","length","undefined","action","type","Object","objectSpread","payload","enabled","level","Error","concat","score","points","screen","levelStringLengths","map","widestLevel","_","max","Log","classCallCheck","this","createClass","key","value","message","log","now","Date","messageString","console","toISOString","padStart","actionLogger","actionLoggerListener","regenerator_default","a","wrap","_context","prev","next","info","stop","_marked","_context2","takeEvery","_marked2","gameComplete","levelChange","startLevel","screenChange","gameCompleteListener","put","gameComplete_marked","gameComplete_marked2","isLastLevel","createSelector","lastLevel","levelComplete","levelCompleteListener","select","sent","levelComplete_marked","levelComplete_marked2","startLevelListener","call","delay","startLevel_marked","startLevel_marked2","startGame","startGameListener","startGame_marked","startGame_marked2","sagas","storeFactory","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","forEach","saga","run","Util","min","Magnet","args","constraints","acceleration","speed","dragging","x","y","minX","maxX","width","height","world","maxAcceleration","maxSpeed","peakHeight","vertices","body","Bodies","fromVertices","label","isStatic","render","fillStyle","position","World","add","other","constraint","Constraint","create","bodyA","bodyB","visible","push","event","buttons","canvasRect","button","toggle","leftButtonPressed","clientX","left","clientY","top","Bounds","contains","bounds","Body","setPosition","dt","clamp","dx","setEnabled","remove","GameEngine","container","scoreUpdate","_this","ballImageSize","boxHeight","boxWidth","magnetHeight","magnetWidth","wallThickness","lastUpdateTimestamp","started","stopped","_handleCollision","that","pairs","pair","Sleeping","set","remainingObjectIds","delete","id","_handlePointerEvent","rect","renderer","canvas","getBoundingClientRect","magnet","handlePointerEvent","_handleKeyPress","repeat","right","_handleBeforeUpdate","timestamp","update","_isEverythingSleeping","size","engine","Engine","gravity","enableSleeping","ballRadius","ballHeight","ballWidth","_createMagnet","ball","_createBall","walls","_createWalls","objects","_createObjects","object","Set","attachToMagnet","toConsumableArray","addToWorld","Composite","allBodies","Render","element","options","background","setWireframe","Events","on","document","addEventListener","focus","removeEventListener","off","every","bodies","isSleeping","wallOptions","rectangle","xLimit","Math","_initialX","attachmentPosition","circle","sprite","texture","restitution","frictionAir","frictionStatic","_this2","random","seedrandom","range","i","radius","border","wireframes","showSleeping","showAngleIndicator","allConstraints","Game","_Component","props","possibleConstructorReturn","getPrototypeOf","gameEngine","inherits","getElementById","CONTAINER_ID","getContainer","react_default","createElement","className","tabIndex","nonNull","start","_startEngine","_stopEngine","prevProps","prevState","Component","actionCreators","connect","Level","_getPrototypeOf2","_len","Array","_key","apply","handleClick","target","currentTarget","parseInt","onChange","numberOfLevels","WireframeCheckbox","setWireframeMode","checked","StartScreen","ref","React","createRef","onClick","onKeyPress","screens","game","components_Score","components_Game","components_Level","components_WireframeCheckbox","StartLevelScreen","component","App","es","src_screen","window","decomp","require","rootElement","ReactDOM","src_components_App"],"mappings":"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","file":"static/js/main.ef27c4ee.chunk.js","sourcesContent":["// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport type { ScreenType } from '../screen';\n\nexport const START_GAME = 'START_GAME';\nexport type StartGameAction = {\n  type: typeof(START_GAME)\n};\n\nexport const LEVEL_COMPLETE = 'LEVEL_COMPLETE';\nexport type LevelCompleteAction = {\n  type: typeof(LEVEL_COMPLETE)\n};\n\nexport const GAME_COMPLETE = 'GAME_COMPLETE';\nexport type GameCompleteAction = {\n  type: typeof(GAME_COMPLETE)\n};\n\nexport const LEVEL_CHANGE = 'LEVEL_CHANGE';\nexport type LevelChangeAction = {\n  type: typeof(LEVEL_CHANGE),\n  payload: { level: number }\n};\n\nexport const START_LEVEL = 'START_LEVEL';\nexport type StartLevelAction = {\n  type: typeof(START_LEVEL)\n};\n\nexport const SCORE_UPDATE = 'SCORE_UPDATE';\nexport type ScoreUpdateAction = {\n  type: typeof(SCORE_UPDATE),\n  payload: { points: number }\n};\n\nexport const SCREEN_CHANGE = 'SCREEN_CHANGE';\nexport type ScreenChangeAction = {\n  type: typeof(SCREEN_CHANGE),\n  payload: { screen: ScreenType }\n};\n\nexport const SET_WIREFRAME_MODE = 'SET_WIREFRAME_MODE';\nexport type SetWireframeModeAction = {\n  type: typeof(SET_WIREFRAME_MODE),\n  payload: { enabled: boolean }\n};\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\n\nimport { Action } from 'redux';\nimport { SET_WIREFRAME_MODE } from '../actionTypes';\n\nexport type DebugState = {\n  +wireframe: boolean\n}\n\nconst initialState: DebugState = {\n  wireframe: false\n}\n\nexport const debug = (state: DebugState = initialState, action: Action): DebugState => {\n  switch (action.type) {\n    case SET_WIREFRAME_MODE: {\n      return {...state, wireframe: action.payload.enabled};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { LEVEL_CHANGE } from '../actionTypes';\n\nexport type LevelState = {\n  +current: number,\n  +last: number\n}\n\nconst initialState: LevelState = {\n  current: 1,\n  last: 5\n}\n\nexport const level = (state: LevelState = initialState, action: Action): LevelState => {\n  switch (action.type) {\n    case LEVEL_CHANGE: {\n      let level: number = action.payload.level;\n      if (level === null) {\n        level = state.current + 1;\n      }\n      if (level < 1 || level > state.last) {\n        throw new Error(`level out of range: ${level}`);\n      }\n      return {...state, current: level};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { SCORE_UPDATE } from '../actionTypes';\n\nexport type ScoreState = {\n  +current: number\n}\n\nconst initialState: ScoreState = {\n  current: 0\n}\n\nexport const score = (state: ScoreState = initialState, action: Action): ScoreState => {\n  let { current } = state;\n  switch (action.type) {\n    case SCORE_UPDATE: {\n      const points: number = action.payload.points;\n      current += points;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { SCREEN_CHANGE } from '../actionTypes';\nimport type { ScreenType } from '../../screen';\n\nexport type ScreenState = {\n  +current: ScreenType\n}\n\nconst initialState: ScreenState = {\n  current: \"start\",\n}\n\nexport const screen = (state: ScreenState = initialState, action: Action): ScreenState => {\n  switch (action.type) {\n    case SCREEN_CHANGE: {\n      const current: ScreenType = action.payload.screen;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { combineReducers } from \"redux\";\n\nimport { debug } from \"./debug\";\nimport { level } from \"./level\";\nimport { score } from \"./score\";\nimport { screen } from \"./screen\";\n\nexport default combineReducers({\n  debug,\n  level,\n  score,\n  screen\n});","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport _ from 'lodash';\n\ntype Message = string | () => string;\n\ntype Level = 'INFO' | 'DEBUG';\n\nconst levels: Level[] = ['INFO', 'DEBUG'];\n\nconst levelStringLengths: number[] = levels.map(\n  (level: Level) => level.length\n);\n\nconst widestLevel: number = _.max(levelStringLengths);\n\nexport class Log {\n\n  static info(message: Message) {\n    this.log('INFO', message);\n  }\n\n  static debug(message: Message) {\n    this.log('DEBUG', message);\n  }\n\n  static log(level: Level, message: Message) {\n    // If implement log-level setting, only evaluate function and timestamp if need to.\n    const now = new Date();\n    const messageString: string = (typeof message === 'function') ? message() : message;\n    console.log(`${now.toISOString()} ${level.padStart(widestLevel)} ${messageString}`)\n  }\n\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { takeEvery } from 'redux-saga/effects';\n\nimport type { Action } from 'redux';\n\nimport { Log } from '../../util/Log';\n\n// eslint-disable-next-line require-yield\nexport function* actionLogger(action: Action): Generator<*,*,*> {\n  Log.info(`Action: ${action.type}`);\n}\n\nexport function* actionLoggerListener(): Generator<*,*,*> {\n  yield takeEvery(\"*\", actionLogger);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  GAME_COMPLETE,\n  LEVEL_COMPLETE,\n  LEVEL_CHANGE,\n  START_LEVEL,\n  SCORE_UPDATE,\n  SCREEN_CHANGE,\n  SET_WIREFRAME_MODE,\n  START_GAME\n} from './actionTypes'\nimport type { ScreenType } from '../screen';\n\nexport const startGame = () => ({\n  type: START_GAME\n});\n\nexport const gameComplete = () => ({\n  type: GAME_COMPLETE\n});\n\nexport const levelComplete = () => ({\n  type: LEVEL_COMPLETE\n});\n\nexport const levelChange = (level: ?number = null) => ({\n  type: LEVEL_CHANGE,\n  payload: {\n    level: level\n  }\n});\n\nexport const startLevel = () => ({\n  type: START_LEVEL\n});\n\nexport const scoreUpdate = (points: number) => ({\n  type: SCORE_UPDATE,\n  payload: {\n    points: points\n  }\n});\n\nexport const setWireframeMode = (enabled: boolean) => ({\n  type: SET_WIREFRAME_MODE,\n  payload: {\n    enabled\n  }\n});\n\nexport const screenChange = (screen: ScreenType) => ({\n  type: SCREEN_CHANGE,\n  payload: {\n    screen: screen\n  }\n});\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { GAME_COMPLETE } from '../actionTypes';\nimport { screenChange } from '../actions';\n\nexport function* gameComplete(): Generator<*,*,*> {\n  yield put(screenChange(\"gameComplete\"));\n}\n\nexport function* gameCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(GAME_COMPLETE, gameComplete);\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createSelector } from 'reselect'\n\nimport { type LevelState } from '../reducers/level';\n\ntype State = { level: LevelState }\n\nconst getLevel = (state: State) => state.level.current;\nconst getLastLevel = (state: State) => state.level.last;\n\nexport const isLastLevel = createSelector(\n  [getLevel, getLastLevel],\n  (level: number, lastLevel: number) => {\n    return level === lastLevel;\n  }\n)","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, select, takeEvery } from 'redux-saga/effects';\n\nimport { LEVEL_COMPLETE } from '../actionTypes';\nimport { levelChange, startLevel, gameComplete } from '../actions';\nimport { isLastLevel } from '../selectors';\n\nexport function* levelComplete(): Generator<*,*,*> {\n  if (yield select(isLastLevel)) {\n    yield put(gameComplete());\n  } else {\n    yield put(levelChange());\n    yield put(startLevel());\n  }\n}\n\nexport function* levelCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(LEVEL_COMPLETE, levelComplete);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { delay } from 'redux-saga'\n\nimport { START_LEVEL } from '../actionTypes';\nimport { screenChange } from '../actions';\n\nexport function* startLevel(): Generator<*,*,*> {\n  yield put(screenChange(\"startLevel\"));\n  yield call(delay, 2500);\n  yield put(screenChange(\"game\"));\n}\n\nexport function* startLevelListener(): Generator<*,*,*> {\n  yield takeEvery(START_LEVEL, startLevel);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { START_GAME } from '../actionTypes';\nimport { startLevel } from '../actions';\n\nexport function* startGame(): Generator<*,*,*> {\n  yield put(startLevel());\n}\n\nexport function* startGameListener(): Generator<*,*,*> {\n  yield takeEvery(START_GAME, startGame);\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { actionLoggerListener } from './actionLogger';\nimport { gameCompleteListener } from './gameComplete';\nimport { levelCompleteListener } from './levelComplete';\nimport { startLevelListener } from './startLevel';\nimport { startGameListener } from './startGame';\n\nexport default [\n  actionLoggerListener,\n  gameCompleteListener,\n  levelCompleteListener,\n  startLevelListener,\n  startGameListener\n];","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from \"./reducers\";\nimport sagas from './sagas';\n\nexport const storeFactory = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n  );\n  // $FlowFixMe - problem with Generator type parameters.\n  sagas.forEach((saga: Generator<*,*,*>) => {\n    sagaMiddleware.run(saga);\n  });\n  return store;\n};\n\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nexport class Util {\n\n  // Clamp value to be within the range [min, max].\n  static clamp(value: number, min: number, max: number): number {\n    if (max < min) {\n      throw new Error(`max of ${max} is less than min ${min} (with value of ${value})`);\n    }\n    if (value < min) {\n      value = min;\n    }\n    if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n\n  // Asserts that a maybe-typed value is not null or undefined.\n  static nonNull<T>(value: ?T): T {\n    if (value === null) {\n      throw new Error(\"null value.\");\n    }\n    if (value === undefined) {\n      throw new Error(\"undefined value.\");\n    }\n    return value;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Body,\n  Bodies,\n  Bounds,\n  Constraint,\n  World\n} from 'matter-js'\n\nimport { Util } from '../util/Util';\n\ntype Args = {\n  +x: number,\n  +y: number,\n  +minX: number,\n  +maxX: number,\n  +width: number,\n  +height: number,\n  +world: World,\n  +maxAcceleration?: number,\n  +maxSpeed?: number\n}\n\nexport class Magnet {\n\n  +body: Body;\n  +constraints: Constraint[] = [];\n  +height: number;\n  +width: number;\n  +maxAcceleration: number;\n  +maxSpeed: number;\n  +minX: number;\n  +maxX: number;\n  +world: World;\n\n  acceleration: number = 0;\n  enabled: boolean = true;\n  speed: number = 0;\n  dragging: boolean = false;\n\n  constructor(args: Args) {\n    const x = args.x;\n    const y = args.y;\n    this.minX = args.minX;\n    this.maxX = args.maxX;\n    this.width = args.width;\n    this.height = args.height;\n    this.world = args.world;\n    this.maxAcceleration = (args.maxAcceleration === undefined) ? 0.005 : args.maxAcceleration;\n    this.maxSpeed = (args.maxSpeed === undefined) ? 1.3 : args.maxSpeed;\n    const peakHeight = this.height * 0.2;\n    const vertices = [\n      { x: -this.width / 2, y: - this.height / 2 },\n      { x:               0, y: - this.height / 2 - peakHeight },\n      { x:  this.width / 2, y: - this.height / 2 },\n      { x:  this.width / 2, y:   this.height / 2},\n      { x: -this.width / 2, y:   this.height / 2}\n    ];\n    this.body = Bodies.fromVertices(x, y, vertices, {\n      label: \"magnet\",\n      isStatic: true,\n      render: {\n        fillStyle: 'Grey'\n      }\n    });\n  }\n\n  // Bottom centre coordinates of magnet.\n  attachmentPosition() {\n    return { x: this.body.position.x, y: this.body.position.y + this.height / 2 };\n  }\n\n  // Register the Magnet's matter.js Body with the matter.js World.\n  addToWorld() {\n    World.add(this.world, this.body);\n  }\n\n  // Connect another Body to the Magnet.\n  attachToMagnet(other: Body) {\n    const constraint: Constraint = Constraint.create({\n      bodyA: this.body,\n      bodyB: other,\n      render: {\n        visible: false\n      }\n    })\n    this.constraints.push(constraint);\n    if (this.enabled) {\n      World.add(this.world, constraint);\n    }\n  }\n\n  leftButtonPressed(event: PointerEvent) {\n    return event.buttons & 1;\n  }\n\n  handlePointerEvent(\n    canvasRect: { left: number, top: number},\n    event: PointerEvent) {\n    if (event.type === 'pointerup' && event.button === 0) {\n      if (this.dragging) {\n        this.toggle();\n      }\n    }\n    if (!this.leftButtonPressed(event)) {\n      this.dragging = false;\n      return;\n    }\n    const position = {\n      x: event.clientX - canvasRect.left,\n      y: event.clientY - canvasRect.top\n    };\n    const onMagnet = Bounds.contains(this.body.bounds, position);\n    if (onMagnet) {\n      this.dragging = true;\n    }\n    if (this.dragging) {\n      this.stop();\n      Body.setPosition(this.body, { x: position.x, y: this.body.position.y});\n    }\n  }\n\n  // Start movement to left.\n  left() {\n    if (this.speed > 0) {\n      this.speed = 0;\n    }\n    this.acceleration = -this.maxAcceleration;\n  }\n\n  // Start movement to right.\n  right() {\n    if (this.speed < 0) {\n      this.speed = 0;\n    }\n    this.acceleration = this.maxAcceleration;\n  }\n\n  // Stop movement.\n  stop() {\n    this.acceleration = 0;\n    this.speed = 0;\n  }\n\n  // Handle matter.js update callback.\n  //\n  // dt - time since last update\n  update(dt: number) {\n    this.speed = Util.clamp(\n      this.speed + this.acceleration * dt,\n      -this.maxSpeed, this.maxSpeed);\n    const dx = this.speed * dt;\n    const x = Util.clamp(\n      this.body.position.x + dx,\n      this.minX, this.maxX);\n    const y = this.body.position.y;\n    Body.setPosition(this.body, { x, y });\n  }\n\n  // Turn the magnet on or off.\n  toggle() {\n    this.setEnabled(!this.enabled);\n    this.dragging = false;\n  }\n\n  // Turn the magnet on or off.\n  setEnabled(enabled: boolean) {\n    if (enabled) {\n      if (!this.enabled) {\n        World.add(this.world, this.constraints);\n      }\n    } else {\n      if (this.enabled) {\n        World.remove(this.world, this.constraints);\n      }\n    }\n    this.enabled = enabled;\n  }\n\n  // For testing.\n  getSpeed(): number {\n    return this.speed;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Bodies,\n  Body,\n  Composite,\n  Engine,\n  Events,\n  Pair,\n  Render,\n  Sleeping,\n  World\n} from 'matter-js'\nimport _ from 'lodash';\nimport seedrandom from 'seedrandom';\n\nimport { Log } from '../util/Log';\nimport { Magnet } from './Magnet';\n\nexport class GameEngine {\n\n  +ball: Body;\n  +ballImageSize: number = 64; // pixels\n  +ballRadius: number;\n  +ballHeight: number;\n  +ballWidth: number;\n  +boxHeight: number = 600;\n  +boxWidth: number = 800;\n  +container: HTMLElement;\n  +engine: Engine;\n  +level: number;\n  +magnet: Magnet;\n  +magnetHeight: number = 15;\n  +magnetWidth: number = 50;\n  +levelComplete: () => void;\n  +remainingObjectIds: Set<number>;\n  +renderer: Render;\n  +scoreUpdate: (points: number) => void;\n  +walls: Body[];\n  +wallThickness: number = 50;\n\n  lastUpdateTimestamp: ?number = null;\n  started: boolean = false;\n  stopped: boolean = false;\n  wireframe: boolean;\n\n  constructor(\n    container: HTMLElement,\n    level: number,\n    wireframe: boolean,\n    levelComplete: () => void,\n    scoreUpdate: (points: number) => void) {\n    \n    this.levelComplete = levelComplete;\n    this.scoreUpdate = scoreUpdate;\n    this.level = level;\n    this.wireframe = wireframe;\n    this.container = container;\n    this.engine = Engine.create();\n    this.engine.world.gravity.y = 0.2;\n    this.engine.enableSleeping = true;\n    this.ballRadius = 1.025 * this.ballImageSize / 2.0\n    this.ballHeight = this.ballRadius;\n    this.ballWidth = this.ballRadius;\n    this.magnet = this._createMagnet();\n    this.ball = this._createBall(this.magnet);\n    const walls = this._createWalls();\n    const objects = this._createObjects();\n    const remainingObjectIds = _.map(objects, (object: Body) => {\n      return object.id;\n    });\n    this.remainingObjectIds = new Set(remainingObjectIds);\n    this.magnet.attachToMagnet(this.ball);\n    World.add(this.engine.world, [\n      ...walls,\n      this.ball,\n      ...objects\n    ]);\n    this.magnet.addToWorld();\n    Log.info('Body ids:');\n    Composite.allBodies(this.engine.world).forEach((body: Body) => {\n      Log.info(`${body.id} - ${body.label}`);\n    });\n    this.renderer = Render.create({\n      element: this.container,\n      engine: this.engine,\n      options: {\n        background: \"#fafafa\",\n        width: this.boxWidth,\n        height: this.boxHeight\n      }\n    });\n    this.setWireframe(this.wireframe);\n  }\n\n  start() {\n    if (this.started) {\n      throw new Error(\"already started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"cannot restart.\");\n    }\n    Events.on(this.engine, 'collisionStart', this._handleCollision);\n    Events.on(this.engine, 'beforeUpdate', this._handleBeforeUpdate);\n    Engine.run(this.engine);\n    Render.run(this.renderer);\n    document.addEventListener('keydown', this._handleKeyPress);\n    document.addEventListener('keyup', this._handleKeyPress);\n    this.renderer.canvas.addEventListener('pointerdown', this._handlePointerEvent);\n    this.renderer.canvas.addEventListener('pointermove', this._handlePointerEvent);\n    this.renderer.canvas.addEventListener('pointerup', this._handlePointerEvent);\n    // The canvas has the touch-action CSS attribute set, but the pepjs polyfill\n    // needs a DOM attribute instead: https://github.com/jquery/PEP#touch-action\n    this.renderer.canvas[\"touch-action\"] = \"none\";\n    this.container.focus();\n    this.started = true;\n  }\n\n  stop() {\n    if (!this.started) {\n      throw new Error(\"not started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"already stopped\");\n    }\n    this.renderer.canvas.removeEventListener('pointerup', this._handlePointerEvent);\n    this.renderer.canvas.removeEventListener('pointerdown', this._handlePointerEvent);\n    this.renderer.canvas.removeEventListener('pointermove', this._handlePointerEvent);\n    document.removeEventListener('keydown', this._handleKeyPress);\n    document.removeEventListener('keyup', this._handleKeyPress);\n    Render.stop(this.renderer);\n    Events.off(this.engine, 'collisionStart');\n    Events.off(this.engine, 'beforeUpdate');\n    this.renderer.canvas.remove();\n    this.started = false;\n    this.stopped = true;\n  }\n\n  _handleCollision = (event: (pairs: [Pair]) => void) => {\n    const that = this;\n    const pairs = event.pairs;\n    pairs.forEach((pair: Pair) => {\n      [pair.bodyA, pair.bodyB].forEach((body: Body) => {\n        Sleeping.set(body, false);\n        const dislodged = that.remainingObjectIds.delete(body.id);\n        if (dislodged) {\n          const points = 1;\n          that.scoreUpdate(points);\n        }\n      });\n    });\n  }\n\n  _handlePointerEvent = (event: PointerEvent) => {\n    var rect = this.renderer.canvas.getBoundingClientRect();\n    this.magnet.handlePointerEvent(rect, event);\n  }\n\n  _handleKeyPress = (event: KeyboardEvent) => {\n    if (event.repeat) {\n      return;\n    }\n    if (event.type === \"keydown\" && event.key === \" \") {\n      this.magnet.toggle();\n    }\n    if (event.type === \"keydown\") {\n      if (event.key === 'ArrowLeft') {\n        this.magnet.left();\n      } else if (event.key === 'ArrowRight') {\n        this.magnet.right();\n      }\n    } else if (event.type === \"keyup\") {\n      this.magnet.stop();\n    } else {\n      throw new Error(event);\n    }\n  }\n\n  _handleBeforeUpdate = (event: {timestamp: number}) => {\n    if (this.lastUpdateTimestamp === undefined) {\n      throw new Error(); // flow type refinement\n    }\n    if (!(this.lastUpdateTimestamp === null)) {\n      const dt: number = event.timestamp - this.lastUpdateTimestamp;\n      this.magnet.update(dt);\n    }\n    if (this._isEverythingSleeping()) {\n      if (this.remainingObjectIds.size === 0) {\n        this.levelComplete();\n      } else {\n        this.magnet.setEnabled(true);\n      }\n    }\n    this.lastUpdateTimestamp = event.timestamp;\n  }\n\n  _isEverythingSleeping() {\n    return _.every(this.engine.world.bodies, (body: Body) => {\n      return body.isSleeping;\n    });\n  }\n\n  _createWalls(): Body[] {\n    const wallOptions = {\n      isStatic: true,\n      render: {\n        fillStyle: 'LightGrey'\n      }\n    };\n    // matter.js does positioning using centre of mass...\n    const wallTop = Bodies.rectangle(this.boxWidth / 2, 0, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - T\" });\n    const wallBottom = Bodies.rectangle(this.boxWidth / 2, this.boxHeight, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - B\" });\n    const wallRight = Bodies.rectangle(this.boxWidth, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - R\" });\n    const wallLeft = Bodies.rectangle(0, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - L\" });\n    const walls = [wallTop, wallBottom, wallRight, wallLeft];\n    return walls;\n  }\n\n  // Initial x coordinate of magnet and ball.\n  _initialX(): number {\n    return 0.68 * (this.boxWidth - this.wallThickness / 2) + this.wallThickness / 2\n  }\n\n  _createMagnet(): Magnet {\n    const xLimit = this.wallThickness / 2 +\n      Math.max(this.magnetWidth / 2, this.ballWidth / 2) +\n      0.01 * this.boxWidth;\n    return new Magnet({\n      x: this._initialX(),\n      y: this.wallThickness / 2 + 0.01 * this.boxHeight + this.magnetHeight / 2,\n      minX: xLimit,\n      maxX: this.boxWidth - xLimit,\n      width: this.magnetWidth,\n      height: this.magnetHeight,\n      world: this.engine.world});\n  }\n\n  _createBall(magnet: Magnet): Body {\n    const x = magnet.attachmentPosition().x;\n    const y = magnet.attachmentPosition().y + this.ballRadius;\n    const ball = Bodies.circle(x, y, this.ballRadius, {\n      label: \"ball\",\n      render: {\n        sprite: {\n          texture: 'ball.png'\n        }\n      },\n      restitution: 0.5,\n      // density: 1,\n      frictionAir: 0,\n      frictionStatic: 0,\n    });\n    return ball;\n  }\n\n  _createObjects(): Body[] {\n    const random = seedrandom(this.level + 484726723);\n    const objects = []\n    _.range(0, this.level).forEach((i: number) => {\n      const radius = 10 + random() * 15;\n      const border = this.wallThickness / 2 + radius;\n      const x = border + (random() * (this.boxWidth - 2 * border));\n      const y = border + this.magnetHeight + this.ballHeight + (random() * (this.boxHeight - 2 * border - this.magnetHeight - this.ballHeight));\n      const object = Bodies.circle(x, y, radius, {\n        label: `object ${i}`,\n        isStatic: false,\n        isSleeping: true\n      });\n      objects.push(object);\n    });\n    return objects;\n  }\n\n  setWireframe(enabled: boolean) {\n    this.wireframe = enabled;\n    this.renderer.options.wireframes = enabled;\n    this.renderer.options.showSleeping = enabled;\n    this.renderer.options.showAngleIndicator = enabled;\n  }\n\n  getBodyCount() {\n    return Composite.allBodies(this.engine.world).length;\n  }\n\n  getConstraintCount() {\n    return Composite.allConstraints(this.engine.world).length;\n  }\n\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { GameEngine } from '../engine/GameEngine';\nimport { levelComplete, scoreUpdate } from '../redux/actions';\nimport { type DebugState } from '../redux/reducers/debug'\nimport { type LevelState } from '../redux/reducers/level'\nimport { Util } from '../util/Util';\n\ntype Props = {\n  level: number,\n  wireframe: boolean,\n  levelComplete: () => void,\n  scoreUpdate: (points: number) => void\n}\n\ntype State = {\n}\n\nexport class Game extends Component<Props,State> {\n\n  static CONTAINER_ID = \"matter_js_container\";\n\n  static getContainer(): ?HTMLElement {\n    return document.getElementById(Game.CONTAINER_ID);\n  }\n\n  // Set keyboard focus on the Game component.\n  //\n  // TODO a more elegant way of setting keyboard focus.\n  // ...CONTAINER_ID should have different value for each Game instance.\n  static focus() {\n    const container = Game.getContainer();\n    if (container) {\n      container.focus();\n    }\n  }\n\n  gameEngine: ?GameEngine;\n\n  constructor(props: Props) {\n    super(props);\n    this.gameEngine = null;\n  }\n\n  render() {\n    if (this.gameEngine) {\n      this.gameEngine.setWireframe(this.props.wireframe);\n    }\n    return (\n      // Need tabIndex, otherwise can't get focus and capture key events.\n      <div\n        className=\"Game\"\n        id={Game.CONTAINER_ID}\n        tabIndex=\"0\" />\n    );\n  }\n\n  _startEngine() {\n    const container = Util.nonNull(Game.getContainer());\n    this.gameEngine = new GameEngine(\n      container,\n      this.props.level,\n      this.props.wireframe,\n      this.props.levelComplete,\n      this.props.scoreUpdate);\n    this.gameEngine.start();\n  }\n\n  _stopEngine() {\n    if (this.gameEngine) {\n      this.gameEngine.stop();\n      this.gameEngine = null;\n    }\n  }\n\n  // React lifecycle.\n  componentDidMount() {\n    this._startEngine();\n  }\n\n  // React lifecycle.\n  componentWillUnmount() {\n    this._stopEngine();\n  }\n\n  // React lifecycle.\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.props.level === prevProps.level) {\n      return;\n    }\n    this._stopEngine();\n    this._startEngine();\n  }\n\n}\n\n// TODO Should LevelState/DebugState etc. include key too?\nconst mapStateToProps = (state: {level: LevelState, debug: DebugState}) => {\n  const level = state.level.current;\n  const wireframe = state.debug.wireframe;\n  return { level, wireframe };\n};\nconst actionCreators = {\n  levelComplete,\n  scoreUpdate\n}\nexport default connect(mapStateToProps, actionCreators)(Game);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\n\nimport { levelChange } from '../redux/actions';\nimport type { LevelState } from '../redux/reducers/level';\n\ntype Props = {\n  level: number,\n  numberOfLevels: number,\n  levelChange: (number) => void\n}\n\nexport class Level extends Component<Props> {\n\n  render() {\n    return <select value={this.props.level} onChange={this.handleClick}> \n      {_.range(1, this.props.numberOfLevels + 1).map((i: number) =>\n        <option key={i} value={i}>{i}</option>\n      )}\n    </select>;\n  }\n\n  handleClick = (event: SyntheticEvent<HTMLSelectElement>) => {\n    const target: HTMLSelectElement = event.currentTarget;\n    if (target) {\n      const level: number = parseInt(target.value);\n      this.props.levelChange(level);\n    }\n  }\n\n}\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  const numberOfLevels = state.level.last\n  return { level, numberOfLevels };\n};\nconst actionCreators = {\n  levelChange\n};\nexport default connect(mapStateToProps, actionCreators)(Level);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport type { ScoreState } from '../redux/reducers/score';\n\ntype Props = {\n  score: number\n}\n\nexport const Score = (props: Props) => {\n  return (\n    <div className=\"Scores\">\n      <div>{props.score}</div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: {score: ScoreState}) => {\n  return { score: state.score.current };\n}\n\nexport default connect(mapStateToProps)(Score);","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport { setWireframeMode } from '../redux/actions';\nimport type { DebugState } from '../redux/reducers/debug';\nimport { Game } from './Game';\n\ntype Props = {\n  enabled: boolean,\n  setWireframeMode: (boolean) => void\n}\n\nexport class WireframeCheckbox extends Component<Props> {\n\n  render() {\n    return (\n      <div>\n        <span>          \n          <input type=\"checkbox\" checked={this.props.enabled} onChange={this.handleClick}/>\n          debug\n        </span>\n      </div>\n    );\n  }\n\n  handleClick = (event: SyntheticEvent<HTMLInputElement>) => {\n    Game.focus();\n    const target: HTMLInputElement = event.currentTarget;\n    this.props.setWireframeMode(target.checked);\n  }\n\n}\n\nconst mapStateToProps = (state: {debug: DebugState}) => {\n  const enabled = state.debug.wireframe;\n  return { enabled };\n};\nconst actionCreators = {\n  setWireframeMode\n};\nexport default connect(mapStateToProps, actionCreators)(WireframeCheckbox);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport type { LevelState } from '../redux/reducers/level';\n\ntype Props = {\n  level: number\n};\n\nexport const StartLevelScreen = (props: Props) => {\n  return (\n    <div>Level {props.level}</div>\n  );\n};\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  return { level };\n};\nconst actionCreators = {};\n\nexport default connect(mapStateToProps, actionCreators)(StartLevelScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport { startGame } from '../redux/actions';\n\ntype Props = {\n  startGame: () => void\n};\n\nexport class StartScreen extends Component<Props> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  ref: { current: any } = React.createRef();\n\n  render() {\n    return (\n      <div\n        ref={this.ref}\n        tabIndex=\"0\"\n        onClick={this.props.startGame}\n        onKeyPress={this.props.startGame}\n        className=\"StartScreen\">\n        <p>Press any key to start game.</p>\n        <p>Use left and right arrow keys or the mouse to position the magnet.</p>\n        <p>Press space to turn the magnet on or off.</p>\n        <p>You move to the next level when all objects have been dislodged.</p>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.ref.current.focus();\n  }\n\n}\n\nconst mapStateToProps = null;\nconst actionCreators = { startGame };\n\nexport default connect(mapStateToProps, actionCreators)(StartScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport type { ScreenState } from '../redux/reducers/screen';\nimport GameScreen from './GameScreen';\nimport GameCompleteScreen from './GameCompleteScreen';\nimport StartLevelScreen from './StartLevelScreen';\nimport StartScreen from './StartScreen';\n\nconst screens = {\n  \"game\": GameScreen,\n  \"gameComplete\": GameCompleteScreen,\n  \"startLevel\": StartLevelScreen,\n  \"start\": StartScreen\n}\n\nexport type ScreenType = $Keys<typeof screens>;\n\ntype Props = {\n  +screen: ScreenType\n}\n\nconst Screen = (props: Props) => {\n  const component = screens[props.screen];\n  return React.createElement(component, {}, null);\n}\n\nexport const mapStateToProps = (state: {screen: ScreenState}) => {\n  const screen = state.screen.current;\n  return { screen };\n};\nconst actionCreators = {};\nexport default connect(mapStateToProps, actionCreators)(Screen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\nimport Game from '../components/Game';\nimport Level from '../components/Level';\nimport Score from '../components/Score';\nimport WireframeCheckbox from '../components/WireframeCheckbox';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div>\n      <Score />\n      <Game />\n      <Level />\n      <WireframeCheckbox />\n    </div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div>Game Complete</div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\n\nimport { storeFactory } from '../redux/store';\nimport './App.css';\nimport Screen from '../screen';\n\ntype Props = {\n};\n\ntype State = {\n};\n\nclass App extends Component<Props,State> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  store: Object;\n\n  constructor(props: Props) {\n    super(props);\n    this.store = storeFactory();\n  }\n\n  render() {\n    return (\n      <Provider store={this.store}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Screen/>\n          </header>\n        </div>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","// @flow\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Util } from './util/Util'\n\n// https://www.w3.org/TR/pointerevents/ polyfill.\nimport 'pepjs';\n\n// https://github.com/liabru/matter-js/issues/559\nwindow.decomp = require('poly-decomp');\n\nconst rootElement = Util.nonNull(document.getElementById('root'));\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}