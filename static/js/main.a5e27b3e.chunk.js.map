{"version":3,"sources":["redux/actions.js","redux/actionTypes.js","redux/reducers/debug.js","redux/reducers/level.js","redux/reducers/score.js","redux/reducers/screen.js","redux/reducers/index.js","util/Log.js","redux/sagas/actionLogger.js","redux/sagas/gameComplete.js","redux/selectors/index.js","redux/sagas/levelComplete.js","redux/sagas/start.js","redux/sagas/startLevel.js","redux/sagas/startGame.js","redux/sagas/index.js","util/Util.js","engine/Magnet.js","engine/GameEngine.js","components/Game.js","components/Score.js","screen/StartLevelScreen.js","components/Level.js","util/cookies.js","util/google_analytics.js","screen/StartScreen.js","screen/index.js","screen/GameScreen.js","screen/GameCompleteScreen.js","components/App.js","redux/store.js","index.js"],"names":["levelChange","level","type","payload","scoreUpdate","points","screenChange","screen","initialState","wireframe","current","last","combineReducers","debug","state","action","Error","score","levelStringLengths","map","length","widestLevel","_","max","Log","message","this","log","now","Date","messageString","console","toISOString","padStart","actionLogger","actionLoggerListener","info","takeEvery","gameComplete","gameCompleteListener","put","isLastLevel","createSelector","lastLevel","levelComplete","levelCompleteListener","select","start","startListener","startLevel","startLevelListener","race","sleep","delay","dismissal","take","cancel","startGame","startGameListener","Util","value","min","undefined","Magnet","args","constraints","objects","acceleration","enabled","speed","dragging","x","y","minX","maxX","width","height","world","maxAcceleration","maxSpeed","onRelease","peakHeight","vertices","body","Bodies","fromVertices","label","isStatic","render","fillStyle","position","World","add","other","constraint","Constraint","create","bodyA","bodyB","visible","push","reposition","event","buttons","rect","clientX","clientY","left","right","top","bottom","canvasRect","isPrimary","button","insideRect","setEnabled","leftButtonPressed","Bounds","contains","bounds","stop","Body","setPosition","dt","clamp","dx","setVelocity","forEach","remove","attachmentPosition","id","JSON","stringify","GameEngine","container","ballImageSize","magnetHeight","magnetWidth","maxSpeedSquared","Math","pow","maxAngularVelocity","wallThickness","lastUpdateTimestamp","started","stopped","_handleCollision","that","pairs","pair","Sleeping","set","_dislodgeCheck","_handlePointerEvent","renderer","canvas","getBoundingClientRect","magnet","handlePointerEvent","_handleKeyPress","repeat","key","toggle","_handleBeforeUpdate","timestamp","update","Composite","allBodies","engine","angularVelocity","setAngularVelocity","velocity","speedSquared","ratio","sqrt","_insideBox","objectIds","has","_isEverythingSleepingOrEscaped","objectIdsRemaining","size","bind","boxHeight","clientHeight","boxWidth","clientWidth","Engine","gravity","enableSleeping","ballRadius","ballHeight","ballWidth","_createMagnet","ball","_createBall","walls","_createWalls","_createObjects","object","Set","attachToMagnet","addToWorld","Render","element","options","background","setWireframe","Events","on","run","document","addEventListener","focus","removeEventListener","off","delete","every","bodies","isSleeping","wallOptions","rectangle","xLimit","_initialX","circle","sprite","texture","process","restitution","frictionAir","frictionStatic","random","seedrandom","range","i","radius","border","wireframes","showSleeping","showAngleIndicator","allConstraints","Game","props","gameEngine","getElementById","CONTAINER_ID","getContainer","className","tabIndex","nonNull","_startEngine","_stopEngine","prevProps","prevState","Component","actionCreators","connect","toggleWireframeMode","onDoubleClick","dismissStartLevelScreen","onClick","Level","handleClick","target","currentTarget","parseInt","onChange","numberOfLevels","cookieConsentGiven","Cookies","get","initializeReactGoogleAnalytics","initialScreen","ReactGA","initialize","pageview","consentGiven","page","window","location","pathname","StartScreen","ref","React","createRef","handleCrashClick","e","stopPropagation","onKeyPress","href","hidden","alt","src","buttonText","cookieName","onAccept","toggleFullscreen","orientation","lock","screens","StartLevelScreen","Screen","component","createElement","App","reactGAInitialized","store","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","sagas","saga","storeFactory","isFullscreen","dispatch","Fullscreenable","SENTRY_DSN","Sentry","dsn","release","environment","decomp","require","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.a5e27b3e.chunk.js","sourcesContent":["// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  DISMISS_START_LEVEL_SCREEN,\n  GAME_COMPLETE,\n  LEVEL_COMPLETE,\n  LEVEL_CHANGE,\n  RESET_SCORE,\n  START,\n  START_GAME,\n  START_LEVEL,\n  SCORE_UPDATE,\n  SCREEN_CHANGE,\n  TOGGLE_WIREFRAME_MODE\n} from './actionTypes'\nimport type { ScreenType } from '../screen';\n\nexport const start = () => ({\n  type: START\n});\n\nexport const resetScore = () => ({\n  type: RESET_SCORE\n});\n\nexport const startGame = () => ({\n  type: START_GAME\n});\n\nexport const gameComplete = () => ({\n  type: GAME_COMPLETE\n});\n\nexport const levelComplete = () => ({\n  type: LEVEL_COMPLETE\n});\n\nexport const levelChange = (level: ?number = null) => ({\n  type: LEVEL_CHANGE,\n  payload: {\n    level: level\n  }\n});\n\nexport const startLevel = () => ({\n  type: START_LEVEL\n});\n\n// Sent if user clicks on start level screen, dismissing\n// the screen immediately, not after the usual delay.\nexport const dismissStartLevelScreen = () => ({\n  type: DISMISS_START_LEVEL_SCREEN\n});\n\nexport const scoreUpdate = (points: number) => ({\n  type: SCORE_UPDATE,\n  payload: {\n    points: points\n  }\n});\n\nexport const toggleWireframeMode = () => ({\n  type: TOGGLE_WIREFRAME_MODE,\n});\n\nexport const screenChange = (screen: ScreenType) => ({\n  type: SCREEN_CHANGE,\n  payload: {\n    screen: screen\n  }\n});\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport type { ScreenType } from '../screen';\n\nexport const START = 'START';\nexport type StartAction = {\n  type: typeof(START)\n};\n\nexport const START_GAME = 'START_GAME';\nexport type StartGameAction = {\n  type: typeof(START_GAME)\n};\n\nexport const RESET_SCORE = 'RESET_SCORE';\nexport type ResetScoreAction = {\n  type: typeof(RESET_SCORE)\n};\n\nexport const LEVEL_COMPLETE = 'LEVEL_COMPLETE';\nexport type LevelCompleteAction = {\n  type: typeof(LEVEL_COMPLETE)\n};\n\nexport const GAME_COMPLETE = 'GAME_COMPLETE';\nexport type GameCompleteAction = {\n  type: typeof(GAME_COMPLETE)\n};\n\nexport const LEVEL_CHANGE = 'LEVEL_CHANGE';\nexport type LevelChangeAction = {\n  type: typeof(LEVEL_CHANGE),\n  payload: { level: number }\n};\n\nexport const START_LEVEL = 'START_LEVEL';\nexport type StartLevelAction = {\n  type: typeof(START_LEVEL)\n};\n\nexport const DISMISS_START_LEVEL_SCREEN = 'DISMISS_START_LEVEL_SCREEN';\nexport type DismissStartLevelScreen = {\n  type: typeof(DISMISS_START_LEVEL_SCREEN)\n};\n\nexport const SCORE_UPDATE = 'SCORE_UPDATE';\nexport type ScoreUpdateAction = {\n  type: typeof(SCORE_UPDATE),\n  payload: { points: number }\n};\n\nexport const SCREEN_CHANGE = 'SCREEN_CHANGE';\nexport type ScreenChangeAction = {\n  type: typeof(SCREEN_CHANGE),\n  payload: { screen: ScreenType }\n};\n\nexport const TOGGLE_WIREFRAME_MODE = 'TOGGLE_WIREFRAME_MODE';\nexport type ToggleWireframeModeAction = {\n  type: typeof(TOGGLE_WIREFRAME_MODE)\n};\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\n\nimport { Action } from 'redux';\nimport { TOGGLE_WIREFRAME_MODE } from '../actionTypes';\n\nexport type DebugState = {\n  +wireframe: boolean\n}\n\nconst initialState: DebugState = {\n  wireframe: false\n}\n\nexport const debug = (state: DebugState = initialState, action: Action): DebugState => {\n  switch (action.type) {\n    case TOGGLE_WIREFRAME_MODE: {\n      return {...state, wireframe: !state.wireframe};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { LEVEL_CHANGE } from '../actionTypes';\n\nexport type LevelState = {\n  +current: number,\n  +last: number\n}\n\nconst initialState: LevelState = {\n  current: 1,\n  last: 5\n}\n\nexport const level = (state: LevelState = initialState, action: Action): LevelState => {\n  switch (action.type) {\n    case LEVEL_CHANGE: {\n      let level: number = action.payload.level;\n      if (level === null) {\n        level = state.current + 1;\n      }\n      if (level < 1 || level > state.last) {\n        throw new Error(`level out of range: ${level}`);\n      }\n      return {...state, current: level};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { RESET_SCORE, SCORE_UPDATE } from '../actionTypes';\n\nexport type ScoreState = {\n  +current: number\n}\n\nconst initialState: ScoreState = {\n  current: 0\n}\n\nexport const score = (state: ScoreState = initialState, action: Action): ScoreState => {\n  let { current } = state;\n  switch (action.type) {\n    case RESET_SCORE: {\n      return {...state, current: 0};\n    }\n    case SCORE_UPDATE: {\n      const points: number = action.payload.points;\n      current += points;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { SCREEN_CHANGE } from '../actionTypes';\nimport type { ScreenType } from '../../screen';\n\nexport type ScreenState = {\n  +current: ScreenType\n}\n\nconst initialState: ScreenState = {\n  current: \"start\",\n}\n\nexport const screen = (state: ScreenState = initialState, action: Action): ScreenState => {\n  switch (action.type) {\n    case SCREEN_CHANGE: {\n      const current: ScreenType = action.payload.screen;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { combineReducers } from \"redux\";\n\nimport { debug, type DebugState } from \"./debug\";\nimport { level, type LevelState } from \"./level\";\nimport { score, type ScoreState } from \"./score\";\nimport { screen, type ScreenState } from \"./screen\";\n\n// The whole store's state.\nexport type StoreState = {\n  debug: DebugState,\n  level: LevelState,\n  score: ScoreState,\n  screen: ScreenState\n}\n\nexport default combineReducers({\n  debug,\n  level,\n  score,\n  screen\n});","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport _ from 'lodash';\n\ntype Message = string | () => string;\n\ntype Level = 'INFO' | 'DEBUG';\n\nconst levels: Level[] = ['INFO', 'DEBUG'];\n\nconst levelStringLengths: number[] = levels.map(\n  (level: Level) => level.length\n);\n\nconst widestLevel: number = _.max(levelStringLengths);\n\nexport class Log {\n\n  static info(message: Message) {\n    this.log('INFO', message);\n  }\n\n  static debug(message: Message) {\n    this.log('DEBUG', message);\n  }\n\n  static log(level: Level, message: Message) {\n    // If implement log-level setting, only evaluate function and timestamp if need to.\n    const now = new Date();\n    const messageString: string = (typeof message === 'function') ? message() : message;\n    console.log(`${now.toISOString()} ${level.padStart(widestLevel)} ${messageString}`)\n  }\n\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { takeEvery } from 'redux-saga/effects';\n\nimport type { Action } from 'redux';\n\nimport { Log } from '../../util/Log';\n\n// eslint-disable-next-line require-yield\nexport function* actionLogger(action: Action): Generator<*,*,*> {\n  Log.info(`Action: ${action.type}`);\n}\n\nexport function* actionLoggerListener(): Generator<*,*,*> {\n  yield takeEvery(\"*\", actionLogger);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { GAME_COMPLETE } from '../actionTypes';\nimport { screenChange } from '../actions';\n\nexport function* gameComplete(): Generator<*,*,*> {\n  yield put(screenChange(\"gameComplete\"));\n}\n\nexport function* gameCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(GAME_COMPLETE, gameComplete);\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createSelector } from 'reselect'\nimport { type StoreState } from '../reducers';\n\nconst getLevel = (state: StoreState) => state.level.current;\nconst getLastLevel = (state: StoreState) => state.level.last;\n\nexport const isLastLevel: ( StoreState => boolean) = createSelector(\n  [getLevel, getLastLevel],\n  (level: number, lastLevel: number) => {\n    return level === lastLevel;\n  }\n)","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, select, takeEvery } from 'redux-saga/effects';\n\nimport { LEVEL_COMPLETE } from '../actionTypes';\nimport { levelChange, startLevel, gameComplete } from '../actions';\nimport { isLastLevel } from '../selectors';\n\nexport function* levelComplete(): Generator<*,*,*> {\n  if (yield select(isLastLevel)) {\n    yield put(gameComplete());\n  } else {\n    yield put(levelChange());\n    yield put(startLevel());\n  }\n}\n\nexport function* levelCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(LEVEL_COMPLETE, levelComplete);\n}\n\n","// @flow\n//\n// (c) 2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { START } from '../actionTypes';\nimport { levelChange, resetScore, screenChange } from '../actions';\n\nexport function* start(): Generator<*,*,*> {\n  yield put(resetScore());\n  yield put(levelChange(1));\n  yield put(screenChange(\"start\"));\n}\n\nexport function* startListener(): Generator<*,*,*> {\n  yield takeEvery(START, start);\n}\n\n\n","// @flow\n//\n// (c) 2018-2020 Jeremy Green\n\nimport { delay, put, race, take, takeEvery } from 'redux-saga/effects';\n\nimport { START_LEVEL, DISMISS_START_LEVEL_SCREEN, START } from '../actionTypes';\nimport { scoreUpdate, screenChange } from '../actions';\n\nexport function* startLevel(): Generator<*,*,*> {\n  yield put(screenChange(\"startLevel\"));\n  const { cancel } = yield race({\n    // With no user interaction, show the startLevel screen for 2.5s.\n    sleep: delay(2500),\n    // Clicking on the startLevel screen starts the level immediately.\n    dismissal: take(DISMISS_START_LEVEL_SCREEN),\n    // It's also possible to restart the game by exiting full screen mode.\n    cancel: take(START)});\n  if (!cancel) {\n    yield put(scoreUpdate(1));\n    yield put(screenChange(\"game\"));\n  }\n}\n\nexport function* startLevelListener(): Generator<*,*,*> {\n  yield takeEvery(START_LEVEL, startLevel);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { START_GAME } from '../actionTypes';\nimport { startLevel } from '../actions';\n\nexport function* startGame(): Generator<*,*,*> {\n  yield put(startLevel());\n}\n\nexport function* startGameListener(): Generator<*,*,*> {\n  yield takeEvery(START_GAME, startGame);\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { actionLoggerListener } from './actionLogger';\nimport { gameCompleteListener } from './gameComplete';\nimport { levelCompleteListener } from './levelComplete';\nimport { startListener } from './start';\nimport { startLevelListener } from './startLevel';\nimport { startGameListener } from './startGame';\n\nexport default [\n  actionLoggerListener,\n  gameCompleteListener,\n  levelCompleteListener,\n  startListener,\n  startLevelListener,\n  startGameListener\n];","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nexport class Util {\n\n  // Clamp value to be within the range [min, max].\n  static clamp(value: number, min: number, max: number): number {\n    if (max < min) {\n      throw new Error(`max of ${max} is less than min ${min} (with value of ${value})`);\n    }\n    if (value < min) {\n      value = min;\n    }\n    if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n\n  // Asserts that a maybe-typed value is not null or undefined.\n  static nonNull<T>(value: ?T): T {\n    if (value === null) {\n      throw new Error(\"null value.\");\n    }\n    if (value === undefined) {\n      throw new Error(\"undefined value.\");\n    }\n    return value;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Body,\n  Bodies,\n  Bounds,\n  Constraint,\n  World\n} from 'matter-js'\n\nimport { Log } from '../util/Log';\nimport { Util } from '../util/Util';\n\ntype Args = {\n  +x: number,\n  +y: number,\n  +minX: number,\n  +maxX: number,\n  +width: number,\n  +height: number,\n  +world: World,\n  +maxAcceleration?: number,\n  +maxSpeed?: number,\n  +onRelease: () => void\n}\n\ntype Rect = {\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n};\n\nexport class Magnet {\n\n  +body: Body;\n  +constraints: Constraint[] = [];\n  +height: number;\n  +width: number;\n  +maxAcceleration: number;\n  +maxSpeed: number;\n  +minX: number;\n  +maxX: number;\n  +objects: Body[] = [];\n  +world: World;\n  +onRelease: () => void;\n\n  acceleration: number = 0;\n  enabled: boolean = true;\n  speed: number = 0;\n  dragging: boolean = false;\n\n  constructor(args: Args) {\n    const x = args.x;\n    const y = args.y;\n    this.minX = args.minX;\n    this.maxX = args.maxX;\n    this.width = args.width;\n    this.height = args.height;\n    this.world = args.world;\n    this.maxAcceleration = (args.maxAcceleration === undefined) ? 0.005 : args.maxAcceleration;\n    this.maxSpeed = (args.maxSpeed === undefined) ? 1.3 : args.maxSpeed;\n    this.onRelease = args.onRelease;\n    const peakHeight = this.height * 0.2;\n    const vertices = [\n      { x: -this.width / 2, y: - this.height / 2 },\n      { x:               0, y: - this.height / 2 - peakHeight },\n      { x:  this.width / 2, y: - this.height / 2 },\n      { x:  this.width / 2, y:   this.height / 2},\n      { x: -this.width / 2, y:   this.height / 2}\n    ];\n    this.body = Bodies.fromVertices(x, y, vertices, {\n      label: \"magnet\",\n      isStatic: true,\n      render: {\n        fillStyle: 'Grey'\n      }\n    });\n  }\n\n  // Bottom centre coordinates of magnet.\n  attachmentPosition(): {x: number, y: number} {\n    return { x: this.body.position.x, y: this.body.position.y + this.height / 2 };\n  }\n\n  // Register the Magnet's matter.js Body with the matter.js World.\n  addToWorld() {\n    World.add(this.world, this.body);\n  }\n\n  // Connect another Body to the Magnet.\n  attachToMagnet(other: Body) {\n    const constraint: Constraint = Constraint.create({\n      bodyA: this.body,\n      bodyB: other,\n      render: {\n        visible: false\n      }\n    })\n    this.constraints.push(constraint);\n    this.objects.push(other);\n    if (this.enabled) {\n      World.add(this.world, constraint);\n      this.reposition(other);\n    }\n  }\n\n  leftButtonPressed(event: PointerEvent) {\n    return event.buttons & 1;\n  }\n\n  insideRect(event: PointerEvent, rect: Rect) {\n    const x = event.clientX;\n    const y = event.clientY;\n    return !(x < rect.left || x > rect.right || y < rect.top || y > rect.bottom);\n  }\n\n  handlePointerEvent(\n    canvasRect: Rect,\n    event: PointerEvent) {\n    if (!event.isPrimary) {\n      // If multiple contact points are possible, ignore all but the primary\n      // (the first one for touch screens). Otherwise, magnet jumps between\n      // each contact point as events are received.\n      return;\n    }\n    if (this.dragging && event.button === 0 && event.type === 'pointerup' && this.insideRect(event, canvasRect)) {\n      // Ignoring pointerup event if it's outside the box means there's a way to\n      // change your mind about releasing the ball after start moving it.\n      this.setEnabled(false);\n    }\n    if (!this.leftButtonPressed(event)) {\n      this.dragging = false;\n      return;\n    }\n    const position = {\n      x: event.clientX - canvasRect.left,\n      y: event.clientY - canvasRect.top\n    };\n    const onMagnet = Bounds.contains(this.body.bounds, position);\n    if (onMagnet) {\n      this.dragging = true;\n      if (event.button === 0 && event.type === 'pointerdown') {\n        this.setEnabled(true);\n      }\n    }\n    if (this.dragging) {\n      this.stop();\n      Body.setPosition(this.body, { x: position.x, y: this.body.position.y});\n    }\n  }\n\n  // Start movement to left.\n  left() {\n    if (this.speed > 0) {\n      this.speed = 0;\n    }\n    this.acceleration = -this.maxAcceleration;\n  }\n\n  // Start movement to right.\n  right() {\n    if (this.speed < 0) {\n      this.speed = 0;\n    }\n    this.acceleration = this.maxAcceleration;\n  }\n\n  // Stop movement.\n  stop() {\n    this.acceleration = 0;\n    this.speed = 0;\n  }\n\n  // Handle matter.js update callback.\n  //\n  // dt - time since last update\n  update(dt: number) {\n    this.speed = Util.clamp(\n      this.speed + this.acceleration * dt,\n      -this.maxSpeed, this.maxSpeed);\n    const dx = this.speed * dt;\n    const x = Util.clamp(\n      this.body.position.x + dx,\n      this.minX, this.maxX);\n    const y = this.body.position.y;\n    Body.setPosition(this.body, { x, y });\n    Body.setVelocity(this.body, { x: this.speed, y: 0 });\n  }\n\n  // Turn the magnet on or off.\n  toggle() {\n    this.setEnabled(!this.enabled);\n  }\n\n  // Turn the magnet on or off.\n  setEnabled(enabled: boolean) {\n    if (enabled) {\n      if (!this.enabled) {\n        World.add(this.world, this.constraints);\n        this.objects.forEach((body: Body) => {\n          this.reposition(body);\n        });\n      }\n    } else {\n      if (this.enabled) {\n        World.remove(this.world, this.constraints);\n        this.onRelease();\n      }\n    }\n    this.enabled = enabled;\n  }\n\n  // If add Constraint back to World and object is far\n  // away from Magnet, it will generally accelerate\n  // through and past the Magnet. Instead, place it close\n  // where it should be in equilibrium (if it's a\n  // circle/square at least).\n  reposition(body: Body) {\n    const position = this.attachmentPosition();\n    const height: number = body.bounds.max.y - body.bounds.min.y;\n    position.y = position.y + height / 2;\n    Log.debug(`repositioning body with id: ${body.id} to: ${JSON.stringify(position)}`);\n    Body.setPosition(body, position);\n  }\n\n  // For testing.\n  getSpeed(): number {\n    return this.speed;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Bodies,\n  Body,\n  Composite,\n  Engine,\n  Events,\n  Pair,\n  Render,\n  Sleeping,\n  World\n} from 'matter-js'\nimport _ from 'lodash';\nimport seedrandom from 'seedrandom';\n\nimport { Log } from '../util/Log';\nimport { Magnet } from './Magnet';\nimport { Util } from '../util/Util';\n\nexport class GameEngine {\n\n  +ball: Body;\n  +ballImageSize: number = 64; // pixels\n  +ballRadius: number;\n  +ballHeight: number;\n  +ballWidth: number;\n  +boxHeight: number;\n  +boxWidth: number;\n  +container: HTMLElement;\n  +engine: Engine;\n  +level: number;\n  +magnet: Magnet;\n  +magnetHeight: number = 15;\n  +magnetWidth: number = 50;\n  +maxSpeedSquared: number = Math.pow(7, 2);\n  +maxAngularVelocity: number = 0.5;\n  +levelComplete: () => void;\n  // The ids of all the \"objects\".\n  +objectIds: Set<number>;\n  // The ids of the \"objects\" that have not yet been dislodged.\n  +objectIdsRemaining: Set<number>;\n  +renderer: Render;\n  +scoreUpdate: (points: number) => void;\n  +walls: Body[];\n  +wallThickness: number = 50;\n\n  lastUpdateTimestamp: ?number = null;\n  started: boolean = false;\n  stopped: boolean = false;\n  wireframe: boolean;\n\n  constructor(\n    container: HTMLElement,\n    level: number,\n    wireframe: boolean,\n    levelComplete: () => void,\n    scoreUpdate: (points: number) => void) {\n    \n    this._dislodgeCheck = this._dislodgeCheck.bind(this);\n\n    this.levelComplete = levelComplete;\n    this.scoreUpdate = scoreUpdate;\n    this.level = level;\n    this.wireframe = wireframe;\n    this.container = container;\n    this.boxHeight = container.clientHeight;\n    this.boxWidth = container.clientWidth;\n    this.engine = Engine.create();\n    this.engine.world.gravity.y = 0.2;\n    this.engine.enableSleeping = true;\n    this.ballRadius = 1.025 * this.ballImageSize / 2.0\n    this.ballHeight = this.ballRadius;\n    this.ballWidth = this.ballRadius;\n    this.magnet = this._createMagnet();\n    this.ball = this._createBall(this.magnet);\n    const walls = this._createWalls();\n    const objects = this._createObjects();\n    const objectIds = _.map(objects, (object: Body) => {\n      return object.id;\n    });\n    this.objectIds = new Set(objectIds);\n    this.objectIdsRemaining = new Set(objectIds);\n    this.magnet.attachToMagnet(this.ball);\n    World.add(this.engine.world, [\n      ...walls,\n      this.ball,\n      ...objects\n    ]);\n    this.magnet.addToWorld();\n    Log.info('Body ids:');\n    Composite.allBodies(this.engine.world).forEach((body: Body) => {\n      Log.info(`${body.id} - ${body.label}`);\n    });\n    this.renderer = Render.create({\n      element: this.container,\n      engine: this.engine,\n      options: {\n        background: \"#fafafa\",\n        width: this.boxWidth,\n        height: this.boxHeight\n      }\n    });\n    this.setWireframe(this.wireframe);\n  }\n\n  start() {\n    if (this.started) {\n      throw new Error(\"already started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"cannot restart.\");\n    }\n    Events.on(this.engine, 'collisionStart', this._handleCollision);\n    Events.on(this.engine, 'beforeUpdate', this._handleBeforeUpdate);\n    Engine.run(this.engine);\n    Render.run(this.renderer);\n    document.addEventListener('keydown', this._handleKeyPress);\n    document.addEventListener('keyup', this._handleKeyPress);\n    this.renderer.canvas.addEventListener('pointerdown', this._handlePointerEvent);\n    this.renderer.canvas.addEventListener('pointermove', this._handlePointerEvent);\n    this.renderer.canvas.addEventListener('pointerup', this._handlePointerEvent);\n    // The canvas has the touch-action CSS attribute set, but the pepjs polyfill\n    // needs a DOM attribute instead: https://github.com/jquery/PEP#touch-action\n    this.renderer.canvas[\"touch-action\"] = \"none\";\n    this.container.focus();\n    this.started = true;\n  }\n\n  stop() {\n    if (!this.started) {\n      throw new Error(\"not started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"already stopped\");\n    }\n    this.renderer.canvas.removeEventListener('pointerup', this._handlePointerEvent);\n    this.renderer.canvas.removeEventListener('pointerdown', this._handlePointerEvent);\n    this.renderer.canvas.removeEventListener('pointermove', this._handlePointerEvent);\n    document.removeEventListener('keydown', this._handleKeyPress);\n    document.removeEventListener('keyup', this._handleKeyPress);\n    Render.stop(this.renderer);\n    Events.off(this.engine, 'collisionStart');\n    Events.off(this.engine, 'beforeUpdate');\n    this.renderer.canvas.remove();\n    this.started = false;\n    this.stopped = true;\n  }\n\n  _handleCollision = (event: {pairs: Pair[]}) => {\n    const that = this;\n    const { pairs } = event;\n    pairs.forEach((pair: Pair) => {\n      [pair.bodyA, pair.bodyB].forEach((body: Body) => {\n        Sleeping.set(body, false);\n        that._dislodgeCheck(body);\n      });\n    });\n  }\n\n  _dislodgeCheck: (Body => void);\n  _dislodgeCheck(body: Body) {\n    const dislodged = this.objectIdsRemaining.delete(body.id);\n    if (dislodged) {\n      Log.debug(`dislodged: ${body.id}`);\n      const points = 1;\n      this.scoreUpdate(points);\n    }\n  }\n\n  _handlePointerEvent = (event: PointerEvent) => {\n    const rect = this.renderer.canvas.getBoundingClientRect();\n    this.magnet.handlePointerEvent(rect, event);\n  }\n\n  _handleKeyPress = (event: KeyboardEvent) => {\n    if (event.repeat) {\n      return;\n    }\n    if (event.type === \"keydown\" && event.key === \" \") {\n      this.magnet.toggle();\n    }\n    if (event.type === \"keydown\") {\n      if (event.key === 'ArrowLeft') {\n        this.magnet.left();\n      } else if (event.key === 'ArrowRight') {\n        this.magnet.right();\n      }\n    } else if (event.type === \"keyup\") {\n      this.magnet.stop();\n    } else {\n      throw new Error(event);\n    }\n  }\n\n  _handleBeforeUpdate = (event: {timestamp: number}) => {\n    const that = this;\n    if (this.lastUpdateTimestamp === undefined) {\n      throw new Error(); // flow type refinement\n    }\n    if (!(this.lastUpdateTimestamp === null)) {\n      const dt: number = event.timestamp - this.lastUpdateTimestamp;\n      this.magnet.update(dt);\n    }\n    Composite.allBodies(this.engine.world).forEach((body: Body) => {\n      // Speed and angular velocity are clamped to reduce chance\n      // that ball or object can pass through walls.\n      const angularVelocity: number = Util.clamp(body.angularVelocity,\n        -this.maxAngularVelocity, this.maxAngularVelocity);\n      Body.setAngularVelocity(body, angularVelocity);\n      const velocity = body.velocity;\n      const speedSquared = velocity.x * velocity.x + velocity.y * velocity.y;\n      if (speedSquared > this.maxSpeedSquared) {\n        const ratio = Math.sqrt(this.maxSpeedSquared / speedSquared);\n        Body.setVelocity(body, {\n          x: velocity.x * ratio,\n          y: velocity.y * ratio\n        });\n      }\n      // In case an object is fast enough to pass through wall, remove\n      // it. Otherwise, it likely falls forever and the level never completes.\n      if (!that._insideBox(body) && that.objectIds.has(body.id)) {\n        Log.debug(`escaped: ${body.id}`);\n        World.remove(that.engine.world, body);\n        that._dislodgeCheck(body); // Hopefully never required.\n      }\n    });\n    if (this._isEverythingSleepingOrEscaped()) {\n      if (this.objectIdsRemaining.size === 0) {\n        this.levelComplete();\n      } else {\n        this.magnet.setEnabled(true);\n      }\n    }\n    this.lastUpdateTimestamp = event.timestamp;\n  }\n\n  _insideBox(body: Body): boolean {\n    const x: number = body.position.x;\n    const y: number = body.position.y;\n    return !(x < 0 || x > this.boxWidth || y < 0 || y > this.boxHeight);\n  }\n\n  _isEverythingSleepingOrEscaped() {\n    return _.every(this.engine.world.bodies, (body: Body) => {\n      return body.isSleeping || !this._insideBox(body);\n    });\n  }\n\n  _createWalls(): Body[] {\n    const wallOptions = {\n      isStatic: true,\n      render: {\n        fillStyle: 'LightGrey'\n      }\n    };\n    // matter.js does positioning using centre of mass...\n    const wallTop = Bodies.rectangle(this.boxWidth / 2, 0, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - T\" });\n    const wallBottom = Bodies.rectangle(this.boxWidth / 2, this.boxHeight, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - B\" });\n    const wallRight = Bodies.rectangle(this.boxWidth, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - R\" });\n    const wallLeft = Bodies.rectangle(0, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - L\" });\n    const walls = [wallTop, wallBottom,  wallRight, wallLeft];\n    return walls;\n  }\n\n  // Initial x coordinate of magnet and ball.\n  _initialX(): number {\n    return 0.68 * (this.boxWidth - this.wallThickness / 2) + this.wallThickness / 2\n  }\n\n  _createMagnet(): Magnet {\n    const xLimit = this.wallThickness / 2 +\n      Math.max(this.magnetWidth / 2, this.ballWidth / 2) +\n      0.01 * this.boxWidth;\n    return new Magnet({\n      x: this._initialX(),\n      y: this.wallThickness / 2 + 0.01 * this.boxHeight + this.magnetHeight / 2,\n      minX: xLimit,\n      maxX: this.boxWidth - xLimit,\n      width: this.magnetWidth,\n      height: this.magnetHeight,\n      world: this.engine.world,\n      onRelease: () => this.scoreUpdate(-1)});\n  }\n\n  _createBall(magnet: Magnet): Body {\n    const x = magnet.attachmentPosition().x;\n    const y = magnet.attachmentPosition().y + this.ballRadius;\n    const ball = Bodies.circle(x, y, this.ballRadius, {\n      label: \"ball\",\n      render: {\n        sprite: {\n          texture: `${process.env.PUBLIC_URL || '/public'}/ball.png`\n        }\n      },\n      restitution: 0.5,\n      // density: 1,\n      frictionAir: 0,\n      frictionStatic: 0,\n    });\n    return ball;\n  }\n\n  _createObjects(): Body[] {\n    const random = seedrandom(this.level + 484726723);\n    const objects = []\n    _.range(0, this.level).forEach((i: number) => {\n      const radius = 10 + random() * 15;\n      const border = this.wallThickness / 2 + radius;\n      const x = border + (random() * (this.boxWidth - 2 * border));\n      const y = border + this.magnetHeight + this.ballHeight + (random() * (this.boxHeight - 2 * border - this.magnetHeight - this.ballHeight));\n      const object = Bodies.circle(x, y, radius, {\n        label: `object ${i}`,\n        isStatic: false,\n        isSleeping: true\n      });\n      objects.push(object);\n    });\n    return objects;\n  }\n\n  setWireframe(enabled: boolean) {\n    this.wireframe = enabled;\n    this.renderer.options.wireframes = enabled;\n    this.renderer.options.showSleeping = enabled;\n    this.renderer.options.showAngleIndicator = enabled;\n  }\n\n  getBodyCount() {\n    return Composite.allBodies(this.engine.world).length;\n  }\n\n  getConstraintCount() {\n    return Composite.allConstraints(this.engine.world).length;\n  }\n\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { GameEngine } from '../engine/GameEngine';\nimport { levelComplete, scoreUpdate } from '../redux/actions';\nimport { type DebugState } from '../redux/reducers/debug'\nimport { type LevelState } from '../redux/reducers/level'\nimport { Util } from '../util/Util';\n\ntype Props = {\n  level: number,\n  wireframe: boolean,\n  levelComplete: () => void,\n  scoreUpdate: (points: number) => void\n}\n\ntype State = {\n}\n\nexport class Game extends Component<Props,State> {\n\n  static CONTAINER_ID = \"matter_js_container\";\n\n  static getContainer(): ?HTMLElement {\n    return document.getElementById(Game.CONTAINER_ID);\n  }\n\n  // Set keyboard focus on the Game component.\n  //\n  // TODO a more elegant way of setting keyboard focus.\n  // ...CONTAINER_ID should have different value for each Game instance.\n  static focus() {\n    const container = Game.getContainer();\n    if (container) {\n      container.focus();\n    }\n  }\n\n  gameEngine: ?GameEngine;\n\n  constructor(props: Props) {\n    super(props);\n    this.gameEngine = null;\n  }\n\n  render() {\n    if (this.gameEngine) {\n      this.gameEngine.setWireframe(this.props.wireframe);\n    }\n    return (\n      // Need tabIndex, otherwise can't get focus and capture key events.\n      <div\n        className=\"Game\"\n        id={Game.CONTAINER_ID}\n        tabIndex=\"0\" />\n    );\n  }\n\n  _startEngine() {\n    const container = Util.nonNull(Game.getContainer());\n    this.gameEngine = new GameEngine(\n      container,\n      this.props.level,\n      this.props.wireframe,\n      this.props.levelComplete,\n      this.props.scoreUpdate);\n    this.gameEngine.start();\n  }\n\n  _stopEngine() {\n    if (this.gameEngine) {\n      this.gameEngine.stop();\n      this.gameEngine = null;\n    }\n  }\n\n  // React lifecycle.\n  componentDidMount() {\n    this._startEngine();\n  }\n\n  // React lifecycle.\n  componentWillUnmount() {\n    this._stopEngine();\n  }\n\n  // React lifecycle.\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.props.level === prevProps.level) {\n      return;\n    }\n    this._stopEngine();\n    this._startEngine();\n  }\n\n}\n\n// TODO Should LevelState/DebugState etc. include key too?\nconst mapStateToProps = (state: {level: LevelState, debug: DebugState}) => {\n  const level = state.level.current;\n  const wireframe = state.debug.wireframe;\n  return { level, wireframe };\n};\nconst actionCreators = {\n  levelComplete,\n  scoreUpdate\n}\nexport default connect(mapStateToProps, actionCreators)(Game);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\n\nimport type { ScoreState } from '../redux/reducers/score';\nimport { toggleWireframeMode } from '../redux/actions';\n\ntype Props = {\n  score: number,\n  toggleWireframeMode: () => void\n}\n\nexport const Score = (props: Props) => {\n  return (\n    <div className=\"Score\" onDoubleClick={props.toggleWireframeMode}>{props.score}</div>\n  );\n}\n\nconst mapStateToProps = (state: {score: ScoreState}) => {\n  return { score: state.score.current };\n}\nconst actionCreators = {\n  toggleWireframeMode\n};\nexport default connect(mapStateToProps, actionCreators)(Score);","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport type { LevelState } from '../redux/reducers/level';\nimport { dismissStartLevelScreen } from '../redux/actions';\n\ntype Props = {\n  level: number,\n  dismissStartLevelScreen: () => void\n};\n\nexport const StartLevelScreen = (props: Props) => {\n  return (\n    <div\n      className=\"StartLevelScreen\"\n      onClick={props.dismissStartLevelScreen}>\n      Level {props.level}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  return { level };\n};\nconst actionCreators = {\n  dismissStartLevelScreen\n};\n\nexport default connect(mapStateToProps, actionCreators)(StartLevelScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\n\nimport { levelChange } from '../redux/actions';\nimport type { LevelState } from '../redux/reducers/level';\n\ntype Props = {\n  level: number,\n  numberOfLevels: number,\n  levelChange: (number) => void\n}\n\nexport class Level extends Component<Props> {\n\n  render() {\n    return <select value={this.props.level} onChange={this.handleClick}> \n      {_.range(1, this.props.numberOfLevels + 1).map((i: number) =>\n        <option key={i} value={i}>{i}</option>\n      )}\n    </select>;\n  }\n\n  handleClick = (event: SyntheticEvent<HTMLSelectElement>) => {\n    const target: HTMLSelectElement = event.currentTarget;\n    if (target) {\n      const level: number = parseInt(target.value);\n      this.props.levelChange(level);\n    }\n  }\n\n}\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  const numberOfLevels = state.level.last\n  return { level, numberOfLevels };\n};\nconst actionCreators = {\n  levelChange\n};\nexport default connect(mapStateToProps, actionCreators)(Level);\n","// @flow\n\nimport { Cookies } from 'react-cookie-consent';\n\nexport const COOKIE_CONSENT = \"CookieConsent\";\n\nexport function cookieConsentGiven(): boolean {\n  return Cookies.get(COOKIE_CONSENT) === \"true\";\n}","/* @flow */\n\nimport ReactGA from 'react-ga';\nimport ScreenType from '../screen'\nimport { Log } from './Log';\nimport { cookieConsentGiven } from './cookies';\n\nexport function initializeReactGoogleAnalytics(initialScreen: ScreenType) {\n  ReactGA.initialize('UA-144250820-2');\n  pageview(initialScreen, true);\n}\n\nexport function pageview(screen: ScreenType, consentGiven: ?boolean) {\n  const page = window.location.pathname + screen;\n  Log.info(() => \"GA page: \" + page);\n  // Cookie isn't set when CookieConsent component calls onAccept callback, so\n  // need to use consentGiven to override cookieConsentGiven().\n  if (consentGiven === undefined) {\n    consentGiven = cookieConsentGiven();\n  }\n  if (consentGiven) {\n    ReactGA.set({page: page});\n    ReactGA.pageview(page);\n  } else {\n    Log.info(\"GA pageview not sent since cookie consent not given.\");\n  }\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport Level from '../components/Level';\nimport { startGame } from '../redux/actions';\nimport CookieConsent from \"react-cookie-consent\";\nimport { COOKIE_CONSENT } from '../util/cookies';\nimport { initializeReactGoogleAnalytics } from '../util/google_analytics';\n\ntype Props = {\n  startGame: () => void,\n  toggleFullscreen: () => void\n};\n\nexport class StartScreen extends Component<Props> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  ref: { current: any } = React.createRef();\n\n  constructor(props: Props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCrashClick = this.handleCrashClick.bind(this);\n    this.stopPropagation = this.stopPropagation.bind(this);\n  }\n\n  render() {\n    const showLevelSelector: boolean =\n      process.env.NODE_ENV === \"development\" ||\n      process.env.NODE_ENV === \"test\";\n    const level = showLevelSelector ? <Level /> : null;\n    return (\n      <div>\n        <div\n          ref={this.ref}\n          tabIndex=\"0\"\n          onClick={this.handleClick}\n          onKeyPress={this.handleClick}\n          className=\"StartScreen\">\n          <p>Touch screen, click or press any key to start game.</p>\n          <p>Use your finger, mouse or arrow keys to position the magnet.</p>\n          <p>Release finger/button or press space to turn the magnet on or off.</p>\n          <p>You move to the next level when all the objects (including the ball) are at the bottom of the box.</p>\n          <p>You gain a point for each dislodged object and starting a new level, but lose a point each time release ball.</p>\n          <p>Double clicking/tapping on score toggles debug mode.</p>\n          <div><p>JavaScript <span onClick={this.handleCrashClick}>crashes</span> are recorded using <a href=\"https://sentry.io\" onClick={this.stopPropagation}>Sentry</a>.</p></div>\n          <p>Use of this site is tracked using <a href=\"https://analytics.google.com/analytics/web/\">Google Analytics</a>.</p>\n          {/* Precache content that is required later. */}\n          <img hidden={true} alt=\"\" src=\"ball.png\"/>\n          {level}\n        </div>\n        <CookieConsent\n          buttonText=\"I Agree\"\n          cookieName={COOKIE_CONSENT}\n          onAccept={() => {\n            initializeReactGoogleAnalytics(\"start\")\n          }}\n        >\n            This site uses cookies.\n        </CookieConsent>\n      </div>\n    );\n  }\n\n  handleClick: () => void; // Allows binding in constructor without flow error.\n  async handleClick() {\n    this.props.toggleFullscreen(); // Can only be called from UI event.\n    this.props.startGame();\n    // Avoid resizing the screen while physics engine is running.\n    if (window.screen &&\n      window.screen.orientation &&\n      window.screen.orientation.lock &&\n      window.screen.orientation.type) {\n      // https://w3c.github.io/screen-orientation/\n      try {\n        await window.screen.orientation.lock(window.screen.orientation.type);\n      } catch (e) {\n        // NotSupportedError.\n      }\n    }\n  }\n\n  handleCrashClick = (e: SyntheticEvent<HTMLElement>) => {\n    e.stopPropagation();\n    throw new Error(\"testing 123 - clicked on 'crash' in start page.\");\n  }\n\n  stopPropagation = (e: SyntheticEvent<HTMLElement>) => {\n    e.stopPropagation();\n  }\n\n  componentDidMount() {\n    this.ref.current.focus();\n  }\n\n}\n\nconst mapStateToProps = null;\nconst actionCreators = { startGame };\n\nexport default connect(mapStateToProps, actionCreators)(StartScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport type { ScreenState } from '../redux/reducers/screen';\nimport GameScreen from './GameScreen';\nimport GameCompleteScreen from './GameCompleteScreen';\nimport StartLevelScreen from './StartLevelScreen';\nimport StartScreen from './StartScreen';\nimport { pageview } from '../util/google_analytics';\n\nconst screens = {\n  \"start\": StartScreen,\n  \"startLevel\": StartLevelScreen,\n  \"game\": GameScreen,\n  \"gameComplete\": GameCompleteScreen\n}\n\nexport type ScreenType = $Keys<typeof screens>;\n\ntype Props = {\n  +screen: ScreenType,\n  +toggleFullscreen: () => void\n}\n\ntype State = {}\n\nclass Screen extends Component<Props,State> {\n\n  render() {\n    const component = screens[this.props.screen];\n    return React.createElement(\n      component,\n      { toggleFullscreen: this.props.toggleFullscreen },\n      null\n    );\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.screen !== this.props.screen) {\n      pageview(this.props.screen);\n    }\n  }\n\n}\n\nexport const mapStateToProps = (state: {screen: ScreenState}) => {\n  const screen = state.screen.current;\n  return { screen };\n};\nconst actionCreators = {};\nexport default connect(mapStateToProps, actionCreators)(Screen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\nimport Game from '../components/Game';\nimport Score from '../components/Score';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div className=\"GameScreen\">\n      <Score />\n      <Game />\n    </div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div>Game Complete</div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport Fullscreenable from 'react-fullscreenable';\n\nimport { start } from '../redux/actions';\nimport { storeFactory } from '../redux/store';\nimport './App.css';\nimport Screen from '../screen';\nimport { cookieConsentGiven } from '../util/cookies';\nimport { initializeReactGoogleAnalytics } from '../util/google_analytics';\n\ntype Props = {\n  isFullscreen: boolean, // From Fullscreenable.\n  toggleFullscreen: () => void // From Fullscreenable.\n};\n\ntype State = {\n};\n\nclass App extends Component<Props,State> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  store: Object;\n  reactGAInitialized: boolean = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.store = storeFactory();\n  }\n\n  render() {\n    return (\n      <Provider store={this.store}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Screen toggleFullscreen={this.props.toggleFullscreen}/>\n          </header>\n        </div>\n      </Provider>\n    );\n  }\n\n  componentDidMount() {\n    if (!this.reactGAInitialized && cookieConsentGiven()) {\n      initializeReactGoogleAnalytics(\"start\");\n      this.reactGAInitialized = true;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.isFullscreen && !this.props.isFullscreen) {\n      this.store.dispatch(start());\n    }\n  }\n\n}\n\nexport default Fullscreenable()(App);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from \"./reducers\";\nimport sagas from './sagas';\n\nexport const storeFactory = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n  );\n  // $FlowFixMe - problem with Generator type parameters.\n  sagas.forEach((saga: Generator<*,*,*>) => {\n    sagaMiddleware.run(saga);\n  });\n  return store;\n};\n\n\n\n","// @flow\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as Sentry from '@sentry/browser';\nimport App from './components/App';\nimport { Util } from './util/Util'\n\n// https://www.w3.org/TR/pointerevents/ polyfill.\nimport 'pepjs';\n\n// Crash reporting - should be configured as early as possible.\nconst SENTRY_DSN = \"https://817a6d8f2f2940fa8ba8d6bfa0842617@sentry.io/1509240\";\nconst SENTRY_RELEASE = \"react-game@f608c32240e52b42bd894bc8630b2f8be6fda516\";\n// eslint-disable-next-line no-useless-concat\nif (SENTRY_DSN !== \"__SENTRY\" + \"_DSN__\") {\n  Sentry.init({\n    dsn: SENTRY_DSN,\n    release: SENTRY_RELEASE,\n    environment: \"production\"\n  });\n}\n\n// https://github.com/liabru/matter-js/issues/559\nwindow.decomp = require('poly-decomp');\n\nconst rootElement = Util.nonNull(document.getElementById('root'));\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}