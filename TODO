* Stop using enzyme.
  - no longer supported
  - won't work with react 18

* Upgrade more things.

* Stop using create-react-app - it's not maintained any more.

* GameScreen.test.js commented out
  - would need redux store in current form

* Convert to TypeScript

* Automated test for release build.

* Crash if switch tab at same time as request full screen mode.
  - "Request for fullscreen was denied because requesting element is not in the currently focused tab. DOMFullscreenChild.jsm:20:23"
  - "TypeError: The expression cannot be converted to return the specified type."

* GA page views
  - not being sent for first screen
  - otherwise appear to be sent, but don't appear in GA console.

* Add sentry crash reporting.
  - adding "react-game@" prefix to sentry release name has stopped it working out which commits are in the release.
  - backtraces are minified when come from android tablet.
  - CSP reports
  - connect client and server sessions
  - feedback page
  - more environments?

* Why does ball move inside the magnet?
  - makes it wobble too much

* It's occasionally possible to drag magnet without having reattached the ball.

* Can UI be re-rendered in between the various saga's actions?

* finger-width border, not 5% of screen size.

* Deploy coverage report to github pages.
  - coverage is measured
  - detailed report is not kept

* Run flow coverage report on test server.

* Jest unit-test coverage has dropped in some areas.

* connected components have poor/no jest coverage.

* pointerevent test coverage.

* GameEngine and Magnet coverage
  - use mock renderer to avoid need for canvas implementation?

* Magnet.test.js has test cases that move Magnet but that don't check position afterwards.

* js crash (in reducer) only shown in debug console, which you might not notice.

* Indicate when points are won.
  - numbered bubbles that fade out over time.
    - when hit balls
    - extra points at end of level
    - extra points at end of game.
 
* Change ball image to something ferromagnetic.
    - https://clipartimage.com/clipart/12640-anvil-clipart.html?
  - use anvil-shaped matter.js Body
    => might need to take more care over angular momentum
  - rename js field

* Electromagnet image.

* Add cable for electromagnet?
  - http://brm.io/matter-js/demo/#chains

* Add images for objects.

* When dragging magnet, don't move centre of magnet to pointerdown coordinates.
  - record offset when start dragging

* No typescript extensions => no js formatter in VSC?

* Active "Google signals" and "Demographics and Interest Reports" in GA.
  - google ask that get permission from users before do this.
    => need to new or changed cookie for any existing users.

* Polish the CSS.

* Cookie banner is temporarily dismissed if start game.

* Importing Foo wrapped with react-redux connect as Foo using default export is unclear.
  - it's not immediately obvious that component Foo is wrapped.

* Deploying to gh-pages creates a lot of blobs in git (e.g. node_modules)
  - deploy somewhere else?
  - uses fewer files somehow?

* Localization.

* High Score table.
  - persistence => cookies => banner.
  - persist on server?
  - make sure score can't be lost wherever exit game
    - e.g. by exiting fullscreen mode
    => update highscore every time score changes.

* Allowing negative scores looks odd.

* Find way to run npm audit on CI.

* Chrome audit.

* Offline web app?

* Different StartScreen text for mobile/desktop.

* The game's harder on larger screens.
  - scale ball and objects proportionally?

* Browser zooming interacts badly with game.
  - objects and ball can become very small
    - makes ball move slowly too.
  - or box doesn't fit on screen
  
* Refine image preloading
  - keep prefetching in StartScreen
  - add onLoad handlers that wait for images to onLoad
  - show spinner screen after StartScreen if preloading isn't complete
    - sharing prefetching markup using a Prefetch component.

* Error page says "This screen is visible only in development. It will not appear if the app crashes in production" for production builds.
