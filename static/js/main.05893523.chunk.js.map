{"version":3,"sources":["redux/actionTypes.js","redux/reducers/debug.js","redux/reducers/level.js","redux/reducers/score.js","redux/reducers/screen.js","redux/reducers/index.js","util/Log.js","redux/sagas/actionLogger.js","redux/actions.js","redux/sagas/gameComplete.js","redux/selectors/index.js","redux/sagas/levelComplete.js","redux/sagas/startLevel.js","redux/sagas/startGame.js","redux/sagas/index.js","redux/store.js","util/Util.js","engine/Magnet.js","engine/GameEngine.js","components/Game.js","components/Score.js","screen/StartLevelScreen.js","components/Level.js","screen/StartScreen.js","screen/index.js","screen/GameScreen.js","screen/GameCompleteScreen.js","components/App.js","index.js"],"names":["START_GAME","LEVEL_COMPLETE","GAME_COMPLETE","START_LEVEL","initialState","wireframe","current","last","combineReducers","debug","state","arguments","length","undefined","type","Object","objectSpread","level","action","payload","Error","concat","score","points","screen","levelStringLengths","map","widestLevel","_","max","Log","classCallCheck","this","createClass","key","value","message","log","now","Date","messageString","console","toISOString","padStart","actionLogger","actionLoggerListener","regenerator_default","a","wrap","_context","prev","next","info","stop","_marked","_context2","takeEvery","_marked2","gameComplete","levelChange","startLevel","scoreUpdate","screenChange","gameCompleteListener","put","gameComplete_marked","gameComplete_marked2","isLastLevel","createSelector","lastLevel","levelComplete","levelCompleteListener","select","sent","levelComplete_marked","levelComplete_marked2","startLevelListener","call","delay","startLevel_marked","startLevel_marked2","startGame","startGameListener","startGame_marked","startGame_marked2","sagas","storeFactory","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","forEach","saga","run","Util","min","Magnet","args","constraints","objects","acceleration","enabled","speed","dragging","x","y","minX","maxX","width","height","world","maxAcceleration","maxSpeed","onRelease","peakHeight","vertices","body","Bodies","fromVertices","label","isStatic","render","fillStyle","position","World","add","other","constraint","Constraint","create","bodyA","bodyB","visible","push","reposition","event","buttons","rect","clientX","clientY","left","right","top","bottom","canvasRect","isPrimary","button","insideRect","setEnabled","leftButtonPressed","Bounds","contains","bounds","Body","setPosition","dt","clamp","dx","_this","remove","attachmentPosition","id","JSON","stringify","GameEngine","container","ballImageSize","magnetHeight","magnetWidth","maxSpeedSquared","Math","pow","maxAngularVelocity","wallThickness","lastUpdateTimestamp","started","stopped","_handleCollision","that","pairs","pair","Sleeping","set","_dislodgeCheck","_handlePointerEvent","renderer","canvas","getBoundingClientRect","magnet","handlePointerEvent","_handleKeyPress","repeat","toggle","_handleBeforeUpdate","timestamp","update","Composite","allBodies","engine","angularVelocity","setAngularVelocity","velocity","speedSquared","ratio","sqrt","setVelocity","_insideBox","objectIds","has","_isEverythingSleepingOrEscaped","objectIdsRemaining","size","bind","boxHeight","clientHeight","boxWidth","clientWidth","Engine","gravity","enableSleeping","ballRadius","ballHeight","ballWidth","_createMagnet","ball","_createBall","walls","_createWalls","_createObjects","object","Set","attachToMagnet","toConsumableArray","addToWorld","Render","element","options","background","setWireframe","Events","on","document","addEventListener","focus","removeEventListener","off","delete","_this2","every","bodies","isSleeping","wallOptions","rectangle","_this3","xLimit","_initialX","circle","sprite","texture","restitution","frictionAir","frictionStatic","_this4","random","seedrandom","range","i","radius","border","wireframes","showSleeping","showAngleIndicator","allConstraints","Game","_Component","props","possibleConstructorReturn","getPrototypeOf","gameEngine","inherits","getElementById","CONTAINER_ID","getContainer","react_default","createElement","className","tabIndex","nonNull","start","_startEngine","_stopEngine","prevProps","prevState","Component","actionCreators","connect","toggleWireframeMode","onDoubleClick","Level","_getPrototypeOf2","_len","Array","_key","apply","handleClick","target","currentTarget","parseInt","onChange","numberOfLevels","StartScreen","ref","React","createRef","assertThisInitialized","onClick","onKeyPress","_handleClick","asyncToGenerator","mark","_callee","toggleFullscreen","window","orientation","lock","t0","screens","game","components_Score","components_Game","StartLevelScreen","component","App","es","src_screen","Fullscreenable","decomp","require","rootElement","ReactDOM","src_components_App"],"mappings":"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","file":"static/js/main.05893523.chunk.js","sourcesContent":["// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport type { ScreenType } from '../screen';\n\nexport const START_GAME = 'START_GAME';\nexport type StartGameAction = {\n  type: typeof(START_GAME)\n};\n\nexport const LEVEL_COMPLETE = 'LEVEL_COMPLETE';\nexport type LevelCompleteAction = {\n  type: typeof(LEVEL_COMPLETE)\n};\n\nexport const GAME_COMPLETE = 'GAME_COMPLETE';\nexport type GameCompleteAction = {\n  type: typeof(GAME_COMPLETE)\n};\n\nexport const LEVEL_CHANGE = 'LEVEL_CHANGE';\nexport type LevelChangeAction = {\n  type: typeof(LEVEL_CHANGE),\n  payload: { level: number }\n};\n\nexport const START_LEVEL = 'START_LEVEL';\nexport type StartLevelAction = {\n  type: typeof(START_LEVEL)\n};\n\nexport const SCORE_UPDATE = 'SCORE_UPDATE';\nexport type ScoreUpdateAction = {\n  type: typeof(SCORE_UPDATE),\n  payload: { points: number }\n};\n\nexport const SCREEN_CHANGE = 'SCREEN_CHANGE';\nexport type ScreenChangeAction = {\n  type: typeof(SCREEN_CHANGE),\n  payload: { screen: ScreenType }\n};\n\nexport const TOGGLE_WIREFRAME_MODE = 'TOGGLE_WIREFRAME_MODE';\nexport type ToggleWireframeModeAction = {\n  type: typeof(TOGGLE_WIREFRAME_MODE)\n};\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\n\nimport { Action } from 'redux';\nimport { TOGGLE_WIREFRAME_MODE } from '../actionTypes';\n\nexport type DebugState = {\n  +wireframe: boolean\n}\n\nconst initialState: DebugState = {\n  wireframe: false\n}\n\nexport const debug = (state: DebugState = initialState, action: Action): DebugState => {\n  switch (action.type) {\n    case TOGGLE_WIREFRAME_MODE: {\n      return {...state, wireframe: !state.wireframe};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { LEVEL_CHANGE } from '../actionTypes';\n\nexport type LevelState = {\n  +current: number,\n  +last: number\n}\n\nconst initialState: LevelState = {\n  current: 1,\n  last: 5\n}\n\nexport const level = (state: LevelState = initialState, action: Action): LevelState => {\n  switch (action.type) {\n    case LEVEL_CHANGE: {\n      let level: number = action.payload.level;\n      if (level === null) {\n        level = state.current + 1;\n      }\n      if (level < 1 || level > state.last) {\n        throw new Error(`level out of range: ${level}`);\n      }\n      return {...state, current: level};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { SCORE_UPDATE } from '../actionTypes';\n\nexport type ScoreState = {\n  +current: number\n}\n\nconst initialState: ScoreState = {\n  current: 0\n}\n\nexport const score = (state: ScoreState = initialState, action: Action): ScoreState => {\n  let { current } = state;\n  switch (action.type) {\n    case SCORE_UPDATE: {\n      const points: number = action.payload.points;\n      current += points;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { SCREEN_CHANGE } from '../actionTypes';\nimport type { ScreenType } from '../../screen';\n\nexport type ScreenState = {\n  +current: ScreenType\n}\n\nconst initialState: ScreenState = {\n  current: \"start\",\n}\n\nexport const screen = (state: ScreenState = initialState, action: Action): ScreenState => {\n  switch (action.type) {\n    case SCREEN_CHANGE: {\n      const current: ScreenType = action.payload.screen;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { combineReducers } from \"redux\";\n\nimport { debug } from \"./debug\";\nimport { level } from \"./level\";\nimport { score } from \"./score\";\nimport { screen } from \"./screen\";\n\nexport default combineReducers({\n  debug,\n  level,\n  score,\n  screen\n});","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport _ from 'lodash';\n\ntype Message = string | () => string;\n\ntype Level = 'INFO' | 'DEBUG';\n\nconst levels: Level[] = ['INFO', 'DEBUG'];\n\nconst levelStringLengths: number[] = levels.map(\n  (level: Level) => level.length\n);\n\nconst widestLevel: number = _.max(levelStringLengths);\n\nexport class Log {\n\n  static info(message: Message) {\n    this.log('INFO', message);\n  }\n\n  static debug(message: Message) {\n    this.log('DEBUG', message);\n  }\n\n  static log(level: Level, message: Message) {\n    // If implement log-level setting, only evaluate function and timestamp if need to.\n    const now = new Date();\n    const messageString: string = (typeof message === 'function') ? message() : message;\n    console.log(`${now.toISOString()} ${level.padStart(widestLevel)} ${messageString}`)\n  }\n\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { takeEvery } from 'redux-saga/effects';\n\nimport type { Action } from 'redux';\n\nimport { Log } from '../../util/Log';\n\n// eslint-disable-next-line require-yield\nexport function* actionLogger(action: Action): Generator<*,*,*> {\n  Log.info(`Action: ${action.type}`);\n}\n\nexport function* actionLoggerListener(): Generator<*,*,*> {\n  yield takeEvery(\"*\", actionLogger);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  GAME_COMPLETE,\n  LEVEL_COMPLETE,\n  LEVEL_CHANGE,\n  START_LEVEL,\n  SCORE_UPDATE,\n  SCREEN_CHANGE,\n  TOGGLE_WIREFRAME_MODE,\n  START_GAME\n} from './actionTypes'\nimport type { ScreenType } from '../screen';\n\nexport const startGame = () => ({\n  type: START_GAME\n});\n\nexport const gameComplete = () => ({\n  type: GAME_COMPLETE\n});\n\nexport const levelComplete = () => ({\n  type: LEVEL_COMPLETE\n});\n\nexport const levelChange = (level: ?number = null) => ({\n  type: LEVEL_CHANGE,\n  payload: {\n    level: level\n  }\n});\n\nexport const startLevel = () => ({\n  type: START_LEVEL\n});\n\nexport const scoreUpdate = (points: number) => ({\n  type: SCORE_UPDATE,\n  payload: {\n    points: points\n  }\n});\n\nexport const toggleWireframeMode = () => ({\n  type: TOGGLE_WIREFRAME_MODE,\n});\n\nexport const screenChange = (screen: ScreenType) => ({\n  type: SCREEN_CHANGE,\n  payload: {\n    screen: screen\n  }\n});\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { GAME_COMPLETE } from '../actionTypes';\nimport { screenChange } from '../actions';\n\nexport function* gameComplete(): Generator<*,*,*> {\n  yield put(screenChange(\"gameComplete\"));\n}\n\nexport function* gameCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(GAME_COMPLETE, gameComplete);\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createSelector } from 'reselect'\n\nimport { type LevelState } from '../reducers/level';\n\ntype State = { level: LevelState }\n\nconst getLevel = (state: State) => state.level.current;\nconst getLastLevel = (state: State) => state.level.last;\n\nexport const isLastLevel = createSelector(\n  [getLevel, getLastLevel],\n  (level: number, lastLevel: number) => {\n    return level === lastLevel;\n  }\n)","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, select, takeEvery } from 'redux-saga/effects';\n\nimport { LEVEL_COMPLETE } from '../actionTypes';\nimport { levelChange, startLevel, gameComplete } from '../actions';\nimport { isLastLevel } from '../selectors';\n\nexport function* levelComplete(): Generator<*,*,*> {\n  if (yield select(isLastLevel)) {\n    yield put(gameComplete());\n  } else {\n    yield put(levelChange());\n    yield put(startLevel());\n  }\n}\n\nexport function* levelCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(LEVEL_COMPLETE, levelComplete);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { delay } from 'redux-saga'\n\nimport { START_LEVEL } from '../actionTypes';\nimport { scoreUpdate, screenChange } from '../actions';\n\nexport function* startLevel(): Generator<*,*,*> {\n  yield put(screenChange(\"startLevel\"));\n  yield call(delay, 2500);\n  yield put(scoreUpdate(1));\n  yield put(screenChange(\"game\"));\n}\n\nexport function* startLevelListener(): Generator<*,*,*> {\n  yield takeEvery(START_LEVEL, startLevel);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { START_GAME } from '../actionTypes';\nimport { startLevel } from '../actions';\n\nexport function* startGame(): Generator<*,*,*> {\n  yield put(startLevel());\n}\n\nexport function* startGameListener(): Generator<*,*,*> {\n  yield takeEvery(START_GAME, startGame);\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { actionLoggerListener } from './actionLogger';\nimport { gameCompleteListener } from './gameComplete';\nimport { levelCompleteListener } from './levelComplete';\nimport { startLevelListener } from './startLevel';\nimport { startGameListener } from './startGame';\n\nexport default [\n  actionLoggerListener,\n  gameCompleteListener,\n  levelCompleteListener,\n  startLevelListener,\n  startGameListener\n];","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from \"./reducers\";\nimport sagas from './sagas';\n\nexport const storeFactory = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n  );\n  // $FlowFixMe - problem with Generator type parameters.\n  sagas.forEach((saga: Generator<*,*,*>) => {\n    sagaMiddleware.run(saga);\n  });\n  return store;\n};\n\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nexport class Util {\n\n  // Clamp value to be within the range [min, max].\n  static clamp(value: number, min: number, max: number): number {\n    if (max < min) {\n      throw new Error(`max of ${max} is less than min ${min} (with value of ${value})`);\n    }\n    if (value < min) {\n      value = min;\n    }\n    if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n\n  // Asserts that a maybe-typed value is not null or undefined.\n  static nonNull<T>(value: ?T): T {\n    if (value === null) {\n      throw new Error(\"null value.\");\n    }\n    if (value === undefined) {\n      throw new Error(\"undefined value.\");\n    }\n    return value;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Body,\n  Bodies,\n  Bounds,\n  Constraint,\n  World\n} from 'matter-js'\n\nimport { Log } from '../util/Log';\nimport { Util } from '../util/Util';\n\ntype Args = {\n  +x: number,\n  +y: number,\n  +minX: number,\n  +maxX: number,\n  +width: number,\n  +height: number,\n  +world: World,\n  +maxAcceleration?: number,\n  +maxSpeed?: number,\n  +onRelease: () => void\n}\n\ntype Rect = {\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n};\n\nexport class Magnet {\n\n  +body: Body;\n  +constraints: Constraint[] = [];\n  +height: number;\n  +width: number;\n  +maxAcceleration: number;\n  +maxSpeed: number;\n  +minX: number;\n  +maxX: number;\n  +objects: Body[] = [];\n  +world: World;\n  +onRelease: () => void;\n\n  acceleration: number = 0;\n  enabled: boolean = true;\n  speed: number = 0;\n  dragging: boolean = false;\n\n  constructor(args: Args) {\n    const x = args.x;\n    const y = args.y;\n    this.minX = args.minX;\n    this.maxX = args.maxX;\n    this.width = args.width;\n    this.height = args.height;\n    this.world = args.world;\n    this.maxAcceleration = (args.maxAcceleration === undefined) ? 0.005 : args.maxAcceleration;\n    this.maxSpeed = (args.maxSpeed === undefined) ? 1.3 : args.maxSpeed;\n    this.onRelease = args.onRelease;\n    const peakHeight = this.height * 0.2;\n    const vertices = [\n      { x: -this.width / 2, y: - this.height / 2 },\n      { x:               0, y: - this.height / 2 - peakHeight },\n      { x:  this.width / 2, y: - this.height / 2 },\n      { x:  this.width / 2, y:   this.height / 2},\n      { x: -this.width / 2, y:   this.height / 2}\n    ];\n    this.body = Bodies.fromVertices(x, y, vertices, {\n      label: \"magnet\",\n      isStatic: true,\n      render: {\n        fillStyle: 'Grey'\n      }\n    });\n  }\n\n  // Bottom centre coordinates of magnet.\n  attachmentPosition(): {x: number, y: number} {\n    return { x: this.body.position.x, y: this.body.position.y + this.height / 2 };\n  }\n\n  // Register the Magnet's matter.js Body with the matter.js World.\n  addToWorld() {\n    World.add(this.world, this.body);\n  }\n\n  // Connect another Body to the Magnet.\n  attachToMagnet(other: Body) {\n    const constraint: Constraint = Constraint.create({\n      bodyA: this.body,\n      bodyB: other,\n      render: {\n        visible: false\n      }\n    })\n    this.constraints.push(constraint);\n    this.objects.push(other);\n    if (this.enabled) {\n      World.add(this.world, constraint);\n      this.reposition(other);\n    }\n  }\n\n  leftButtonPressed(event: PointerEvent) {\n    return event.buttons & 1;\n  }\n\n  insideRect(event: PointerEvent, rect: Rect) {\n    const x = event.clientX;\n    const y = event.clientY;\n    return !(x < rect.left || x > rect.right || y < rect.top || y > rect.bottom);\n  }\n\n  handlePointerEvent(\n    canvasRect: Rect,\n    event: PointerEvent) {\n    if (!event.isPrimary) {\n      // If multiple contact points are possible, ignore all but the primary\n      // (the first one for touch screens). Otherwise, magnet jumps between\n      // each contact point as events are received.\n      return;\n    }\n    if (this.dragging && event.button === 0 && event.type === 'pointerup' && this.insideRect(event, canvasRect)) {\n      // Ignoring pointerup event if it's outside the box means there's a way to\n      // change your mind about releasing the ball after start moving it.\n      this.setEnabled(false);\n    }\n    if (!this.leftButtonPressed(event)) {\n      this.dragging = false;\n      return;\n    }\n    const position = {\n      x: event.clientX - canvasRect.left,\n      y: event.clientY - canvasRect.top\n    };\n    const onMagnet = Bounds.contains(this.body.bounds, position);\n    if (onMagnet) {\n      this.dragging = true;\n      if (event.button === 0 && event.type === 'pointerdown') {\n        this.setEnabled(true);\n      }\n    }\n    if (this.dragging) {\n      this.stop();\n      Body.setPosition(this.body, { x: position.x, y: this.body.position.y});\n    }\n  }\n\n  // Start movement to left.\n  left() {\n    if (this.speed > 0) {\n      this.speed = 0;\n    }\n    this.acceleration = -this.maxAcceleration;\n  }\n\n  // Start movement to right.\n  right() {\n    if (this.speed < 0) {\n      this.speed = 0;\n    }\n    this.acceleration = this.maxAcceleration;\n  }\n\n  // Stop movement.\n  stop() {\n    this.acceleration = 0;\n    this.speed = 0;\n  }\n\n  // Handle matter.js update callback.\n  //\n  // dt - time since last update\n  update(dt: number) {\n    this.speed = Util.clamp(\n      this.speed + this.acceleration * dt,\n      -this.maxSpeed, this.maxSpeed);\n    const dx = this.speed * dt;\n    const x = Util.clamp(\n      this.body.position.x + dx,\n      this.minX, this.maxX);\n    const y = this.body.position.y;\n    Body.setPosition(this.body, { x, y });\n  }\n\n  // Turn the magnet on or off.\n  toggle() {\n    this.setEnabled(!this.enabled);\n  }\n\n  // Turn the magnet on or off.\n  setEnabled(enabled: boolean) {\n    if (enabled) {\n      if (!this.enabled) {\n        World.add(this.world, this.constraints);\n        this.objects.forEach((body: Body) => {\n          this.reposition(body);\n        });\n      }\n    } else {\n      if (this.enabled) {\n        World.remove(this.world, this.constraints);\n        this.onRelease();\n      }\n    }\n    this.enabled = enabled;\n  }\n\n  // If add Constraint back to World and object is far\n  // away from Magnet, it will generally accelerate\n  // through and past the Magnet. Instead, place it close\n  // where it should be in equilibrium (if it's a\n  // circle/square at least).\n  reposition(body: Body) {\n    const position = this.attachmentPosition();\n    const height: number = body.bounds.max.y - body.bounds.min.y;\n    position.y = position.y + height / 2;\n    Log.debug(`repositioning body with id: ${body.id} to: ${JSON.stringify(position)}`);\n    Body.setPosition(body, position);\n  }\n\n  // For testing.\n  getSpeed(): number {\n    return this.speed;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Bodies,\n  Body,\n  Composite,\n  Engine,\n  Events,\n  Pair,\n  Render,\n  Sleeping,\n  World\n} from 'matter-js'\nimport _ from 'lodash';\nimport seedrandom from 'seedrandom';\n\nimport { Log } from '../util/Log';\nimport { Magnet } from './Magnet';\nimport { Util } from '../util/Util';\n\nexport class GameEngine {\n\n  +ball: Body;\n  +ballImageSize: number = 64; // pixels\n  +ballRadius: number;\n  +ballHeight: number;\n  +ballWidth: number;\n  +boxHeight: number;\n  +boxWidth: number;\n  +container: HTMLElement;\n  +engine: Engine;\n  +level: number;\n  +magnet: Magnet;\n  +magnetHeight: number = 15;\n  +magnetWidth: number = 50;\n  +maxSpeedSquared: number = Math.pow(7, 2);\n  +maxAngularVelocity: number = 0.5;\n  +levelComplete: () => void;\n  // The ids of all the \"objects\".\n  +objectIds: Set<number>;\n  // The ids of the \"objects\" that have not yet been dislodged.\n  +objectIdsRemaining: Set<number>;\n  +renderer: Render;\n  +scoreUpdate: (points: number) => void;\n  +walls: Body[];\n  +wallThickness: number = 50;\n\n  lastUpdateTimestamp: ?number = null;\n  started: boolean = false;\n  stopped: boolean = false;\n  wireframe: boolean;\n\n  constructor(\n    container: HTMLElement,\n    level: number,\n    wireframe: boolean,\n    levelComplete: () => void,\n    scoreUpdate: (points: number) => void) {\n    \n    this._dislodgeCheck = this._dislodgeCheck.bind(this);\n\n    this.levelComplete = levelComplete;\n    this.scoreUpdate = scoreUpdate;\n    this.level = level;\n    this.wireframe = wireframe;\n    this.container = container;\n    this.boxHeight = container.clientHeight;\n    this.boxWidth = container.clientWidth;\n    this.engine = Engine.create();\n    this.engine.world.gravity.y = 0.2;\n    this.engine.enableSleeping = true;\n    this.ballRadius = 1.025 * this.ballImageSize / 2.0\n    this.ballHeight = this.ballRadius;\n    this.ballWidth = this.ballRadius;\n    this.magnet = this._createMagnet();\n    this.ball = this._createBall(this.magnet);\n    const walls = this._createWalls();\n    const objects = this._createObjects();\n    const objectIds = _.map(objects, (object: Body) => {\n      return object.id;\n    });\n    this.objectIds = new Set(objectIds);\n    this.objectIdsRemaining = new Set(objectIds);\n    this.magnet.attachToMagnet(this.ball);\n    World.add(this.engine.world, [\n      ...walls,\n      this.ball,\n      ...objects\n    ]);\n    this.magnet.addToWorld();\n    Log.info('Body ids:');\n    Composite.allBodies(this.engine.world).forEach((body: Body) => {\n      Log.info(`${body.id} - ${body.label}`);\n    });\n    this.renderer = Render.create({\n      element: this.container,\n      engine: this.engine,\n      options: {\n        background: \"#fafafa\",\n        width: this.boxWidth,\n        height: this.boxHeight\n      }\n    });\n    this.setWireframe(this.wireframe);\n  }\n\n  start() {\n    if (this.started) {\n      throw new Error(\"already started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"cannot restart.\");\n    }\n    Events.on(this.engine, 'collisionStart', this._handleCollision);\n    Events.on(this.engine, 'beforeUpdate', this._handleBeforeUpdate);\n    Engine.run(this.engine);\n    Render.run(this.renderer);\n    document.addEventListener('keydown', this._handleKeyPress);\n    document.addEventListener('keyup', this._handleKeyPress);\n    this.renderer.canvas.addEventListener('pointerdown', this._handlePointerEvent);\n    this.renderer.canvas.addEventListener('pointermove', this._handlePointerEvent);\n    this.renderer.canvas.addEventListener('pointerup', this._handlePointerEvent);\n    // The canvas has the touch-action CSS attribute set, but the pepjs polyfill\n    // needs a DOM attribute instead: https://github.com/jquery/PEP#touch-action\n    this.renderer.canvas[\"touch-action\"] = \"none\";\n    this.container.focus();\n    this.started = true;\n  }\n\n  stop() {\n    if (!this.started) {\n      throw new Error(\"not started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"already stopped\");\n    }\n    this.renderer.canvas.removeEventListener('pointerup', this._handlePointerEvent);\n    this.renderer.canvas.removeEventListener('pointerdown', this._handlePointerEvent);\n    this.renderer.canvas.removeEventListener('pointermove', this._handlePointerEvent);\n    document.removeEventListener('keydown', this._handleKeyPress);\n    document.removeEventListener('keyup', this._handleKeyPress);\n    Render.stop(this.renderer);\n    Events.off(this.engine, 'collisionStart');\n    Events.off(this.engine, 'beforeUpdate');\n    this.renderer.canvas.remove();\n    this.started = false;\n    this.stopped = true;\n  }\n\n  _handleCollision = (event: (pairs: [Pair]) => void) => {\n    const that = this;\n    const pairs = event.pairs;\n    pairs.forEach((pair: Pair) => {\n      [pair.bodyA, pair.bodyB].forEach((body: Body) => {\n        Sleeping.set(body, false);\n        that._dislodgeCheck(body);\n      });\n    });\n  }\n\n  _dislodgeCheck: (Body => void);\n  _dislodgeCheck(body: Body) {\n    const dislodged = this.objectIdsRemaining.delete(body.id);\n    if (dislodged) {\n      Log.debug(`dislodged: ${body.id}`);\n      const points = 1;\n      this.scoreUpdate(points);\n    }\n  }\n\n  _handlePointerEvent = (event: PointerEvent) => {\n    const rect = this.renderer.canvas.getBoundingClientRect();\n    this.magnet.handlePointerEvent(rect, event);\n  }\n\n  _handleKeyPress = (event: KeyboardEvent) => {\n    if (event.repeat) {\n      return;\n    }\n    if (event.type === \"keydown\" && event.key === \" \") {\n      this.magnet.toggle();\n    }\n    if (event.type === \"keydown\") {\n      if (event.key === 'ArrowLeft') {\n        this.magnet.left();\n      } else if (event.key === 'ArrowRight') {\n        this.magnet.right();\n      }\n    } else if (event.type === \"keyup\") {\n      this.magnet.stop();\n    } else {\n      throw new Error(event);\n    }\n  }\n\n  _handleBeforeUpdate = (event: {timestamp: number}) => {\n    const that = this;\n    if (this.lastUpdateTimestamp === undefined) {\n      throw new Error(); // flow type refinement\n    }\n    if (!(this.lastUpdateTimestamp === null)) {\n      const dt: number = event.timestamp - this.lastUpdateTimestamp;\n      this.magnet.update(dt);\n    }\n    Composite.allBodies(this.engine.world).forEach((body: Body) => {\n      // Speed and angular velocity are clamped to reduce chance\n      // that ball or object can pass through walls.\n      const angularVelocity: number = Util.clamp(body.angularVelocity,\n        -this.maxAngularVelocity, this.maxAngularVelocity);\n      Body.setAngularVelocity(body, angularVelocity);\n      const velocity = body.velocity;\n      const speedSquared = velocity.x * velocity.x + velocity.y * velocity.y;\n      if (speedSquared > this.maxSpeedSquared) {\n        const ratio = Math.sqrt(this.maxSpeedSquared / speedSquared);\n        Body.setVelocity(body, {\n          x: velocity.x * ratio,\n          y: velocity.y * ratio\n        });\n      }\n      // In case an object is fast enough to pass through wall, remove\n      // it. Otherwise, it likely falls forever and the level never completes.\n      if (!that._insideBox(body) && that.objectIds.has(body.id)) {\n        Log.debug(`escaped: ${body.id}`);\n        World.remove(that.engine.world, body);\n        that._dislodgeCheck(body); // Hopefully never required.\n      }\n    });\n    if (this._isEverythingSleepingOrEscaped()) {\n      if (this.objectIdsRemaining.size === 0) {\n        this.levelComplete();\n      } else {\n        this.magnet.setEnabled(true);\n      }\n    }\n    this.lastUpdateTimestamp = event.timestamp;\n  }\n\n  _insideBox(body: Body): boolean {\n    const x: number = body.position.x;\n    const y: number = body.position.y;\n    return !(x < 0 || x > this.boxWidth || y < 0 || y > this.boxHeight);\n  }\n\n  _isEverythingSleepingOrEscaped() {\n    return _.every(this.engine.world.bodies, (body: Body) => {\n      return body.isSleeping || !this._insideBox(body);\n    });\n  }\n\n  _createWalls(): Body[] {\n    const wallOptions = {\n      isStatic: true,\n      render: {\n        fillStyle: 'LightGrey'\n      }\n    };\n    // matter.js does positioning using centre of mass...\n    const wallTop = Bodies.rectangle(this.boxWidth / 2, 0, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - T\" });\n    const wallBottom = Bodies.rectangle(this.boxWidth / 2, this.boxHeight, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - B\" });\n    const wallRight = Bodies.rectangle(this.boxWidth, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - R\" });\n    const wallLeft = Bodies.rectangle(0, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - L\" });\n    const walls = [wallTop, wallBottom,  wallRight, wallLeft];\n    return walls;\n  }\n\n  // Initial x coordinate of magnet and ball.\n  _initialX(): number {\n    return 0.68 * (this.boxWidth - this.wallThickness / 2) + this.wallThickness / 2\n  }\n\n  _createMagnet(): Magnet {\n    const xLimit = this.wallThickness / 2 +\n      Math.max(this.magnetWidth / 2, this.ballWidth / 2) +\n      0.01 * this.boxWidth;\n    return new Magnet({\n      x: this._initialX(),\n      y: this.wallThickness / 2 + 0.01 * this.boxHeight + this.magnetHeight / 2,\n      minX: xLimit,\n      maxX: this.boxWidth - xLimit,\n      width: this.magnetWidth,\n      height: this.magnetHeight,\n      world: this.engine.world,\n      onRelease: () => this.scoreUpdate(-1)});\n  }\n\n  _createBall(magnet: Magnet): Body {\n    const x = magnet.attachmentPosition().x;\n    const y = magnet.attachmentPosition().y + this.ballRadius;\n    const ball = Bodies.circle(x, y, this.ballRadius, {\n      label: \"ball\",\n      render: {\n        sprite: {\n          texture: 'ball.png'\n        }\n      },\n      restitution: 0.5,\n      // density: 1,\n      frictionAir: 0,\n      frictionStatic: 0,\n    });\n    return ball;\n  }\n\n  _createObjects(): Body[] {\n    const random = seedrandom(this.level + 484726723);\n    const objects = []\n    _.range(0, this.level).forEach((i: number) => {\n      const radius = 10 + random() * 15;\n      const border = this.wallThickness / 2 + radius;\n      const x = border + (random() * (this.boxWidth - 2 * border));\n      const y = border + this.magnetHeight + this.ballHeight + (random() * (this.boxHeight - 2 * border - this.magnetHeight - this.ballHeight));\n      const object = Bodies.circle(x, y, radius, {\n        label: `object ${i}`,\n        isStatic: false,\n        isSleeping: true\n      });\n      objects.push(object);\n    });\n    return objects;\n  }\n\n  setWireframe(enabled: boolean) {\n    this.wireframe = enabled;\n    this.renderer.options.wireframes = enabled;\n    this.renderer.options.showSleeping = enabled;\n    this.renderer.options.showAngleIndicator = enabled;\n  }\n\n  getBodyCount() {\n    return Composite.allBodies(this.engine.world).length;\n  }\n\n  getConstraintCount() {\n    return Composite.allConstraints(this.engine.world).length;\n  }\n\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { GameEngine } from '../engine/GameEngine';\nimport { levelComplete, scoreUpdate } from '../redux/actions';\nimport { type DebugState } from '../redux/reducers/debug'\nimport { type LevelState } from '../redux/reducers/level'\nimport { Util } from '../util/Util';\n\ntype Props = {\n  level: number,\n  wireframe: boolean,\n  levelComplete: () => void,\n  scoreUpdate: (points: number) => void\n}\n\ntype State = {\n}\n\nexport class Game extends Component<Props,State> {\n\n  static CONTAINER_ID = \"matter_js_container\";\n\n  static getContainer(): ?HTMLElement {\n    return document.getElementById(Game.CONTAINER_ID);\n  }\n\n  // Set keyboard focus on the Game component.\n  //\n  // TODO a more elegant way of setting keyboard focus.\n  // ...CONTAINER_ID should have different value for each Game instance.\n  static focus() {\n    const container = Game.getContainer();\n    if (container) {\n      container.focus();\n    }\n  }\n\n  gameEngine: ?GameEngine;\n\n  constructor(props: Props) {\n    super(props);\n    this.gameEngine = null;\n  }\n\n  render() {\n    if (this.gameEngine) {\n      this.gameEngine.setWireframe(this.props.wireframe);\n    }\n    return (\n      // Need tabIndex, otherwise can't get focus and capture key events.\n      <div\n        className=\"Game\"\n        id={Game.CONTAINER_ID}\n        tabIndex=\"0\" />\n    );\n  }\n\n  _startEngine() {\n    const container = Util.nonNull(Game.getContainer());\n    this.gameEngine = new GameEngine(\n      container,\n      this.props.level,\n      this.props.wireframe,\n      this.props.levelComplete,\n      this.props.scoreUpdate);\n    this.gameEngine.start();\n  }\n\n  _stopEngine() {\n    if (this.gameEngine) {\n      this.gameEngine.stop();\n      this.gameEngine = null;\n    }\n  }\n\n  // React lifecycle.\n  componentDidMount() {\n    this._startEngine();\n  }\n\n  // React lifecycle.\n  componentWillUnmount() {\n    this._stopEngine();\n  }\n\n  // React lifecycle.\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.props.level === prevProps.level) {\n      return;\n    }\n    this._stopEngine();\n    this._startEngine();\n  }\n\n}\n\n// TODO Should LevelState/DebugState etc. include key too?\nconst mapStateToProps = (state: {level: LevelState, debug: DebugState}) => {\n  const level = state.level.current;\n  const wireframe = state.debug.wireframe;\n  return { level, wireframe };\n};\nconst actionCreators = {\n  levelComplete,\n  scoreUpdate\n}\nexport default connect(mapStateToProps, actionCreators)(Game);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\n\nimport type { ScoreState } from '../redux/reducers/score';\nimport { toggleWireframeMode } from '../redux/actions';\n\ntype Props = {\n  score: number,\n  toggleWireframeMode: () => void\n}\n\nexport const Score = (props: Props) => {\n  return (\n    <div className=\"Score\" onDoubleClick={props.toggleWireframeMode}>{props.score}</div>\n  );\n}\n\nconst mapStateToProps = (state: {score: ScoreState}) => {\n  return { score: state.score.current };\n}\nconst actionCreators = {\n  toggleWireframeMode\n};\nexport default connect(mapStateToProps, actionCreators)(Score);","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport type { LevelState } from '../redux/reducers/level';\n\ntype Props = {\n  level: number\n};\n\nexport const StartLevelScreen = (props: Props) => {\n  return (\n    <div>Level {props.level}</div>\n  );\n};\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  return { level };\n};\nconst actionCreators = {};\n\nexport default connect(mapStateToProps, actionCreators)(StartLevelScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\n\nimport { levelChange } from '../redux/actions';\nimport type { LevelState } from '../redux/reducers/level';\n\ntype Props = {\n  level: number,\n  numberOfLevels: number,\n  levelChange: (number) => void\n}\n\nexport class Level extends Component<Props> {\n\n  render() {\n    return <select value={this.props.level} onChange={this.handleClick}> \n      {_.range(1, this.props.numberOfLevels + 1).map((i: number) =>\n        <option key={i} value={i}>{i}</option>\n      )}\n    </select>;\n  }\n\n  handleClick = (event: SyntheticEvent<HTMLSelectElement>) => {\n    const target: HTMLSelectElement = event.currentTarget;\n    if (target) {\n      const level: number = parseInt(target.value);\n      this.props.levelChange(level);\n    }\n  }\n\n}\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  const numberOfLevels = state.level.last\n  return { level, numberOfLevels };\n};\nconst actionCreators = {\n  levelChange\n};\nexport default connect(mapStateToProps, actionCreators)(Level);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport Level from '../components/Level';\nimport { startGame } from '../redux/actions';\n\ntype Props = {\n  startGame: () => void,\n  toggleFullscreen: () => void\n};\n\nexport class StartScreen extends Component<Props> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  ref: { current: any } = React.createRef();\n\n  constructor(props: Props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  render() {\n    const showLevelSelector: boolean =\n      process.env.NODE_ENV === \"development\" ||\n      process.env.NODE_ENV === \"test\";\n    const level = showLevelSelector ? <Level /> : null;\n    return (\n      <div\n        ref={this.ref}\n        tabIndex=\"0\"\n        onClick={this.handleClick}\n        onKeyPress={this.handleClick}\n        className=\"StartScreen\">\n        <p>Touch screen, click or press any key to start game.</p>\n        <p>Use your finger, mouse or arrow keys to position the magnet.</p>\n        <p>Release finger/button or press space to turn the magnet on or off.</p>\n        <p>You move to the next level when all the objects (including the ball) are at the bottom of the box.</p>\n        <p>You gain a point for each dislodged object and starting a new level, but lose a point each time release ball.</p>\n        <p>Double clicking/tapping on score toggles debug mode.</p>\n        {level}\n      </div>\n    );\n  }\n\n  handleClick: () => void; // Allows binding in constructor without flow error.\n  async handleClick() {\n    this.props.toggleFullscreen(); // Can only be called from UI event.\n    this.props.startGame();\n    // Avoid resizing the screen while physics engine is running.\n    if (window.screen &&\n      window.screen.orientation &&\n      window.screen.orientation.lock &&\n      window.screen.orientation.type) {\n      // https://w3c.github.io/screen-orientation/\n      try {\n        await window.screen.orientation.lock(window.screen.orientation.type);\n      } catch (e) {\n        // NotSupportedError.\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.ref.current.focus();\n  }\n\n}\n\nconst mapStateToProps = null;\nconst actionCreators = { startGame };\n\nexport default connect(mapStateToProps, actionCreators)(StartScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport type { ScreenState } from '../redux/reducers/screen';\nimport GameScreen from './GameScreen';\nimport GameCompleteScreen from './GameCompleteScreen';\nimport StartLevelScreen from './StartLevelScreen';\nimport StartScreen from './StartScreen';\n\nconst screens = {\n  \"game\": GameScreen,\n  \"gameComplete\": GameCompleteScreen,\n  \"startLevel\": StartLevelScreen,\n  \"start\": StartScreen\n}\n\nexport type ScreenType = $Keys<typeof screens>;\n\ntype Props = {\n  +screen: ScreenType,\n  +toggleFullscreen: () => void\n}\n\nconst Screen = (props: Props) => {\n  const component = screens[props.screen];\n  return React.createElement(\n    component,\n    { toggleFullscreen: props.toggleFullscreen },\n    null\n  );\n}\n\nexport const mapStateToProps = (state: {screen: ScreenState}) => {\n  const screen = state.screen.current;\n  return { screen };\n};\nconst actionCreators = {};\nexport default connect(mapStateToProps, actionCreators)(Screen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\nimport Game from '../components/Game';\nimport Score from '../components/Score';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div className=\"GameScreen\">\n      <Score />\n      <Game />\n    </div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div>Game Complete</div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport Fullscreenable from 'react-fullscreenable';\n\nimport { storeFactory } from '../redux/store';\nimport './App.css';\nimport Screen from '../screen';\n\ntype Props = {\n  isFullscreen: boolean,\n  toggleFullscreen: () => void\n};\n\ntype State = {\n};\n\nclass App extends Component<Props,State> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  store: Object;\n\n  constructor(props: Props) {\n    super(props);\n    this.store = storeFactory();\n  }\n\n  render() {\n    return (\n      <Provider store={this.store}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Screen toggleFullscreen={this.props.toggleFullscreen}/>\n          </header>\n        </div>\n      </Provider>\n    );\n  }\n\n}\n\nexport default Fullscreenable()(App);\n","// @flow\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Util } from './util/Util'\n\n// https://www.w3.org/TR/pointerevents/ polyfill.\nimport 'pepjs';\n\n// https://github.com/liabru/matter-js/issues/559\nwindow.decomp = require('poly-decomp');\n\nconst rootElement = Util.nonNull(document.getElementById('root'));\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}