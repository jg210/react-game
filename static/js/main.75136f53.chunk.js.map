{"version":3,"sources":["redux/actionTypes.js","redux/reducers/debug.js","redux/reducers/level.js","redux/reducers/score.js","redux/reducers/screen.js","redux/reducers/index.js","util/Log.js","redux/sagas/actionLogger.js","redux/actions.js","redux/sagas/gameComplete.js","redux/selectors/index.js","redux/sagas/levelComplete.js","redux/sagas/startLevel.js","redux/sagas/startGame.js","redux/sagas/index.js","redux/store.js","util/Util.js","engine/Magnet.js","engine/GameEngine.js","components/Game.js","components/Score.js","screen/StartLevelScreen.js","components/Level.js","screen/StartScreen.js","screen/index.js","screen/GameScreen.js","screen/GameCompleteScreen.js","components/App.js","index.js"],"names":["START_GAME","LEVEL_COMPLETE","GAME_COMPLETE","START_LEVEL","initialState","wireframe","current","last","combineReducers","debug","state","arguments","length","undefined","type","Object","objectSpread","level","action","payload","Error","concat","score","points","screen","levelStringLengths","map","widestLevel","_","max","Log","classCallCheck","this","createClass","key","value","message","log","now","Date","messageString","console","toISOString","padStart","actionLogger","actionLoggerListener","regenerator_default","a","wrap","_context","prev","next","info","stop","_marked","_context2","takeEvery","_marked2","gameComplete","levelChange","startLevel","screenChange","gameCompleteListener","put","gameComplete_marked","gameComplete_marked2","isLastLevel","createSelector","lastLevel","levelComplete","levelCompleteListener","select","sent","levelComplete_marked","levelComplete_marked2","startLevelListener","call","delay","startLevel_marked","startLevel_marked2","startGame","startGameListener","startGame_marked","startGame_marked2","sagas","storeFactory","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","forEach","saga","run","Util","min","Magnet","args","constraints","objects","acceleration","enabled","speed","dragging","x","y","minX","maxX","width","height","world","maxAcceleration","maxSpeed","peakHeight","vertices","body","Bodies","fromVertices","label","isStatic","render","fillStyle","position","World","add","other","constraint","Constraint","create","bodyA","bodyB","visible","push","reposition","event","buttons","rect","clientX","clientY","left","right","top","bottom","canvasRect","isPrimary","button","insideRect","setEnabled","leftButtonPressed","Bounds","contains","bounds","Body","setPosition","dt","clamp","dx","_this","remove","attachmentPosition","id","JSON","stringify","GameEngine","container","scoreUpdate","ballImageSize","magnetHeight","magnetWidth","maxSpeedSquared","Math","pow","maxAngularVelocity","wallThickness","lastUpdateTimestamp","started","stopped","_handleCollision","that","pairs","pair","Sleeping","set","_dislodgeCheck","_handlePointerEvent","renderer","canvas","getBoundingClientRect","magnet","handlePointerEvent","_handleKeyPress","repeat","toggle","_handleBeforeUpdate","timestamp","update","Composite","allBodies","engine","angularVelocity","setAngularVelocity","velocity","speedSquared","ratio","sqrt","setVelocity","_insideBox","objectIds","has","_isEverythingSleepingOrEscaped","objectIdsRemaining","size","bind","boxHeight","clientHeight","boxWidth","clientWidth","Engine","gravity","enableSleeping","ballRadius","ballHeight","ballWidth","_createMagnet","ball","_createBall","walls","_createWalls","_createObjects","object","Set","attachToMagnet","toConsumableArray","addToWorld","Render","element","options","background","setWireframe","Events","on","document","addEventListener","focus","removeEventListener","off","delete","_this2","every","bodies","isSleeping","wallOptions","rectangle","xLimit","_initialX","circle","sprite","texture","restitution","frictionAir","frictionStatic","_this3","random","seedrandom","range","i","radius","border","wireframes","showSleeping","showAngleIndicator","allConstraints","Game","_Component","props","possibleConstructorReturn","getPrototypeOf","gameEngine","inherits","getElementById","CONTAINER_ID","getContainer","react_default","createElement","className","tabIndex","nonNull","start","_startEngine","_stopEngine","prevProps","prevState","Component","actionCreators","connect","toggleWireframeMode","onDoubleClick","Level","_getPrototypeOf2","_len","Array","_key","apply","handleClick","target","currentTarget","parseInt","onChange","numberOfLevels","StartScreen","ref","React","createRef","assertThisInitialized","onClick","onKeyPress","_handleClick","asyncToGenerator","mark","_callee","toggleFullscreen","window","orientation","lock","t0","screens","game","components_Score","components_Game","StartLevelScreen","component","App","es","src_screen","Fullscreenable","decomp","require","rootElement","ReactDOM","src_components_App"],"mappings":"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","file":"static/js/main.75136f53.chunk.js","sourcesContent":["// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport type { ScreenType } from '../screen';\n\nexport const START_GAME = 'START_GAME';\nexport type StartGameAction = {\n  type: typeof(START_GAME)\n};\n\nexport const LEVEL_COMPLETE = 'LEVEL_COMPLETE';\nexport type LevelCompleteAction = {\n  type: typeof(LEVEL_COMPLETE)\n};\n\nexport const GAME_COMPLETE = 'GAME_COMPLETE';\nexport type GameCompleteAction = {\n  type: typeof(GAME_COMPLETE)\n};\n\nexport const LEVEL_CHANGE = 'LEVEL_CHANGE';\nexport type LevelChangeAction = {\n  type: typeof(LEVEL_CHANGE),\n  payload: { level: number }\n};\n\nexport const START_LEVEL = 'START_LEVEL';\nexport type StartLevelAction = {\n  type: typeof(START_LEVEL)\n};\n\nexport const SCORE_UPDATE = 'SCORE_UPDATE';\nexport type ScoreUpdateAction = {\n  type: typeof(SCORE_UPDATE),\n  payload: { points: number }\n};\n\nexport const SCREEN_CHANGE = 'SCREEN_CHANGE';\nexport type ScreenChangeAction = {\n  type: typeof(SCREEN_CHANGE),\n  payload: { screen: ScreenType }\n};\n\nexport const TOGGLE_WIREFRAME_MODE = 'TOGGLE_WIREFRAME_MODE';\nexport type ToggleWireframeModeAction = {\n  type: typeof(TOGGLE_WIREFRAME_MODE)\n};\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\n\nimport { Action } from 'redux';\nimport { TOGGLE_WIREFRAME_MODE } from '../actionTypes';\n\nexport type DebugState = {\n  +wireframe: boolean\n}\n\nconst initialState: DebugState = {\n  wireframe: false\n}\n\nexport const debug = (state: DebugState = initialState, action: Action): DebugState => {\n  switch (action.type) {\n    case TOGGLE_WIREFRAME_MODE: {\n      return {...state, wireframe: !state.wireframe};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { LEVEL_CHANGE } from '../actionTypes';\n\nexport type LevelState = {\n  +current: number,\n  +last: number\n}\n\nconst initialState: LevelState = {\n  current: 1,\n  last: 5\n}\n\nexport const level = (state: LevelState = initialState, action: Action): LevelState => {\n  switch (action.type) {\n    case LEVEL_CHANGE: {\n      let level: number = action.payload.level;\n      if (level === null) {\n        level = state.current + 1;\n      }\n      if (level < 1 || level > state.last) {\n        throw new Error(`level out of range: ${level}`);\n      }\n      return {...state, current: level};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { SCORE_UPDATE } from '../actionTypes';\n\nexport type ScoreState = {\n  +current: number\n}\n\nconst initialState: ScoreState = {\n  current: 0\n}\n\nexport const score = (state: ScoreState = initialState, action: Action): ScoreState => {\n  let { current } = state;\n  switch (action.type) {\n    case SCORE_UPDATE: {\n      const points: number = action.payload.points;\n      current += points;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { Action } from 'redux';\nimport { SCREEN_CHANGE } from '../actionTypes';\nimport type { ScreenType } from '../../screen';\n\nexport type ScreenState = {\n  +current: ScreenType\n}\n\nconst initialState: ScreenState = {\n  current: \"start\",\n}\n\nexport const screen = (state: ScreenState = initialState, action: Action): ScreenState => {\n  switch (action.type) {\n    case SCREEN_CHANGE: {\n      const current: ScreenType = action.payload.screen;\n      return {...state, current};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { combineReducers } from \"redux\";\n\nimport { debug } from \"./debug\";\nimport { level } from \"./level\";\nimport { score } from \"./score\";\nimport { screen } from \"./screen\";\n\nexport default combineReducers({\n  debug,\n  level,\n  score,\n  screen\n});","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport _ from 'lodash';\n\ntype Message = string | () => string;\n\ntype Level = 'INFO' | 'DEBUG';\n\nconst levels: Level[] = ['INFO', 'DEBUG'];\n\nconst levelStringLengths: number[] = levels.map(\n  (level: Level) => level.length\n);\n\nconst widestLevel: number = _.max(levelStringLengths);\n\nexport class Log {\n\n  static info(message: Message) {\n    this.log('INFO', message);\n  }\n\n  static debug(message: Message) {\n    this.log('DEBUG', message);\n  }\n\n  static log(level: Level, message: Message) {\n    // If implement log-level setting, only evaluate function and timestamp if need to.\n    const now = new Date();\n    const messageString: string = (typeof message === 'function') ? message() : message;\n    console.log(`${now.toISOString()} ${level.padStart(widestLevel)} ${messageString}`)\n  }\n\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { takeEvery } from 'redux-saga/effects';\n\nimport type { Action } from 'redux';\n\nimport { Log } from '../../util/Log';\n\n// eslint-disable-next-line require-yield\nexport function* actionLogger(action: Action): Generator<*,*,*> {\n  Log.info(`Action: ${action.type}`);\n}\n\nexport function* actionLoggerListener(): Generator<*,*,*> {\n  yield takeEvery(\"*\", actionLogger);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  GAME_COMPLETE,\n  LEVEL_COMPLETE,\n  LEVEL_CHANGE,\n  START_LEVEL,\n  SCORE_UPDATE,\n  SCREEN_CHANGE,\n  TOGGLE_WIREFRAME_MODE,\n  START_GAME\n} from './actionTypes'\nimport type { ScreenType } from '../screen';\n\nexport const startGame = () => ({\n  type: START_GAME\n});\n\nexport const gameComplete = () => ({\n  type: GAME_COMPLETE\n});\n\nexport const levelComplete = () => ({\n  type: LEVEL_COMPLETE\n});\n\nexport const levelChange = (level: ?number = null) => ({\n  type: LEVEL_CHANGE,\n  payload: {\n    level: level\n  }\n});\n\nexport const startLevel = () => ({\n  type: START_LEVEL\n});\n\nexport const scoreUpdate = (points: number) => ({\n  type: SCORE_UPDATE,\n  payload: {\n    points: points\n  }\n});\n\nexport const toggleWireframeMode = () => ({\n  type: TOGGLE_WIREFRAME_MODE,\n});\n\nexport const screenChange = (screen: ScreenType) => ({\n  type: SCREEN_CHANGE,\n  payload: {\n    screen: screen\n  }\n});\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { GAME_COMPLETE } from '../actionTypes';\nimport { screenChange } from '../actions';\n\nexport function* gameComplete(): Generator<*,*,*> {\n  yield put(screenChange(\"gameComplete\"));\n}\n\nexport function* gameCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(GAME_COMPLETE, gameComplete);\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createSelector } from 'reselect'\n\nimport { type LevelState } from '../reducers/level';\n\ntype State = { level: LevelState }\n\nconst getLevel = (state: State) => state.level.current;\nconst getLastLevel = (state: State) => state.level.last;\n\nexport const isLastLevel = createSelector(\n  [getLevel, getLastLevel],\n  (level: number, lastLevel: number) => {\n    return level === lastLevel;\n  }\n)","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, select, takeEvery } from 'redux-saga/effects';\n\nimport { LEVEL_COMPLETE } from '../actionTypes';\nimport { levelChange, startLevel, gameComplete } from '../actions';\nimport { isLastLevel } from '../selectors';\n\nexport function* levelComplete(): Generator<*,*,*> {\n  if (yield select(isLastLevel)) {\n    yield put(gameComplete());\n  } else {\n    yield put(levelChange());\n    yield put(startLevel());\n  }\n}\n\nexport function* levelCompleteListener(): Generator<*,*,*> {\n  yield takeEvery(LEVEL_COMPLETE, levelComplete);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { delay } from 'redux-saga'\n\nimport { START_LEVEL } from '../actionTypes';\nimport { screenChange } from '../actions';\n\nexport function* startLevel(): Generator<*,*,*> {\n  yield put(screenChange(\"startLevel\"));\n  yield call(delay, 2500);\n  yield put(screenChange(\"game\"));\n}\n\nexport function* startLevelListener(): Generator<*,*,*> {\n  yield takeEvery(START_LEVEL, startLevel);\n}\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { START_GAME } from '../actionTypes';\nimport { startLevel } from '../actions';\n\nexport function* startGame(): Generator<*,*,*> {\n  yield put(startLevel());\n}\n\nexport function* startGameListener(): Generator<*,*,*> {\n  yield takeEvery(START_GAME, startGame);\n}\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { actionLoggerListener } from './actionLogger';\nimport { gameCompleteListener } from './gameComplete';\nimport { levelCompleteListener } from './levelComplete';\nimport { startLevelListener } from './startLevel';\nimport { startGameListener } from './startGame';\n\nexport default [\n  actionLoggerListener,\n  gameCompleteListener,\n  levelCompleteListener,\n  startLevelListener,\n  startGameListener\n];","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from \"./reducers\";\nimport sagas from './sagas';\n\nexport const storeFactory = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n  );\n  // $FlowFixMe - problem with Generator type parameters.\n  sagas.forEach((saga: Generator<*,*,*>) => {\n    sagaMiddleware.run(saga);\n  });\n  return store;\n};\n\n\n\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nexport class Util {\n\n  // Clamp value to be within the range [min, max].\n  static clamp(value: number, min: number, max: number): number {\n    if (max < min) {\n      throw new Error(`max of ${max} is less than min ${min} (with value of ${value})`);\n    }\n    if (value < min) {\n      value = min;\n    }\n    if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n\n  // Asserts that a maybe-typed value is not null or undefined.\n  static nonNull<T>(value: ?T): T {\n    if (value === null) {\n      throw new Error(\"null value.\");\n    }\n    if (value === undefined) {\n      throw new Error(\"undefined value.\");\n    }\n    return value;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Body,\n  Bodies,\n  Bounds,\n  Constraint,\n  World\n} from 'matter-js'\n\nimport { Log } from '../util/Log';\nimport { Util } from '../util/Util';\n\ntype Args = {\n  +x: number,\n  +y: number,\n  +minX: number,\n  +maxX: number,\n  +width: number,\n  +height: number,\n  +world: World,\n  +maxAcceleration?: number,\n  +maxSpeed?: number\n}\n\ntype Rect = {\n  left: number,\n  top: number,\n  right: number,\n  bottom: number\n};\n\nexport class Magnet {\n\n  +body: Body;\n  +constraints: Constraint[] = [];\n  +height: number;\n  +width: number;\n  +maxAcceleration: number;\n  +maxSpeed: number;\n  +minX: number;\n  +maxX: number;\n  +objects: Body[] = [];\n  +world: World;\n\n  acceleration: number = 0;\n  enabled: boolean = true;\n  speed: number = 0;\n  dragging: boolean = false;\n\n  constructor(args: Args) {\n    const x = args.x;\n    const y = args.y;\n    this.minX = args.minX;\n    this.maxX = args.maxX;\n    this.width = args.width;\n    this.height = args.height;\n    this.world = args.world;\n    this.maxAcceleration = (args.maxAcceleration === undefined) ? 0.005 : args.maxAcceleration;\n    this.maxSpeed = (args.maxSpeed === undefined) ? 1.3 : args.maxSpeed;\n    const peakHeight = this.height * 0.2;\n    const vertices = [\n      { x: -this.width / 2, y: - this.height / 2 },\n      { x:               0, y: - this.height / 2 - peakHeight },\n      { x:  this.width / 2, y: - this.height / 2 },\n      { x:  this.width / 2, y:   this.height / 2},\n      { x: -this.width / 2, y:   this.height / 2}\n    ];\n    this.body = Bodies.fromVertices(x, y, vertices, {\n      label: \"magnet\",\n      isStatic: true,\n      render: {\n        fillStyle: 'Grey'\n      }\n    });\n  }\n\n  // Bottom centre coordinates of magnet.\n  attachmentPosition(): {x: number, y: number} {\n    return { x: this.body.position.x, y: this.body.position.y + this.height / 2 };\n  }\n\n  // Register the Magnet's matter.js Body with the matter.js World.\n  addToWorld() {\n    World.add(this.world, this.body);\n  }\n\n  // Connect another Body to the Magnet.\n  attachToMagnet(other: Body) {\n    const constraint: Constraint = Constraint.create({\n      bodyA: this.body,\n      bodyB: other,\n      render: {\n        visible: false\n      }\n    })\n    this.constraints.push(constraint);\n    this.objects.push(other);\n    if (this.enabled) {\n      World.add(this.world, constraint);\n      this.reposition(other);\n    }\n  }\n\n  leftButtonPressed(event: PointerEvent) {\n    return event.buttons & 1;\n  }\n\n  insideRect(event: PointerEvent, rect: Rect) {\n    const x = event.clientX;\n    const y = event.clientY;\n    return !(x < rect.left || x > rect.right || y < rect.top || y > rect.bottom);\n  }\n\n  handlePointerEvent(\n    canvasRect: Rect,\n    event: PointerEvent) {\n    if (!event.isPrimary) {\n      // If multiple contact points are possible, ignore all but the primary\n      // (the first one for touch screens). Otherwise, magnet jumps between\n      // each contact point as events are received.\n      return;\n    }\n    if (this.dragging && event.button === 0 && event.type === 'pointerup' && this.insideRect(event, canvasRect)) {\n      // Ignoring pointerup event if it's outside the box means there's a way to\n      // change your mind about releasing the ball after start moving it.\n      this.setEnabled(false);\n    }\n    if (!this.leftButtonPressed(event)) {\n      this.dragging = false;\n      return;\n    }\n    const position = {\n      x: event.clientX - canvasRect.left,\n      y: event.clientY - canvasRect.top\n    };\n    const onMagnet = Bounds.contains(this.body.bounds, position);\n    if (onMagnet) {\n      this.dragging = true;\n      if (event.button === 0 && event.type === 'pointerdown') {\n        this.setEnabled(true);\n      }\n    }\n    if (this.dragging) {\n      this.stop();\n      Body.setPosition(this.body, { x: position.x, y: this.body.position.y});\n    }\n  }\n\n  // Start movement to left.\n  left() {\n    if (this.speed > 0) {\n      this.speed = 0;\n    }\n    this.acceleration = -this.maxAcceleration;\n  }\n\n  // Start movement to right.\n  right() {\n    if (this.speed < 0) {\n      this.speed = 0;\n    }\n    this.acceleration = this.maxAcceleration;\n  }\n\n  // Stop movement.\n  stop() {\n    this.acceleration = 0;\n    this.speed = 0;\n  }\n\n  // Handle matter.js update callback.\n  //\n  // dt - time since last update\n  update(dt: number) {\n    this.speed = Util.clamp(\n      this.speed + this.acceleration * dt,\n      -this.maxSpeed, this.maxSpeed);\n    const dx = this.speed * dt;\n    const x = Util.clamp(\n      this.body.position.x + dx,\n      this.minX, this.maxX);\n    const y = this.body.position.y;\n    Body.setPosition(this.body, { x, y });\n  }\n\n  // Turn the magnet on or off.\n  toggle() {\n    this.setEnabled(!this.enabled);\n  }\n\n  // Turn the magnet on or off.\n  setEnabled(enabled: boolean) {\n    if (enabled) {\n      if (!this.enabled) {\n        World.add(this.world, this.constraints);\n        this.objects.forEach((body: Body) => {\n          this.reposition(body);\n        });\n      }\n    } else {\n      if (this.enabled) {\n        World.remove(this.world, this.constraints);\n      }\n    }\n    this.enabled = enabled;\n  }\n\n  // If add Constraint back to World and object is far\n  // away from Magnet, it will generally accelerate\n  // through and past the Magnet. Instead, place it close\n  // where it should be in equilibrium (if it's a\n  // circle/square at least).\n  reposition(body: Body) {\n    const position = this.attachmentPosition();\n    const height: number = body.bounds.max.y - body.bounds.min.y;\n    position.y = position.y + height / 2;\n    Log.debug(`repositioning body with id: ${body.id} to: ${JSON.stringify(position)}`);\n    Body.setPosition(body, position);\n  }\n\n  // For testing.\n  getSpeed(): number {\n    return this.speed;\n  }\n\n}","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport {\n  Bodies,\n  Body,\n  Composite,\n  Engine,\n  Events,\n  Pair,\n  Render,\n  Sleeping,\n  World\n} from 'matter-js'\nimport _ from 'lodash';\nimport seedrandom from 'seedrandom';\n\nimport { Log } from '../util/Log';\nimport { Magnet } from './Magnet';\nimport { Util } from '../util/Util';\n\nexport class GameEngine {\n\n  +ball: Body;\n  +ballImageSize: number = 64; // pixels\n  +ballRadius: number;\n  +ballHeight: number;\n  +ballWidth: number;\n  +boxHeight: number;\n  +boxWidth: number;\n  +container: HTMLElement;\n  +engine: Engine;\n  +level: number;\n  +magnet: Magnet;\n  +magnetHeight: number = 15;\n  +magnetWidth: number = 50;\n  +maxSpeedSquared: number = Math.pow(7, 2);\n  +maxAngularVelocity: number = 0.5;\n  +levelComplete: () => void;\n  // The ids of all the \"objects\".\n  +objectIds: Set<number>;\n  // The ids of the \"objects\" that have not yet been dislodged.\n  +objectIdsRemaining: Set<number>;\n  +renderer: Render;\n  +scoreUpdate: (points: number) => void;\n  +walls: Body[];\n  +wallThickness: number = 50;\n\n  lastUpdateTimestamp: ?number = null;\n  started: boolean = false;\n  stopped: boolean = false;\n  wireframe: boolean;\n\n  constructor(\n    container: HTMLElement,\n    level: number,\n    wireframe: boolean,\n    levelComplete: () => void,\n    scoreUpdate: (points: number) => void) {\n    \n    this._dislodgeCheck = this._dislodgeCheck.bind(this);\n\n    this.levelComplete = levelComplete;\n    this.scoreUpdate = scoreUpdate;\n    this.level = level;\n    this.wireframe = wireframe;\n    this.container = container;\n    this.boxHeight = container.clientHeight;\n    this.boxWidth = container.clientWidth;\n    this.engine = Engine.create();\n    this.engine.world.gravity.y = 0.2;\n    this.engine.enableSleeping = true;\n    this.ballRadius = 1.025 * this.ballImageSize / 2.0\n    this.ballHeight = this.ballRadius;\n    this.ballWidth = this.ballRadius;\n    this.magnet = this._createMagnet();\n    this.ball = this._createBall(this.magnet);\n    const walls = this._createWalls();\n    const objects = this._createObjects();\n    const objectIds = _.map(objects, (object: Body) => {\n      return object.id;\n    });\n    this.objectIds = new Set(objectIds);\n    this.objectIdsRemaining = new Set(objectIds);\n    this.magnet.attachToMagnet(this.ball);\n    World.add(this.engine.world, [\n      ...walls,\n      this.ball,\n      ...objects\n    ]);\n    this.magnet.addToWorld();\n    Log.info('Body ids:');\n    Composite.allBodies(this.engine.world).forEach((body: Body) => {\n      Log.info(`${body.id} - ${body.label}`);\n    });\n    this.renderer = Render.create({\n      element: this.container,\n      engine: this.engine,\n      options: {\n        background: \"#fafafa\",\n        width: this.boxWidth,\n        height: this.boxHeight\n      }\n    });\n    this.setWireframe(this.wireframe);\n  }\n\n  start() {\n    if (this.started) {\n      throw new Error(\"already started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"cannot restart.\");\n    }\n    Events.on(this.engine, 'collisionStart', this._handleCollision);\n    Events.on(this.engine, 'beforeUpdate', this._handleBeforeUpdate);\n    Engine.run(this.engine);\n    Render.run(this.renderer);\n    document.addEventListener('keydown', this._handleKeyPress);\n    document.addEventListener('keyup', this._handleKeyPress);\n    this.renderer.canvas.addEventListener('pointerdown', this._handlePointerEvent);\n    this.renderer.canvas.addEventListener('pointermove', this._handlePointerEvent);\n    this.renderer.canvas.addEventListener('pointerup', this._handlePointerEvent);\n    // The canvas has the touch-action CSS attribute set, but the pepjs polyfill\n    // needs a DOM attribute instead: https://github.com/jquery/PEP#touch-action\n    this.renderer.canvas[\"touch-action\"] = \"none\";\n    this.container.focus();\n    this.started = true;\n  }\n\n  stop() {\n    if (!this.started) {\n      throw new Error(\"not started.\");\n    }\n    if (this.stopped) {\n      throw new Error(\"already stopped\");\n    }\n    this.renderer.canvas.removeEventListener('pointerup', this._handlePointerEvent);\n    this.renderer.canvas.removeEventListener('pointerdown', this._handlePointerEvent);\n    this.renderer.canvas.removeEventListener('pointermove', this._handlePointerEvent);\n    document.removeEventListener('keydown', this._handleKeyPress);\n    document.removeEventListener('keyup', this._handleKeyPress);\n    Render.stop(this.renderer);\n    Events.off(this.engine, 'collisionStart');\n    Events.off(this.engine, 'beforeUpdate');\n    this.renderer.canvas.remove();\n    this.started = false;\n    this.stopped = true;\n  }\n\n  _handleCollision = (event: (pairs: [Pair]) => void) => {\n    const that = this;\n    const pairs = event.pairs;\n    pairs.forEach((pair: Pair) => {\n      [pair.bodyA, pair.bodyB].forEach((body: Body) => {\n        Sleeping.set(body, false);\n        that._dislodgeCheck(body);\n      });\n    });\n  }\n\n  _dislodgeCheck: (Body => void);\n  _dislodgeCheck(body: Body) {\n    const dislodged = this.objectIdsRemaining.delete(body.id);\n    if (dislodged) {\n      Log.debug(`dislodged: ${body.id}`);\n      const points = 1;\n      this.scoreUpdate(points);\n    }\n  }\n\n  _handlePointerEvent = (event: PointerEvent) => {\n    const rect = this.renderer.canvas.getBoundingClientRect();\n    this.magnet.handlePointerEvent(rect, event);\n  }\n\n  _handleKeyPress = (event: KeyboardEvent) => {\n    if (event.repeat) {\n      return;\n    }\n    if (event.type === \"keydown\" && event.key === \" \") {\n      this.magnet.toggle();\n    }\n    if (event.type === \"keydown\") {\n      if (event.key === 'ArrowLeft') {\n        this.magnet.left();\n      } else if (event.key === 'ArrowRight') {\n        this.magnet.right();\n      }\n    } else if (event.type === \"keyup\") {\n      this.magnet.stop();\n    } else {\n      throw new Error(event);\n    }\n  }\n\n  _handleBeforeUpdate = (event: {timestamp: number}) => {\n    const that = this;\n    if (this.lastUpdateTimestamp === undefined) {\n      throw new Error(); // flow type refinement\n    }\n    if (!(this.lastUpdateTimestamp === null)) {\n      const dt: number = event.timestamp - this.lastUpdateTimestamp;\n      this.magnet.update(dt);\n    }\n    Composite.allBodies(this.engine.world).forEach((body: Body) => {\n      // Speed and angular velocity are clamped to reduce chance\n      // that ball or object can pass through walls.\n      const angularVelocity: number = Util.clamp(body.angularVelocity,\n        -this.maxAngularVelocity, this.maxAngularVelocity);\n      Body.setAngularVelocity(body, angularVelocity);\n      const velocity = body.velocity;\n      const speedSquared = velocity.x * velocity.x + velocity.y * velocity.y;\n      if (speedSquared > this.maxSpeedSquared) {\n        const ratio = Math.sqrt(this.maxSpeedSquared / speedSquared);\n        Body.setVelocity(body, {\n          x: velocity.x * ratio,\n          y: velocity.y * ratio\n        });\n      }\n      // In case an object is fast enough to pass through wall, remove\n      // it. Otherwise, it likely falls forever and the level never completes.\n      if (!that._insideBox(body) && that.objectIds.has(body.id)) {\n        Log.debug(`escaped: ${body.id}`);\n        World.remove(that.engine.world, body);\n        that._dislodgeCheck(body); // Hopefully never required.\n      }\n    });\n    if (this._isEverythingSleepingOrEscaped()) {\n      if (this.objectIdsRemaining.size === 0) {\n        this.levelComplete();\n      } else {\n        this.magnet.setEnabled(true);\n      }\n    }\n    this.lastUpdateTimestamp = event.timestamp;\n  }\n\n  _insideBox(body: Body): boolean {\n    const x: number = body.position.x;\n    const y: number = body.position.y;\n    return !(x < 0 || x > this.boxWidth || y < 0 || y > this.boxHeight);\n  }\n\n  _isEverythingSleepingOrEscaped() {\n    return _.every(this.engine.world.bodies, (body: Body) => {\n      return body.isSleeping || !this._insideBox(body);\n    });\n  }\n\n  _createWalls(): Body[] {\n    const wallOptions = {\n      isStatic: true,\n      render: {\n        fillStyle: 'LightGrey'\n      }\n    };\n    // matter.js does positioning using centre of mass...\n    const wallTop = Bodies.rectangle(this.boxWidth / 2, 0, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - T\" });\n    const wallBottom = Bodies.rectangle(this.boxWidth / 2, this.boxHeight, this.boxWidth, this.wallThickness, { ...wallOptions, label: \"wall - B\" });\n    const wallRight = Bodies.rectangle(this.boxWidth, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - R\" });\n    const wallLeft = Bodies.rectangle(0, this.boxHeight / 2, this.wallThickness, this.boxHeight, { ...wallOptions, label: \"wall - L\" });\n    const walls = [wallTop, wallBottom,  wallRight, wallLeft];\n    return walls;\n  }\n\n  // Initial x coordinate of magnet and ball.\n  _initialX(): number {\n    return 0.68 * (this.boxWidth - this.wallThickness / 2) + this.wallThickness / 2\n  }\n\n  _createMagnet(): Magnet {\n    const xLimit = this.wallThickness / 2 +\n      Math.max(this.magnetWidth / 2, this.ballWidth / 2) +\n      0.01 * this.boxWidth;\n    return new Magnet({\n      x: this._initialX(),\n      y: this.wallThickness / 2 + 0.01 * this.boxHeight + this.magnetHeight / 2,\n      minX: xLimit,\n      maxX: this.boxWidth - xLimit,\n      width: this.magnetWidth,\n      height: this.magnetHeight,\n      world: this.engine.world});\n  }\n\n  _createBall(magnet: Magnet): Body {\n    const x = magnet.attachmentPosition().x;\n    const y = magnet.attachmentPosition().y + this.ballRadius;\n    const ball = Bodies.circle(x, y, this.ballRadius, {\n      label: \"ball\",\n      render: {\n        sprite: {\n          texture: 'ball.png'\n        }\n      },\n      restitution: 0.5,\n      // density: 1,\n      frictionAir: 0,\n      frictionStatic: 0,\n    });\n    return ball;\n  }\n\n  _createObjects(): Body[] {\n    const random = seedrandom(this.level + 484726723);\n    const objects = []\n    _.range(0, this.level).forEach((i: number) => {\n      const radius = 10 + random() * 15;\n      const border = this.wallThickness / 2 + radius;\n      const x = border + (random() * (this.boxWidth - 2 * border));\n      const y = border + this.magnetHeight + this.ballHeight + (random() * (this.boxHeight - 2 * border - this.magnetHeight - this.ballHeight));\n      const object = Bodies.circle(x, y, radius, {\n        label: `object ${i}`,\n        isStatic: false,\n        isSleeping: true\n      });\n      objects.push(object);\n    });\n    return objects;\n  }\n\n  setWireframe(enabled: boolean) {\n    this.wireframe = enabled;\n    this.renderer.options.wireframes = enabled;\n    this.renderer.options.showSleeping = enabled;\n    this.renderer.options.showAngleIndicator = enabled;\n  }\n\n  getBodyCount() {\n    return Composite.allBodies(this.engine.world).length;\n  }\n\n  getConstraintCount() {\n    return Composite.allConstraints(this.engine.world).length;\n  }\n\n}\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { GameEngine } from '../engine/GameEngine';\nimport { levelComplete, scoreUpdate } from '../redux/actions';\nimport { type DebugState } from '../redux/reducers/debug'\nimport { type LevelState } from '../redux/reducers/level'\nimport { Util } from '../util/Util';\n\ntype Props = {\n  level: number,\n  wireframe: boolean,\n  levelComplete: () => void,\n  scoreUpdate: (points: number) => void\n}\n\ntype State = {\n}\n\nexport class Game extends Component<Props,State> {\n\n  static CONTAINER_ID = \"matter_js_container\";\n\n  static getContainer(): ?HTMLElement {\n    return document.getElementById(Game.CONTAINER_ID);\n  }\n\n  // Set keyboard focus on the Game component.\n  //\n  // TODO a more elegant way of setting keyboard focus.\n  // ...CONTAINER_ID should have different value for each Game instance.\n  static focus() {\n    const container = Game.getContainer();\n    if (container) {\n      container.focus();\n    }\n  }\n\n  gameEngine: ?GameEngine;\n\n  constructor(props: Props) {\n    super(props);\n    this.gameEngine = null;\n  }\n\n  render() {\n    if (this.gameEngine) {\n      this.gameEngine.setWireframe(this.props.wireframe);\n    }\n    return (\n      // Need tabIndex, otherwise can't get focus and capture key events.\n      <div\n        className=\"Game\"\n        id={Game.CONTAINER_ID}\n        tabIndex=\"0\" />\n    );\n  }\n\n  _startEngine() {\n    const container = Util.nonNull(Game.getContainer());\n    this.gameEngine = new GameEngine(\n      container,\n      this.props.level,\n      this.props.wireframe,\n      this.props.levelComplete,\n      this.props.scoreUpdate);\n    this.gameEngine.start();\n  }\n\n  _stopEngine() {\n    if (this.gameEngine) {\n      this.gameEngine.stop();\n      this.gameEngine = null;\n    }\n  }\n\n  // React lifecycle.\n  componentDidMount() {\n    this._startEngine();\n  }\n\n  // React lifecycle.\n  componentWillUnmount() {\n    this._stopEngine();\n  }\n\n  // React lifecycle.\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.props.level === prevProps.level) {\n      return;\n    }\n    this._stopEngine();\n    this._startEngine();\n  }\n\n}\n\n// TODO Should LevelState/DebugState etc. include key too?\nconst mapStateToProps = (state: {level: LevelState, debug: DebugState}) => {\n  const level = state.level.current;\n  const wireframe = state.debug.wireframe;\n  return { level, wireframe };\n};\nconst actionCreators = {\n  levelComplete,\n  scoreUpdate\n}\nexport default connect(mapStateToProps, actionCreators)(Game);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\n\nimport type { ScoreState } from '../redux/reducers/score';\nimport { toggleWireframeMode } from '../redux/actions';\n\ntype Props = {\n  score: number,\n  toggleWireframeMode: () => void\n}\n\nexport const Score = (props: Props) => {\n  return (\n    <div className=\"Score\" onDoubleClick={props.toggleWireframeMode}>{props.score}</div>\n  );\n}\n\nconst mapStateToProps = (state: {score: ScoreState}) => {\n  return { score: state.score.current };\n}\nconst actionCreators = {\n  toggleWireframeMode\n};\nexport default connect(mapStateToProps, actionCreators)(Score);","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport type { LevelState } from '../redux/reducers/level';\n\ntype Props = {\n  level: number\n};\n\nexport const StartLevelScreen = (props: Props) => {\n  return (\n    <div>Level {props.level}</div>\n  );\n};\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  return { level };\n};\nconst actionCreators = {};\n\nexport default connect(mapStateToProps, actionCreators)(StartLevelScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\n\nimport { levelChange } from '../redux/actions';\nimport type { LevelState } from '../redux/reducers/level';\n\ntype Props = {\n  level: number,\n  numberOfLevels: number,\n  levelChange: (number) => void\n}\n\nexport class Level extends Component<Props> {\n\n  render() {\n    return <select value={this.props.level} onChange={this.handleClick}> \n      {_.range(1, this.props.numberOfLevels + 1).map((i: number) =>\n        <option key={i} value={i}>{i}</option>\n      )}\n    </select>;\n  }\n\n  handleClick = (event: SyntheticEvent<HTMLSelectElement>) => {\n    const target: HTMLSelectElement = event.currentTarget;\n    if (target) {\n      const level: number = parseInt(target.value);\n      this.props.levelChange(level);\n    }\n  }\n\n}\n\nconst mapStateToProps = (state: {level: LevelState}) => {\n  const level = state.level.current;\n  const numberOfLevels = state.level.last\n  return { level, numberOfLevels };\n};\nconst actionCreators = {\n  levelChange\n};\nexport default connect(mapStateToProps, actionCreators)(Level);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport Level from '../components/Level';\nimport { startGame } from '../redux/actions';\n\ntype Props = {\n  startGame: () => void,\n  toggleFullscreen: () => void\n};\n\nexport class StartScreen extends Component<Props> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  ref: { current: any } = React.createRef();\n\n  constructor(props: Props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  render() {\n    const showLevelSelector: boolean =\n      process.env.NODE_ENV === \"development\" ||\n      process.env.NODE_ENV === \"test\";\n    const level = showLevelSelector ? <Level /> : null;\n    return (\n      <div\n        ref={this.ref}\n        tabIndex=\"0\"\n        onClick={this.handleClick}\n        onKeyPress={this.handleClick}\n        className=\"StartScreen\">\n        <p>Touch screen, click or press any key to start game.</p>\n        <p>Use your finger, mouse or arrow keys to position the magnet.</p>\n        <p>Release finger/button or press space to turn the magnet on or off.</p>\n        <p>You move to the next level when all the objects (including the ball) are at the bottom of the box.</p>\n        <p>Double clicking/tapping on score toggles debug mode.</p>\n        {level}\n      </div>\n    );\n  }\n\n  handleClick: () => void; // Allows binding in constructor without flow error.\n  async handleClick() {\n    this.props.toggleFullscreen(); // Can only be called from UI event.\n    this.props.startGame();\n    // Avoid resizing the screen while physics engine is running.\n    if (window.screen &&\n      window.screen.orientation &&\n      window.screen.orientation.lock &&\n      window.screen.orientation.type) {\n      // https://w3c.github.io/screen-orientation/\n      try {\n        await window.screen.orientation.lock(window.screen.orientation.type);\n      } catch (e) {\n        // NotSupportedError.\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.ref.current.focus();\n  }\n\n}\n\nconst mapStateToProps = null;\nconst actionCreators = { startGame };\n\nexport default connect(mapStateToProps, actionCreators)(StartScreen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport type { ScreenState } from '../redux/reducers/screen';\nimport GameScreen from './GameScreen';\nimport GameCompleteScreen from './GameCompleteScreen';\nimport StartLevelScreen from './StartLevelScreen';\nimport StartScreen from './StartScreen';\n\nconst screens = {\n  \"game\": GameScreen,\n  \"gameComplete\": GameCompleteScreen,\n  \"startLevel\": StartLevelScreen,\n  \"start\": StartScreen\n}\n\nexport type ScreenType = $Keys<typeof screens>;\n\ntype Props = {\n  +screen: ScreenType,\n  +toggleFullscreen: () => void\n}\n\nconst Screen = (props: Props) => {\n  const component = screens[props.screen];\n  return React.createElement(\n    component,\n    { toggleFullscreen: props.toggleFullscreen },\n    null\n  );\n}\n\nexport const mapStateToProps = (state: {screen: ScreenState}) => {\n  const screen = state.screen.current;\n  return { screen };\n};\nconst actionCreators = {};\nexport default connect(mapStateToProps, actionCreators)(Screen);\n","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\nimport Game from '../components/Game';\nimport Score from '../components/Score';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div className=\"GameScreen\">\n      <Score />\n      <Game />\n    </div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React from 'react';\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div>Game Complete</div>\n  );\n};","// @flow\n//\n// (c) 2018-2019 Jeremy Green\n\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport Fullscreenable from 'react-fullscreenable';\n\nimport { storeFactory } from '../redux/store';\nimport './App.css';\nimport Screen from '../screen';\n\ntype Props = {\n  isFullscreen: boolean,\n  toggleFullscreen: () => void\n};\n\ntype State = {\n};\n\nclass App extends Component<Props,State> {\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  store: Object;\n\n  constructor(props: Props) {\n    super(props);\n    this.store = storeFactory();\n  }\n\n  render() {\n    return (\n      <Provider store={this.store}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Screen toggleFullscreen={this.props.toggleFullscreen}/>\n          </header>\n        </div>\n      </Provider>\n    );\n  }\n\n}\n\nexport default Fullscreenable()(App);\n","// @flow\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Util } from './util/Util'\n\n// https://www.w3.org/TR/pointerevents/ polyfill.\nimport 'pepjs';\n\n// https://github.com/liabru/matter-js/issues/559\nwindow.decomp = require('poly-decomp');\n\nconst rootElement = Util.nonNull(document.getElementById('root'));\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}